<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CSS兼容问题（PC端）</title>
      <link href="/2020/07/10/31245.html"/>
      <url>/2020/07/10/31245.html</url>
      
        <content type="html"><![CDATA[<h1><span id="css-jian-rong-wen-ti-pc-duan">CSS兼容问题（PC端）</span><a href="#css-jian-rong-wen-ti-pc-duan" class="header-anchor">.</a></h1><blockquote><p>浏览器兼容性问题，通常是因为不同浏览器对同一端代码有不同的解析，造成页面显示不统一的情况</p></blockquote><h2><span id="yi-qi-yin">一、起因</span><a href="#yi-qi-yin" class="header-anchor">.</a></h2><ul><li>浏览器不同 <ul><li>IE</li><li>FireFox</li><li>Chrome</li><li>Opera</li><li>Safari</li><li>。。。</li></ul></li><li>浏览器版本不同<ul><li>IE6 IE7 。。。</li><li>IE9 。。。（遵循W3C规范，之前不遵循，其他浏览器遵循，所以说主要兼容来自IE9版本之前的IE浏览器）</li></ul></li></ul><h2><span id="er-css-hack">二、CSS Hack</span><a href="#er-css-hack" class="header-anchor">.</a></h2><blockquote><p>为了让页面形成统一的效果，要针对不同的浏览器或不同版本写出对应可解析的CSS样式，所以我们就把这个针对不同浏览器/版本而写CSS的过程叫<strong>CSS Hack</strong></p></blockquote><p>简单理解，根据不同浏览器/版本写样式</p><h3><span id="1-ie-tiao-jian-zhu-shi-fa">1.IE条件注释法</span><a href="#1-ie-tiao-jian-zhu-shi-fa" class="header-anchor">.</a></h3><blockquote><p>在正常代码之外添加判别IE浏览器或对应版本的条件注释，符合条件的浏览器或者版本号才执行里边的代码</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 小于等于IE8 识别内容 --></span><span class="token comment" spellcheck="true">&lt;!--[if lte IE8]>    想要执行的代码&lt;![endif]--></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="2-css-shu-xing-qian-zhui-fa">2.CSS属性前缀法</span><a href="#2-css-shu-xing-qian-zhui-fa" class="header-anchor">.</a></h3><blockquote><p>给CSS的属性添加前缀。</p><p>*可以被IE6/IE7识别</p><p>_只能被IE6识别</p><p>IE6~IE10可以识别 \9</p><p>IE6不能识别 !important </p><p>FireFox不能识别 *  _ \9</p></blockquote><p>在标准模式下</p><ul><li>“ _ “ IE6专有的Hack</li><li>“ \9 “ IE6~IE10 都生效</li><li>“ \0 “ IE8~IE10 都生效</li><li>“ \9\0 “ IE9/IE10</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector">h1 </span><span class="token punctuation">{</span>        <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#111</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/* all */</span>        <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#222</span><span class="token entity" title="\9">\9</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/* IE */</span>        *<span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#333</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/* IE6/IE7 */</span>        <span class="token property">_color</span><span class="token punctuation">:</span> <span class="token hexcode">#444</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/* IE6 */</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>IETester软件</p><p>测试IE兼容性</p></blockquote><h3><span id="3-xuan-ze-qi-qian-zhui-fa">3.选择器前缀法</span><a href="#3-xuan-ze-qi-qian-zhui-fa" class="header-anchor">.</a></h3><ul><li>IE6/IE7可识别 *div{}</li><li>IE7可识别 *+div{}</li><li>@media screen\9{}          IE6/IE7</li><li>@media \0screen{}         IE8</li><li>@media  \0screen,screen\9{}         IE6/IE7/IE8</li><li>@media  screen\0{}           IE8/9/10</li><li>@media  screen and (min-width: 100px\0){}          IE9/10</li><li>。。。</li></ul><h2><span id="san-liu-lan-qi-si-you-shu-xing">三、浏览器私有属性</span><a href="#san-liu-lan-qi-si-you-shu-xing" class="header-anchor">.</a></h2><ul><li>-moz代表FireFox浏览器私有属性</li><li>-ms代表IE浏览器私有属性</li><li>-webkit代表Chrome、Safari私有属性</li><li>-o代表Opera私有属性</li></ul><blockquote><p>书写要求：标准写在最后，兼容性写在前面</p></blockquote><pre class="line-numbers language-css"><code class="language-css"><span class="token property">-webkit-transform</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span>-<span class="token number">3</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">-moz-transform</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span>-<span class="token number">3</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">-ms-transforn</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span>-<span class="token number">3</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">-o-transforn</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span>-<span class="token number">3</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">transforn</span><span class="token punctuation">:</span><span class="token function">rotate</span><span class="token punctuation">(</span>-<span class="token number">3</span>deg<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>为什么会出现私有属性呢？这是因为<strong>制定HTML和CSS标准的组织w3c动作是很慢的</strong>。</p><ul><li>通常，有W3C组织成员提出一个新属性，比如说圆角border-radius，大家都觉得很好，但w3c制定标准，要走很复杂的程序、审查等，而浏览器市场推广时间紧，如果一个属性已经够成熟了，就会在浏览器中加入支持。</li><li>但是为避免日后w3c公布标准时有所变更，会加入一个私有前缀，比如  -webkit- border-radius，<strong>通过这种方式来提前支持新属性</strong>，等到日后w3c公布了标准，border-radius的标准写法确立之后，再让新版的浏览器支持border-radius这种写法。</li></ul><p>彼得朱 链接：<a href="https://www.jianshu.com/p/a6f52fe96e6e" target="_blank" rel="noopener">https://www.jianshu.com/p/a6f52fe96e6e</a></p><h2><span id="si-liu-lan-qi-yang-shi-chu-shi-hua">四、浏览器样式初始化</span><a href="#si-liu-lan-qi-yang-shi-chu-shi-hua" class="header-anchor">.</a></h2><blockquote><p>解决不同浏览器/版本代码解析效果不同  –  把默认样式归零</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector">blockquote,body,button,dd,dl,dt,fieldset,form,h1,h2,h3,h4,h5,h6,hr,input,legend,li,ol,p,pre,td,textarea,th,ul </span><span class="token punctuation">{</span>        <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token comment" spellcheck="true">/* *{margin:0;padding:0;} */</span>    <span class="token selector">body, button, input, select, textarea </span><span class="token punctuation">{</span>        <span class="token property">font</span><span class="token punctuation">:</span> <span class="token number">12</span>px/<span class="token number">1.5</span>tahoma, arial, <span class="token entity" title="\5b8b">\5b8b</span><span class="token entity" title="\4f53">\4f53</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/* 宋体 */</span>    <span class="token punctuation">}</span>     <span class="token selector">h1, h2, h3, h4, h5, h6 </span><span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">address, cite, dfn, em, var </span><span class="token punctuation">{</span>        <span class="token property">font-style</span><span class="token punctuation">:</span>normal<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">code, kbd, pre, samp </span><span class="token punctuation">{</span>        <span class="token property">font-family</span><span class="token punctuation">:</span>couriernew, courier, monospace<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">small </span><span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">12</span>px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">ul, ol </span><span class="token punctuation">{</span>        <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">a </span><span class="token punctuation">{</span>        <span class="token property">text-decoration</span><span class="token punctuation">:</span> none    <span class="token punctuation">}</span>    <span class="token selector">a<span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>        <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">sup </span><span class="token punctuation">{</span>        <span class="token property">vertical-align</span><span class="token punctuation">:</span> text-top<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">sub </span><span class="token punctuation">{</span>        <span class="token property">vertical-align</span><span class="token punctuation">:</span> text-bottom<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">legend </span><span class="token punctuation">{</span>        <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#000</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">fieldset, img </span><span class="token punctuation">{</span>        <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">button, input, select, textarea </span><span class="token punctuation">{</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">table </span><span class="token punctuation">{</span>        <span class="token property">border-collapse</span><span class="token punctuation">:</span> collapse<span class="token punctuation">;</span>        <span class="token property">border-spacing</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1><span id="bu-chong">补充</span><a href="#bu-chong" class="header-anchor">.</a></h1><p><a href="https://www.jb51.net/css/571918.html" target="_blank" rel="noopener">https://www.jb51.net/css/571918.html</a></p><p><strong>最全整理浏览器兼容性问题与解决方案</strong>： <a href="https://wenku.baidu.com/view/1ceb47637f21af45b307e87101f69e314332fae9.html?fr=search" target="_blank" rel="noopener">https://wenku.baidu.com/view/1ceb47637f21af45b307e87101f69e314332fae9.html?fr=search</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> 兼容问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>响应式Web</title>
      <link href="/2020/07/10/41780.html"/>
      <url>/2020/07/10/41780.html</url>
      
        <content type="html"><![CDATA[<h2><span id="xiang-ying-shi-web">响应式Web</span><a href="#xiang-ying-shi-web" class="header-anchor">.</a></h2><h3><span id="xiang-ying-shi-bu-ju"><strong>响应式布局</strong></span><a href="#xiang-ying-shi-bu-ju" class="header-anchor">.</a></h3><p>简单理解，就是根据不同的屏幕尺寸写不同的样式</p><h3><span id="bi-xu-you-viewport">必须有 viewport</span><a href="#bi-xu-you-viewport" class="header-anchor">.</a></h3><p>告诉<strong>手机浏览器</strong>，这个网站是响应式的</p><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 内容设备宽度,一倍的缩放 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width,initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 告诉手机浏览器，这个网站是响应式的 --></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3><span id="xu-yao-de-yang-shi-biao">需要的样式表</span><a href="#xu-yao-de-yang-shi-biao" class="header-anchor">.</a></h3><p>（看你需要的设备,当然可以写在一个文件里,详情参看media query）</p><blockquote><p>桌面端</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 当宽度大于等于992px 就会加载该样式表 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(min-width: 992px)<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>desktop.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>移动端</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 当宽度小于等于767px 就会加载该样式表 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(max-width: 767px)<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mobile.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>公共部分 (不冲突的部分)</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 公共样式 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>common.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>以上用到的media的使用可以参看媒体查询</p><h3><span id="mei-ti-cha-xun-media-query"><mark>媒体查询 media query</mark></span><a href="#mei-ti-cha-xun-media-query" class="header-anchor">.</a></h3><blockquote><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Media_queries" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Media_queries</a></p></blockquote><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* css文件内 */</span><span class="token comment" spellcheck="true">/* 公共样式 */</span><span class="token atrule"><span class="token rule">@media</span> screen and <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 992px<span class="token punctuation">)</span></span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* 桌面端样式 */</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@media</span> screen and <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 768px<span class="token punctuation">)</span> and <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 991px<span class="token punctuation">)</span></span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* ipad端样式 */</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@media</span> screen and <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 767px<span class="token punctuation">)</span></span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* 移动端样式 */</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4><span id="yan-shi">演示</span><a href="#yan-shi" class="header-anchor">.</a></h4><blockquote><p>html body部分</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>普通布局</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 普通布局 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span></span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">85%</span><span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span>>div</span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">32%</span><span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#FBC33A</span><span class="token punctuation">;</span>        <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>        <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">15</span>px<span class="token punctuation">;</span>        <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">2%</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span>>div<span class="token pseudo-class">:nth-child(3n)</span></span><span class="token punctuation">{</span>        <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/kaiminliu/Images/pic%E6%99%AE%E9%80%9A%E5%B8%83%E5%B1%80.gif" alt></p><blockquote><p>响应式布局</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 响应式布局 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.box</span></span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">85%</span><span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.box</span>>div</span><span class="token punctuation">{</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#FBC33A</span><span class="token punctuation">;</span>        <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>        <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">15</span>px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/* 桌面端样式 */</span>    <span class="token atrule"><span class="token rule">@media</span> screen and <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 992px<span class="token punctuation">)</span></span><span class="token punctuation">{</span>        <span class="token selector"><span class="token class">.box</span>>div</span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">32%</span><span class="token punctuation">;</span>            <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">2%</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.box</span>>div<span class="token pseudo-class">:nth-child(3n)</span></span><span class="token punctuation">{</span>            <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/* ipad端样式 */</span>    <span class="token atrule"><span class="token rule">@media</span> screen and <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 768px<span class="token punctuation">)</span> and <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 991px<span class="token punctuation">)</span></span><span class="token punctuation">{</span>        <span class="token selector"><span class="token class">.box</span>>div</span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">49%</span><span class="token punctuation">;</span>            <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">2%</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.box</span>>div<span class="token pseudo-class">:nth-child(2n)</span></span><span class="token punctuation">{</span>            <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/* 移动端样式 */</span>    <span class="token atrule"><span class="token rule">@media</span> screen and <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 767px<span class="token punctuation">)</span></span><span class="token punctuation">{</span>        <span class="token selector"><span class="token class">.box</span>>div</span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/kaiminliu/Images/pic%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80.gif" alt></p><h3><span id="meta-viewport"><mark>meta</mark> <mark>viewport</mark></span><a href="#meta-viewport" class="header-anchor">.</a></h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width,initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 告诉手机浏览器，这个网站是响应式的 --></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>通俗的讲，移动设备上的viewport就是设备的屏幕上能用来显示我们的网页的那一块区域，在具体一点，就是浏览器上(也可能是一个app中的webview)用来显示网页的那部分区域，但viewport又不局限于浏览器可视区域的大小，它可能比浏览器的可视区域要大，也可能比浏览器的可视区域要小。在默认情况下，一般来讲，移动设备上的viewport都是要大于浏览器可视区域的，这是因为考虑到移动设备的分辨率相对于桌面电脑来说都比较小，所以为了能在移动设备上正常显示那些传统的为桌面浏览器设计的网站，移动设备上的浏览器都会把自己默认的viewport设为980px或1024px（也可能是其它值，这个是由设备自己决定的），但带来的后果就是浏览器会出现横向滚动条，因为浏览器可视区域的宽度是比这个默认的viewport的宽度要小的。下图列出了一些设备上浏览器的默认viewport的宽度。</p><p><a href="https://www.runoob.com/w3cnote/viewport-deep-understanding.html" target="_blank" rel="noopener">https://www.runoob.com/w3cnote/viewport-deep-understanding.html</a></p></blockquote><p><img src="/2020/07/10/41780/1532326250-2008-201407.png" alt></p><h4><span id="css-zhong-de-1px-bu-deng-yu-she-bei-zhong-de-1px"><strong><mark>css中的1px不等于设备中的1px</mark></strong></span><a href="#css-zhong-de-1px-bu-deng-yu-she-bei-zhong-de-1px" class="header-anchor">.</a></h4><p>手机从iPhone4开始，css中1px是iPone4下的2px，后面的机器比例更大（用原本只能装480*320个像素的屏幕,由于Retina(视网膜)屏幕的显示技术,装入960*640个像素，清晰度提升了）</p><h3><span id="font-setting">Font Setting</span><a href="#font-setting" class="header-anchor">.</a></h3><blockquote><p>使用相对长度或视口相对长度</p><p>1rem = 15px</p></blockquote><h4><span id="1-wen-ben-xiang-dui-chang-du">1.文本相对长度</span><a href="#1-wen-ben-xiang-dui-chang-du" class="header-anchor">.</a></h4><table><thead><tr><th>长度单位</th><th>解释</th></tr></thead><tbody><tr><td>em</td><td>相对于当前对象内文本的字体尺寸</td></tr><tr><td>ex</td><td>相对于字符x的高度一半</td></tr><tr><td>ch</td><td>数字0的宽度</td></tr><tr><td>rem</td><td>相对于当前页面的根元素&lt;/html&gt;规定的font-size字体大小属性值的倍数</td></tr></tbody></table><h4><span id="2-shi-kou-viewport-xiang-dui-chang-du">2.视口(viewport)相对长度</span><a href="#2-shi-kou-viewport-xiang-dui-chang-du" class="header-anchor">.</a></h4><blockquote><p>视口指的是浏览器的可视区域，其宽度和浏览器窗口的宽度保持一致</p></blockquote><table><thead><tr><th>长度单位</th><th>解释</th></tr></thead><tbody><tr><td>vw</td><td>相对于视口的宽度，视口为均分为100vw</td></tr><tr><td>vh</td><td>相对于视口的高度，视口为均分为100vh</td></tr><tr><td>vmax</td><td>相对于视口的宽度和宽度的中的较大值，视口为均分为100vmax</td></tr><tr><td>wmin</td><td>相对于视口的宽度和宽度的中的较较小值，视口为均分为100vmax</td></tr></tbody></table><h3><span id="image-size">Image Size</span><a href="#image-size" class="header-anchor">.</a></h3><blockquote><p>显示图片 准备3种尺寸  （一下指定是宽高）</p><ul><li>1x ：图片尺寸 刚好等于 图片显示区域</li><li>2x ：图片尺寸 刚好等于 图片显示区域的两倍</li><li>3x ：图片尺寸 刚好等于 图片显示区域的三倍</li></ul><p>图片选择时，根据设备不同(高清支持情况)，显示对应的图片</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>picture</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">srcset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://placehold.it/600x600 2x,https://placehold.it/900x900 3x<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://placehold.it/300X300<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>picture</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>300x300<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://placehold.it/300X300<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>600x600<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://placehold.it/600x600<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>900x900<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://placehold.it/900x900<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/kaiminliu/Images/pic%E5%93%8D%E5%BA%94%E5%BC%8F900x900.png" alt></p><h2><span id="bu-chong">补充</span><a href="#bu-chong" class="header-anchor">.</a></h2><h3><span id="flex-dan-xing-bu-ju">flex弹性布局</span><a href="#flex-dan-xing-bu-ju" class="header-anchor">.</a></h3><blockquote><p><a href="http://www.ruanyifeng.com/" target="_blank" rel="noopener">阮一峰的网络日志：Flex 布局教程：语法篇</a></p></blockquote><h3><span id="zai-xian-bian-ma-css-xue-xi">在线编码、css学习</span><a href="#zai-xian-bian-ma-css-xue-xi" class="header-anchor">.</a></h3><blockquote><p><a href="https://codepen.io/" target="_blank" rel="noopener">https://codepen.io/</a></p></blockquote><h3><span id="css-zhong-wen-shou-ce">css中文手册</span><a href="#css-zhong-wen-shou-ce" class="header-anchor">.</a></h3><blockquote><p><a href="http://css.cuishifeng.cn/" target="_blank" rel="noopener">http://css.cuishifeng.cn/</a></p></blockquote><blockquote><p><a href="https://www.runoob.com/cssref/css-reference.html" target="_blank" rel="noopener">https://www.runoob.com/cssref/css-reference.html</a></p></blockquote><h3><span id="tailwind-css">Tailwind CSS</span><a href="#tailwind-css" class="header-anchor">.</a></h3><h4><span id="yi-ge-gong-ju-ji-css-kuang-jia-zhu-ni-kuai-su-shi-xian-ding-zhi-hua-de-wang-zhan-she-ji">一个工具集 CSS 框架，助你快速实现定制化的网站设计。</span><a href="#yi-ge-gong-ju-ji-css-kuang-jia-zhu-ni-kuai-su-shi-xian-ding-zhi-hua-de-wang-zhan-she-ji" class="header-anchor">.</a></h4><blockquote><p><a href="https://www.tailwindcss.cn/" target="_blank" rel="noopener">https://www.tailwindcss.cn/</a></p></blockquote><blockquote><p>640px 以下 基本上是手机</p><p>768px以上 基本上是ipad <strong>竖屏</strong>状态</p><p>1024px以上 基本是指电脑或 ipad <strong>横屏</strong>状态</p><p>1280px以上就是电脑屏幕尺寸</p></blockquote><h3><span id="bootstrap">Bootstrap</span><a href="#bootstrap" class="header-anchor">.</a></h3><h4><span id="jian-ji-zhi-guan-qiang-han-de-qian-duan-kai-fa-kuang-jia-rang-web-kai-fa-geng-xun-su-jian-dan">简洁、直观、强悍的前端开发框架，让web开发更迅速、简单。</span><a href="#jian-ji-zhi-guan-qiang-han-de-qian-duan-kai-fa-kuang-jia-rang-web-kai-fa-geng-xun-su-jian-dan" class="header-anchor">.</a></h4><p><a href="https://v3.bootcss.com/" target="_blank" rel="noopener">Bootstrap3中文文档(v3.3.7)</a></p><blockquote><p><a href="https://www.bootcss.com/" target="_blank" rel="noopener">https://www.bootcss.com/</a></p></blockquote><blockquote><p>576px 以下 基本上是手机</p><p>768px以上 基本上是ipad <strong>竖屏</strong>状态</p><p>992px以上 基本是指电脑或 ipad <strong>横屏</strong>状态</p><p>1200px以上就是电脑屏幕尺寸</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> 响应式 </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传-fileupload</title>
      <link href="/2020/07/09/5100.html"/>
      <url>/2020/07/09/5100.html</url>
      
        <content type="html"><![CDATA[<h1><span id="wen-jian-shang-chuan">文件上传</span><a href="#wen-jian-shang-chuan" class="header-anchor">.</a></h1><h3><span id="1-zhun-bei-gong-zuo">1.准备工作</span><a href="#1-zhun-bei-gong-zuo" class="header-anchor">.</a></h3><p>对于文件上传，浏览器在上传的过程中是将文件以流的形式提交到服务器端的。</p><p>一般选择采用Apache的开源工具common-fileupload这个文件上传组件。</p><p>common-fileupload是依赖于common-io这个包的，所以我们需要这两个jar包</p><ul><li><p>common-fileupload : <a href="https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload" target="_blank" rel="noopener">https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload</a></p></li><li><p>common-io :  <a href="https://mvnrepository.com/artifact/commons-io/commons-io/" target="_blank" rel="noopener">https://mvnrepository.com/artifact/commons-io/commons-io/</a></p></li></ul><h6><span id="maven-yi-lai">maven依赖</span><a href="#maven-yi-lai" class="header-anchor">.</a></h6><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>commons-fileupload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>commons-fileupload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- https://mvnrepository.com/artifact/commons-io/commons-io --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>commons-io<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>commons-io<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="2-shi-yong-lei-jie-shao">2.使用类介绍</span><a href="#2-shi-yong-lei-jie-shao" class="header-anchor">.</a></h3><h4><span id="wen-jian-shang-chuan-zhu-yi-shi-xiang-diao-you">文件上传注意事项(调优)</span><a href="#wen-jian-shang-chuan-zhu-yi-shi-xiang-diao-you" class="header-anchor">.</a></h4><ul><li>为保证服务器安全，上传文件应该放在外界无法直接访问的目录，比如放在<code>WEB-INF</code>目录下</li><li>为了防止文件覆盖的现象发生，要为上传产生一个唯一的文件名<ul><li>时间戳（不太安全：不同用户同一时间上传同一文件）</li><li>uuid 唯一识别的通用码<ul><li><code>UUID.randomUUID()</code></li></ul></li><li>md5</li><li>。。。</li></ul></li><li>要限制上传文件的最大值<ul><li>服务器硬盘资源比较昂贵（当然有钱可以忽略）</li></ul></li><li>可以限制上传文件的类型，在收到上传文件时，判断后缀名是否合法<ul><li>同样是硬盘资源</li></ul></li></ul><h4><span id="xu-yao-yong-dao-de-lei-xiang-jie">需要用到的类详解</span><a href="#xu-yao-yong-dao-de-lei-xiang-jie" class="header-anchor">.</a></h4><p><code>ServletFileUpload</code>负责文件上传的文件数据，并将表单中的每个输入项封装成一个<code>FIleItem</code>对象，在使用<code>ServletFileUpload</code>对象解析请求时需要<code>DiskFileItemFactory</code>对象。所以我们需要在进行解析工作前构造好<code>DiskFileItemFactory</code>对象，通过<code>ServletFileUpload</code>对象的构造方法或<code>setFileItemFactory()</code>方法设置<code>ServletFileUpload</code>对象的<code>fileItemFactory</code>属性。</p><h5><span id="fileitem-lei"><code>FileItem</code>类</span><a href="#fileitem-lei" class="header-anchor">.</a></h5><h5><span id="chang-yong-fang-fa">常用方法</span><a href="#chang-yong-fang-fa" class="header-anchor">.</a></h5><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//用于判断FileItem类对象封装的数据(input等标签type是其他还是file)是一个普通表单还是一个文件表单</span><span class="token comment" spellcheck="true">//普通 true </span><span class="token comment" spellcheck="true">//文件 false</span><span class="token keyword">boolean</span> <span class="token function">isFormField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//用于返回表单标签name属性的值</span>String <span class="token function">getFieldName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//用于将FileItem对象中保存的数据流内容以一个字符串返回 value属性的值</span>String <span class="token function">getString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//用于获取文件上传字段中的文件名</span>String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//以流的形式返回上传文件的数据内容</span>InputStream <span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//如果主体内容被保存在临时文件中，该方法用于删除该临时文件</span><span class="token keyword">void</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5><span id="servletfileupload-lei"><code>ServletFileUpload</code>类</span><a href="#servletfileupload-lei" class="header-anchor">.</a></h5><p><code>ServletFileUpload</code>负责处理上传的文件数据，并将表单中每个输入项封装成一个<code>FileItem</code>对象中</p><p>使用<strong><code>parseRequest(HttpServletRequest)</code>方法</strong>可以将通过表单中每一个HTML标签提交的数据封装成一个<code>FileItem</code>对象，然后以List列表的形式返回，使用该方法处理上传文件简单易用。</p><h3><span id="3-dai-ma-bian-xie">3.代码编写</span><a href="#3-dai-ma-bian-xie" class="header-anchor">.</a></h3><h4><span id="wen-jian-shang-chuan-biao-dan">文件上传表单</span><a href="#wen-jian-shang-chuan-biao-dan" class="header-anchor">.</a></h4><p>表单如果包含一个文件上传输入项的话，这个表单的enctype属性必须设置为multipart/form-data</p><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 通过表单文件上传必须 enctype="multipart/form-data"method只能使用post ; get大小有限制action可指定url--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">enctype</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>multipart/form-data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--multiple允许选中多文件--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fileName<span class="token punctuation">"</span></span> <span class="token attr-name">multiple</span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>文件上传<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5><span id></span><a href="#" class="header-anchor">.</a></h5><h4><span id="fileuploadservlet-shi-yong-fileupload-uuid">fileUploadServlet (使用 fileupload + uuid)</span><a href="#fileuploadservlet-shi-yong-fileupload-uuid" class="header-anchor">.</a></h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">try</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*        1.判断上传文件的表单是一个普通表单还是一个文件表单    */</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ServletFileUpload<span class="token punctuation">.</span><span class="token function">isMultipartContent</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//不带文件的表单 终止方法</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*        2.创建上传文件的保存路径， 建议在WEB-INF路径下    */</span>    String uploadPath <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRealPath</span><span class="token punctuation">(</span><span class="token string">"/WEB-INF/upload"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    File uploadDir <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>uploadPath<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>uploadDir<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        uploadDir<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//目录不存在，创建目录</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//缓存--临时路径</span>    <span class="token comment" spellcheck="true">//如果文件超过一定大小，自动放到临时路径，过几天自动删除</span>    String tmpPath <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRealPath</span><span class="token punctuation">(</span><span class="token string">"/WEB-INF/tmp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    File tmpDir <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>tmpPath<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>tmpDir<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        tmpDir<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//目录不存在，创建目录</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*        3.处理上传文件        一般都需要通过流来获取，我们可以使用request.getInputStream(),原生态的文件上传流获取，十分麻烦        通过Apache的文件上传组件实现    */</span>    <span class="token comment" spellcheck="true">//1. 创建DiskFileItemFactory对象，处理文件上传路径或者大小限制</span>    DiskFileItemFactory factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DiskFileItemFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//设置一个缓冲区，当文件大小超过缓冲区大小时，文件放到临时文件中</span>    factory<span class="token punctuation">.</span><span class="token function">setSizeThreshold</span><span class="token punctuation">(</span><span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 1M</span>    factory<span class="token punctuation">.</span><span class="token function">setRepository</span><span class="token punctuation">(</span>tmpDir<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置缓冲区临时目录</span>    <span class="token comment" spellcheck="true">//2. 获取ServletFileUpload</span>    ServletFileUpload upload <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletFileUpload</span><span class="token punctuation">(</span>factory<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//监听文件上传进度 （可选）</span>    upload<span class="token punctuation">.</span><span class="token function">setProgressListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ProgressListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/**         * @param pBytesRead 已经读取的文件大小         * @param pContentLength    文件大小         * @param pItems   文件读取个数 0:没有 1:正在读取第一个 2:第二个 。。。        **/</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">long</span> pBytesRead<span class="token punctuation">,</span> <span class="token keyword">long</span> pContentLength<span class="token punctuation">,</span> <span class="token keyword">int</span> pItems<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"总大小："</span> <span class="token operator">+</span> pContentLength <span class="token operator">+</span> <span class="token string">"\n已上传："</span> <span class="token operator">+</span> pBytesRead <span class="token operator">+</span> <span class="token string">"\n正在上传：第"</span> <span class="token operator">+</span> pItems <span class="token operator">+</span> <span class="token string">"个"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//处理乱码问题 （可选）</span>    upload<span class="token punctuation">.</span><span class="token function">setHeaderEncoding</span><span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//设置单个文件的最大值 （可选）</span>    upload<span class="token punctuation">.</span><span class="token function">setFileSizeMax</span><span class="token punctuation">(</span><span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//10M</span>    <span class="token comment" spellcheck="true">//设置总共能够上传文件的大小 （可选）</span>    upload<span class="token punctuation">.</span><span class="token function">setSizeMax</span><span class="token punctuation">(</span><span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//20M</span>    <span class="token comment" spellcheck="true">//3. 处理上传的文件</span>    <span class="token comment" spellcheck="true">//把前端请求解析，封装成一个FileItem对象（表单标签对象）List</span>    List<span class="token operator">&lt;</span>FileItem<span class="token operator">></span> fileItems <span class="token operator">=</span> upload<span class="token punctuation">.</span><span class="token function">parseRequest</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>FileItem fileItem <span class="token operator">:</span> fileItems<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>fileItem<span class="token punctuation">.</span><span class="token function">isFormField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//普通标签</span>            <span class="token comment" spellcheck="true">//getFiledName 得到标签的 name属性的值</span>            String name <span class="token operator">=</span> fileItem<span class="token punctuation">.</span><span class="token function">getFieldName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//getString得到 value属性的值</span>            String value <span class="token operator">=</span> fileItem<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"name: "</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"value: "</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//文件标签</span>            <span class="token comment" spellcheck="true">//=====================处理文件=================//</span>            <span class="token comment" spellcheck="true">//获取上传文件的路径</span>            String uploadFileName <span class="token operator">=</span> fileItem<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>uploadFileName <span class="token operator">==</span> null <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>uploadFileName<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">continue</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//获取上传的文件名</span>            String fileName <span class="token operator">=</span> uploadFileName<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>uploadFileName<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//获取文件的后缀名</span>            String ExtName <span class="token operator">=</span> uploadFileName<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>uploadFileName<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//使用UUID（唯一识别的通用码）随机生成一个唯一识别的通用码</span>            String uuid <span class="token operator">=</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//=====================存放地址=================//</span>            <span class="token comment" spellcheck="true">// 使用 UUID 创建一个文件夹 upload 路径下</span>            String realPath <span class="token operator">=</span> uploadPath <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> uuid<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//给每一个文件创建一个uuid文件夹</span>            File uuidDir <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>realPath<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>uuidDir<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//没有就创建</span>                uuidDir<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//=====================文件传输=================//</span>            <span class="token comment" spellcheck="true">//获取文件上传的流</span>            InputStream in <span class="token operator">=</span> fileItem<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//创建一个文件输出流</span>            FileOutputStream out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>realPath <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//创建一个缓冲区</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//1M</span>            <span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>len<span class="token operator">=</span>in<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            out<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            in<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//上传成功，删除临时文件</span>            fileItem<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">FileUploadException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="bu-chong">补充</span><a href="#bu-chong" class="header-anchor">.</a></h2><h3><span id="1-pu-tong-biao-dan-he-wen-jian-biao-dan">1.普通表单和文件表单</span><a href="#1-pu-tong-biao-dan-he-wen-jian-biao-dan" class="header-anchor">.</a></h3><ul><li>普通<ul><li>enctype=”application/x-www-form-urlencoded”&gt;</li></ul></li><li>文件<ul><li>enctype:multipart/form-data<ul><li>input type=”file”</li></ul></li></ul></li></ul><h3><span id="2-md5-jia-mi">2.MD5加密</span><a href="#2-md5-jia-mi" class="header-anchor">.</a></h3>]]></content>
      
      
      
        <tags>
            
            <tag> javaWeb </tag>
            
            <tag> file上传和下载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QQ截屏快速获取像素颜色</title>
      <link href="/2020/06/22/6850.html"/>
      <url>/2020/06/22/6850.html</url>
      
        <content type="html"><![CDATA[<h1><span id="qq-jie-ping-kuai-su-huo-qu-xiang-su-yan-se">QQ截屏快速获取像素颜色</span><a href="#qq-jie-ping-kuai-su-huo-qu-xiang-su-yan-se" class="header-anchor">.</a></h1><p>qq截屏的快捷键是 CTRL + ALT + A</p><p>qq截屏除了截屏 还有个很不错的小功能 ==获取像素的颜色== 是大家都容易忽略的<br>具体方法很简单</p><blockquote><p>第一步<br>按下 Ctrl + Alt + A  快捷键 但是 不要点击鼠标 </p></blockquote><blockquote><p>第二步<br>移动鼠标 到你想要像素点的颜色<br>如图所示 按C 即可复制 RGB十进制值（<strong>按CTRL可换为十六进制，CTRL+C复制十六进制值</strong>）</p></blockquote><p><img src="/2020/06/22/6850/image-20200622114251153.png" alt></p>]]></content>
      
      
      
        <tags>
            
            <tag> 收获 </tag>
            
            <tag> 小技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>登录界面小收获(css,js)</title>
      <link href="/2020/06/21/24412.html"/>
      <url>/2020/06/21/24412.html</url>
      
        <content type="html"><![CDATA[<h2><span id="shou-huo">收获</span><a href="#shou-huo" class="header-anchor">.</a></h2><p>今天做了一个登陆界面</p><p>学到了一些小知识点</p><p><img src="/2020/06/21/24412/image-20200621231731038.png" alt></p><h4><span id="1-zuo-wang-ye-qian-yao-xue-hui-she-zhi-chu-zhi-css">1. 做网页前要学会设置初值（css）</span><a href="#1-zuo-wang-ye-qian-yao-xue-hui-she-zhi-chu-zhi-css" class="header-anchor">.</a></h4><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">html,body,div(背景图)</span><span class="token punctuation">{</span>    <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">* </span><span class="token punctuation">{</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    //文本对齐    //字体大小    //字体粗细    //字体名字    //<span class="token number">...</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4><span id="2-qu-chu-input-button-de-bian-kuang-ying-xiang">2. 去除input，button的边框影响</span><a href="#2-qu-chu-input-button-de-bian-kuang-ying-xiang" class="header-anchor">.</a></h4><pre class="line-numbers language-css"><code class="language-css"><span class="token property">border</span><span class="token punctuation">:</span><span class="token number">0</span> <span class="token punctuation">;</span><span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4><span id="3-rong-qi-deng-lu-kuang-ju-zhong-liu-lan-qi-chuang-kou">3. 容器(登陆框)居中（浏览器窗口）</span><a href="#3-rong-qi-deng-lu-kuang-ju-zhong-liu-lan-qi-chuang-kou" class="header-anchor">.</a></h4><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">div(对应容器)</span><span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-<span class="token number">50%</span>,-<span class="token number">50%</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4><span id="4-input-de-dao-jiao-dian-focus-shi-shi-yong-css-shi-input-fa-sheng-xiang-ying-de-bian-hua-shi-qu-jiao-dian-hou-yang-shi-ye-hui-tong-yang-xiao-shi">4. input得到焦点(focus)时，使用CSS是input发生相应的变化；失去焦点后，样式也会同样消失</span><a href="#4-input-de-dao-jiao-dian-focus-shi-shi-yong-css-shi-input-fa-sheng-xiang-ying-de-bian-hua-shi-qu-jiao-dian-hou-yang-shi-ye-hui-tong-yang-xiao-shi" class="header-anchor">.</a></h4><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.input-text</span><span class="token pseudo-class">:focus</span> </span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* 最好只用在input文本上(text,password,tel,email,...),不要用在按钮上 */</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> purple<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/*当得到焦点时，input边框变为紫色*/</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4><span id="5-jquery-zhong-ru-he-qu-diao-bian-liang-zhi-zhong-px-deng-dan-wei-shi-yong-parseint-var-radix">5.JQuery中如何去掉变量值中 px等单位(使用parseInt(var [, radix]) )</span><a href="#5-jquery-zhong-ru-he-qu-diao-bian-liang-zhi-zhong-px-deng-dan-wei-shi-yong-parseint-var-radix" class="header-anchor">.</a></h4><blockquote><p>radix : 基数</p><p>当 1 &lt; radix &lt; 37 , 就是 让radix进制 返回数</p><p>当 radix = 0 ，表示 10进制</p><p>当radix = 0x or 0X , 表示16进制</p><p>当radix &gt; 36 or radix = 1 , parseInt返回0</p></blockquote><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token string">"10px"</span><span class="token punctuation">;</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"去掉px : "</span> <span class="token operator">+</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2020/06/21/24412/image-20200621235510522.png" alt></p>]]></content>
      
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> jQuery </tag>
            
            <tag> css </tag>
            
            <tag> 收获 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php入门笔记3</title>
      <link href="/2020/06/21/6361.html"/>
      <url>/2020/06/21/6361.html</url>
      
        <content type="html"><![CDATA[<h1><span id="php-jin-jie">PHP进阶</span><a href="#php-jin-jie" class="header-anchor">.</a></h1><ul><li>HTTP协议</li><li>会话技术</li><li>文件操作</li><li>图像处理</li><li>函数进阶</li></ul><h2><span id="yi-http-xie-yi">一、 HTTP协议</span><a href="#yi-http-xie-yi" class="header-anchor">.</a></h2><h3><span id="1-shi-me-shi-http-xie-yi">1、 什么是HTTP协议</span><a href="#1-shi-me-shi-http-xie-yi" class="header-anchor">.</a></h3><blockquote><p>Hyper Text Transfer Protocol（超文本传输协议）的缩写,是用于从万维网（WWW:World Wide Web ）<strong>服务器</strong>传输<strong>超文本</strong>到<strong>本地浏览器</strong>的<strong>传送协议</strong>。</p><p>HTTP是一种基于请求与响应式的协议，即浏览器发送请求，服务器做出响应。在交互过程中，请求消息与响应消息统称为HTTP消息。</p></blockquote><h3><span id="2-http-xiao-xi">2、HTTP消息</span><a href="#2-http-xiao-xi" class="header-anchor">.</a></h3><ul><li>消息头<ul><li>保存消息时间、系统信息等内容</li></ul></li><li>实体内容<ul><li>包存网页或表单数据</li></ul></li></ul><blockquote><p>请求网址（Request URL）<img src="/2020/06/21/6361/image-20200621101540627.png" alt></p></blockquote><blockquote><p>请求方法（Request Method）<img src="/2020/06/21/6361/image-20200621101707766.png" alt></p></blockquote><blockquote><p>状态码（Status Code）<img src="/2020/06/21/6361/image-20200621101805949.png" alt></p></blockquote><blockquote><p>IP地址（Remote Address）<img src="/2020/06/21/6361/image-20200621101858003.png" alt></p></blockquote><blockquote><p>响应头（Response Headers）：是服务器返回的信息<img src="/2020/06/21/6361/image-20200621103020732.png" alt></p></blockquote><blockquote><p>请求头（Request Headers）：是发送本次请求时的浏览器的信息<img src="/2020/06/21/6361/image-20200621103215749.png" alt></p></blockquote><h3><span id="3-http-qing-qiu">3、 HTTP请求</span><a href="#3-http-qing-qiu" class="header-anchor">.</a></h3><h4><span id="3-1-qing-qiu-fang-shi-chang-yong">3.1、请求方式(常用)</span><a href="#3-1-qing-qiu-fang-shi-chang-yong" class="header-anchor">.</a></h4><ul><li><p>GET</p><ul><li>数据通过URL地址的参数进行传递,提交的数据是可见的(对于用户)</li><li>传输数据量（不超过1KB）受限于URL的长度</li></ul></li><li><p>POST</p><ul><li>通常用于表单和文件上传</li><li>通过实体内容传递数据</li><li>传输数据量大小理论上没有限制，但服务端会进行限制</li><li>因为POST内容隐藏在实体中，POST相对GET要安全一些</li></ul></li></ul><h4><span id="3-2-huo-qu-qing-qiu-xin-xi-php">3.2、获取请求信息（PHP）</span><a href="#3-2-huo-qu-qing-qiu-xin-xi-php" class="header-anchor">.</a></h4><blockquote><p>PHP接收到浏览器端的请求，会将相关信息保存在<strong><code>$_SERVER</code>超全局变量数组</strong>中,我们通过该数组就可以获得请求消息</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span><span class="token prolog">&lt;?php var_dump($_SERVER) ?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3><span id="4-http-xiang-ying">4、HTTP响应</span><a href="#4-http-xiang-ying" class="header-anchor">.</a></h3><table><thead><tr><th><strong>消息头</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>Location</td><td>控制浏览器显示哪个页面</td></tr><tr><td>Server</td><td>服务器的类型</td></tr><tr><td>Content-Type</td><td>服务器发送内容的类型和编码类型</td></tr><tr><td>Last-Modified</td><td>服务器最后一次修改的时间</td></tr><tr><td>Date</td><td>响应网站的时间</td></tr></tbody></table><h6><span id="zai-mo-ren-qing-kuang-xia-xiang-ying-xiao-xi-tou-you-fu-wu-qi-zi-dong-fa-chu-tong-guo-php-de-header-han-shu-ke-yi-zi-ding-yi-xiang-ying-xiao-xi-tou">在默认情况下，响应消息头由服务器自动发出。通过PHP的header()函数可以自定义响应消息头。</span><a href="#zai-mo-ren-qing-kuang-xia-xiang-ying-xiao-xi-tou-you-fu-wu-qi-zi-dong-fa-chu-tong-guo-php-de-header-han-shu-ke-yi-zi-ding-yi-xiang-ying-xiao-xi-tou" class="header-anchor">.</a></h6><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//设定编码格式</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'Content-Type:text/html;charset=utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//响应404消息</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'HTTP/1.1 404 Not Found'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//页面重定向</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'Location: login.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4><span id="4-1-php-yuan-cheng-qing-qiu">4.1、PHP远程请求</span><a href="#4-1-php-yuan-cheng-qing-qiu" class="header-anchor">.</a></h4><blockquote><p>HTTP协议是一种通信协议，除了浏览器，其他软件也可以通过HTTP协议与服务器交换信息。虽然PHP运行于服务器端，但有时服务器也需要向另一台服务器请求数据，这时可以通过PHP来实现。</p></blockquote><ul><li><p>file_get_contents()</p><p>file_get_contents()函数用于从一个文件中读取内容，返回字符串。该函数既可以读取本地文件，也可以读取远程地址文件。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//请求远程地址</span><span class="token variable">$html</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span>'http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//www.test.com');</span><span class="token comment" spellcheck="true">//获取响应消息头</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$http_response_header</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输出返回信息</span><span class="token keyword">echo</span> <span class="token string">'&lt;hr>'</span><span class="token punctuation">.</span><span class="token function">htmlspecialchars</span><span class="token punctuation">(</span><span class="token variable">$html</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>$http_response_header变量是PHP的内置变量，用于自动保存响应消息。</p></blockquote></li><li><p>cURL扩展</p><p>PHP中提供的cURL扩展可以高效地进行远程请求。在使用cURL扩展前应确保php.ini中已经开启了cURL扩展。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//初始化一个cURL会话</span><span class="token variable">$ch</span> <span class="token operator">=</span> <span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置请求选项，包括具体的URL</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_URL</span><span class="token punctuation">,</span> 'http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//www.itcast.cn');</span><span class="token comment" spellcheck="true">//设定返回的信息中包含响应消息头</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_HEADER</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设定curl_exec()函数将结果返回，而不是直接输出</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//执行一个cURL会话</span><span class="token variable">$html</span> <span class="token operator">=</span> <span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//释放cURL句柄，关闭一个cURL会话</span><span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输出返回信息</span><span class="token keyword">echo</span> <span class="token function">htmlspecialchars</span><span class="token punctuation">(</span><span class="token variable">$html</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2><span id="er-hui-hua-ji-zhu">二、会话技术</span><a href="#er-hui-hua-ji-zhu" class="header-anchor">.</a></h2><blockquote><p>当用户通过浏览器访问网站时，通常情况下，服务器需要对用户的状态进行跟踪。例如，当用户通过用户名和密码进行登录时，如果登录成功，服务器应该记住该用户的登录状态。<br>在Web开发中，服务器跟踪用户信息的技术称为会话技术。</p></blockquote><h3><span id="1-cookie-ji-zhu">1、Cookie技术</span><a href="#1-cookie-ji-zhu" class="header-anchor">.</a></h3><blockquote><p>Cookie是<strong>网站为了辨别用户身份而存储在用户本地终端上的数据</strong>。因为HTTP协议是无状态的，即服务器不知道用户上一次做了什么，这严重阻碍了交互式Web应用程序的实现。</p><p>Cookie就是<strong>解决HTTP无状态性的一种技术</strong>，服务器可以设置或读取Cookie中包含的信息，借此可以跟踪用户与服务器之间的会话状态，通常应用于保存浏览历史、保存购物车商品和保存用户登录状态等场景。</p></blockquote><img src="/2020/06/21/6361/image-20200706092718694.png" style="zoom:50%;"><h5><span id="que-dian">缺点</span><a href="#que-dian" class="header-anchor">.</a></h5><ul><li>Cookie被附加在每个HTTP请求中，无形中增加了数据流量。</li><li>Cookie在HTTP请求中是明文传输的，所以安全性不高，容易被窃取。</li><li>Cookie存储于浏览器，可以被篡改，服务器接收后必须先验证数据的合法性。</li><li>浏览器限制Cookie的数量和大小（通常限制为50个，每个不超过4KB），对于复杂的存储需求来说是不够用的。</li></ul><h4><span id="1-1-cookie-de-shi-yong">1.1、Cookie的使用</span><a href="#1-1-cookie-de-shi-yong" class="header-anchor">.</a></h4><p>​    在PHP中，使用setcookie()函数可以创建或修改Cookie。</p><pre class="line-numbers language-php"><code class="language-php">bool <span class="token function">setcookie</span> <span class="token punctuation">(</span>        string <span class="token variable">$name</span>        <span class="token comment" spellcheck="true">//Cookie名称</span>       string <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//Cookie值</span>       int <span class="token variable">$expire</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//有效期（时间戳）</span>       string <span class="token variable">$path</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//有效路径（默认为当前目录和子目录有效）</span>       string <span class="token variable">$domain</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//有效域名（可允许二级域名下访问Cookie）</span>       bool <span class="token variable">$secure</span> <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//是否只允许HTTPS安全连接访问</span>       bool <span class="token variable">$httponly</span> <span class="token operator">=</span> <span class="token boolean">false</span>      <span class="token comment" spellcheck="true">//是否只允许HTTP访问（可阻止JavaScript访问Cookie）</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>参数$name是必需的，其他参数都是可选的</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string">'city'</span><span class="token punctuation">,</span> <span class="token string">'北京市'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">//未指定过期时间，在会话结束时过期</span><span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string">'city'</span><span class="token punctuation">,</span> <span class="token string">'北京市'</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1800</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//半小时后过期</span><span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string">'city'</span><span class="token punctuation">,</span> <span class="token string">'北京市'</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//一天后过期</span><span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string">'city'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//立即过期（删除COOKIE）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>setcookie()函数的第三个参数是时间戳，当省略时，Cookie仅在本次会话有效，当用户关闭浏览器时，会话就会结束。</li><li>除了可以通过PHP操作Cookie，使用JavaScript也可以操作Cookie，如果只是保存用户在网页中的偏好设置，可以直接用JavaScript操作Cookie，无需服务器进行处理。</li></ul><h4><span id="1-2-du-qu-cookie">1.2、读取Cookie</span><a href="#1-2-du-qu-cookie" class="header-anchor">.</a></h4><blockquote><p>对于浏览器发送的Cookie数据，在PHP中可以使用超全局数组变量<code>$_COOKIE</code>来接收。</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//判断Cookie中是否存在city数据</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">'city'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token variable">$city</span> <span class="token operator">=</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">'city'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//从COOKIE中获取City数据</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//Cookie中的city不存在</span>    <span class="token comment" spellcheck="true">//在这可以设置cookie</span><span class="token punctuation">}</span><span class="token variable">$city</span><span class="token operator">=</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">'city'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">'city'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>需要注意的是，当PHP第一次通过setcookie()创建Cookie时，<code>$_COOKIE</code>中没有这个数据；只有当浏览器下次请求并携带Cookie时，才能通过<code>$_COOKIE</code>获取到相关信息。</p></blockquote><h4><span id="1-3-cha-kan-cookie">1.3、查看Cookie</span><a href="#1-3-cha-kan-cookie" class="header-anchor">.</a></h4><blockquote><p>当服务器端PHP通过setcookie()向浏览器端响应Cookie后，浏览器就会保存Cookie，在下次请求时会自动携带Cookie。</p></blockquote><p>对于普通用户来说，Cookie是不可见的，但Web开发者可以通过“F12”开发者工具查看Cookie。在开发者工具中切换到【Network】-【Cookies】。</p><img src="/2020/06/21/6361/image-20200706094114117.png" style="zoom:50%;"><img src="/2020/06/21/6361/image-20200706094321663.png" style="zoom:50%;"><ul><li>Cookie在浏览器中是根据域名分开保存的，每个Cookie具有名称（Name）、值（Value）、域名（Domain）、路径（Path）、有效期（Expires）等属性。</li><li>在访问Cookie时，不同路径之间是隔离的，路径可以向下继承。例如，路径为“/admin/”的Cookie可以在admin的子目录中访问，但在admin的上级目录中无法访问。</li></ul><h3><span id="2-session-ji-zhu">2、Session技术</span><a href="#2-session-ji-zhu" class="header-anchor">.</a></h3><blockquote><p>Session在网络应用中称为“会话”，指的是用户在浏览某个网站时，从进入网站到关闭网站所经过的这段时间。<br>Session技术是一种服务器端的技术，它的生命周期从用户访问页面开始，直到断开与网站的连接时结束。Session通常用于保存用户登录状态、保存生成的验证码等。</p></blockquote><p>当PHP启动Session时，服务器会为每个用户的浏览器创建一个供其独享的Session文件。</p><img src="/2020/06/21/6361/image-20200706094745683.png" style="zoom:50%;"><ul><li>每一个Session都具有一个唯一的会话ID，用于标识不同的用户。</li><li>会话ID分别保存在浏览器端和服务器端两个位置，浏览器端<strong>通过Cookie保存</strong>，服务器端<strong>以文件的形式</strong>保存在指定的Session目录中。</li></ul><h4><span id="2-1-cha-kan-sessionid">2.1、查看SessionID</span><a href="#2-1-cha-kan-sessionid" class="header-anchor">.</a></h4><p> Session文件的保存目录是php.ini中的配置项“session.save_path”指定的，其默认路径位于“C:\Windows\Temp”，打开这个目录可以查看Session文件：</p><p><img src="/2020/06/21/6361/image-20200706100035013.png" alt></p><h4><span id="2-2-session-de-shi-yong">2.2、Session的使用</span><a href="#2-2-session-de-shi-yong" class="header-anchor">.</a></h4><ul><li>在使用Session之前，需要通过session_start()函数先启动Session</li><li>当启动后，即可通过超全局变量<code>$_SESSION</code>添加、读取或修改Session中的数据。</li></ul><pre class="line-numbers language-php"><code class="language-php"><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token comment" spellcheck="true">//开启SESSION</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'小明'</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">//向SESSION添加数据（字符串）</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'info'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>           <span class="token comment" spellcheck="true">//向SESSION添加数据（数组）</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'test'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">//判断SESSION中是否存在test</span>      <span class="token variable">$test</span> <span class="token operator">=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'test'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">//读取SESSION中的test</span><span class="token punctuation">}</span><span class="token function">unset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">//删除单个数据</span><span class="token variable">$_SESSION</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                  <span class="token comment" spellcheck="true">//删除所有数据</span><span class="token function">session_destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment" spellcheck="true">//结束当前会话</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>使用“<code>$_SESSION</code>= []”方式可以删除Session中的所有数据，但是Session文件仍然存在，只不过它是一个空文件。<br>如果需要将这个空文件删除，可以通过session_destroy()函数来实现。</p></blockquote><h3><span id="3-shu-chu-huan-chong">3、输出缓冲</span><a href="#3-shu-chu-huan-chong" class="header-anchor">.</a></h3><blockquote><p>在PHP中，输出缓冲（Output Buffer）是一种缓存机制，它通过内存预先保存PHP脚本的输出内容，当缓存的数据量达到设定的大小时，再将数据传输到浏览器。</p><p>输出缓冲机制解决了当有实体内容输出后，再使用header()、setcookie()、session_start()等函数无法设置HTTP消息头的问题，因为消息头必须在实体内容之前被发送，通过输出缓冲，可以使实体内容延缓到HTTP消息头的后面被发送。</p></blockquote><blockquote><p>输出缓冲在PHP中是默认开启的。<br>在php.ini中，它的配置项为“output_buffering = 4096”，表示输出缓冲的内存空间为4KB。</p></blockquote><p>通过PHP的ob函数可以控制输出缓冲，常用函数如下：</p><table><thead><tr><th><strong>函数名</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>ob_start()</td><td>启动输出缓冲</td></tr><tr><td>ob_get_contents()</td><td>返回当前输出缓冲区的内容</td></tr><tr><td>ob_end_flush()</td><td>向浏览器发送输出缓冲区的内容，并禁用输出缓冲</td></tr><tr><td>ob_end_clean()</td><td>清空输出缓冲区的内容，不进行发送，并禁用输出缓冲</td></tr><tr><td>ob_start()</td><td>启动输出缓冲</td></tr></tbody></table><h2><span id="san-wen-jian-cao-zuo">三、文件操作</span><a href="#san-wen-jian-cao-zuo" class="header-anchor">.</a></h2><h3><span id="1-wen-jian-shang-chuan">1、文件上传</span><a href="#1-wen-jian-shang-chuan" class="header-anchor">.</a></h3><h4><span id="1-1-wen-jian-shang-chuan-biao-dan">1.1、文件上传表单</span><a href="#1-1-wen-jian-shang-chuan-biao-dan" class="header-anchor">.</a></h4><p>要想完成文件上传，在设计表单时需要满足以下两个需求：</p><ul><li>表单提交方式设置为POST方式。</li><li>enctype属性的值设置为“multipart/form-data”。</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">enctype</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>multipart/form-data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>upload<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>上传<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>默认情况下，该元素只能上传一个文件。当需要上传多个文件时，可以编写多个标签，或者为一个标签添加multiple属性。</p></blockquote><h4><span id="1-2-chu-li-shang-chuan-wen-jian">1.2、处理上传文件</span><a href="#1-2-chu-li-shang-chuan-wen-jian" class="header-anchor">.</a></h4><p>PHP默认将通过HTTP上传的文件保存到服务器的临时目录下，该临时文件的保存期为脚本的周期，即PHP脚本执行期间。</p><p>在处理上传文件时，通过sleep(seconds)函数延迟PHP文件执行的时间，可以在系统临时目录“C:\Windows\Temp”中查看临时文件。</p><ul><li>提交表单后，上传的文件会以随机生成的文件名保存在系统临时目录中。</li><li>PHP执行完毕后，图中方框内的临时文件就会被释放掉。</li></ul><h4><span id="1-3-huo-qu-wen-jian-xin-xi">1.3、获取文件信息</span><a href="#1-3-huo-qu-wen-jian-xin-xi" class="header-anchor">.</a></h4><p>在PHP释放上传文件之前，在PHP脚本中可以用超全局变量<code>$_FILES</code>来获取上传文件的信息。<br>该变量的外层数组保存上传文件的“name”属性名，内层数组保存的是该上传文件的具体信息</p><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//假设PHP收到来自</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>upload<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></span>上传的文件<span class="token keyword">echo</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'upload'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//上传文件名称，如photo.jpg</span><span class="token keyword">echo</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'upload'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'size'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>               <span class="token comment" spellcheck="true">//上传文件大小，如879394（单位是Byte）</span><span class="token keyword">echo</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'upload'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'error'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>           <span class="token comment" spellcheck="true">//上传是否有误，如0（表示成功）</span><span class="token keyword">echo</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'upload'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'type'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>               <span class="token comment" spellcheck="true">//上传文件的MIME类型，如image/jpeg</span><span class="token keyword">echo</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'upload'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//上传后临时文件名，如C:\Windows\Temp\php9BA5.tmp</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$_FILES数组中的 error 有 7 个值，分别为 0、1、2、3、4、6、7。</p><p>0 表示上传成功<br>1 表示文件大小超过了php.ini中upload_max_filesize选项限制的值<br>2 表示文件大小超过了表单中max_file_size选项指定的值<br>3 表示文件只有部分被上传<br>4 表示没有文件被上传<br>6 表示找不到临时文件夹<br>7 表示文件写入失败</p><h4><span id="1-4-shang-chuan-wen-jian-de-bao-cun">1.4、上传文件的保存</span><a href="#1-4-shang-chuan-wen-jian-de-bao-cun" class="header-anchor">.</a></h4><ul><li>文件上传成功后会暂时保存在系统的临时文件夹中。</li><li>为了保存文件到指定的目录中，需要使用 move_uploaded_file()函数进行操作。</li></ul><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//判断是否有“name=upload”的文件上传，是否上传成功</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'upload'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'upload'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'error'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//上传成功，将文件保存到当前目录下的“uploads”目录中</span>      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'upload'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'./uploads'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token string">'文件上传成功'</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>需要注意的是，移动文件的目标路径“./uploads”必须是已经存在的目录，否则会移动失败。</p></blockquote><h3><span id="2-wen-jian-ji-ben-cao-zuo">2、文件基本操作</span><a href="#2-wen-jian-ji-ben-cao-zuo" class="header-anchor">.</a></h3><h4><span id="2-1-wen-jian-lei-xing">2.1、文件类型</span><a href="#2-1-wen-jian-lei-xing" class="header-anchor">.</a></h4><blockquote><p>文件类型主要分为文件和目录，PHP可以通过filetype()函数来获取文件类型。</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">echo</span> <span class="token function">filetype</span><span class="token punctuation">(</span><span class="token string">'./uploads/1.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//输出结果：file</span><span class="token keyword">echo</span> <span class="token function">filetype</span><span class="token punctuation">(</span><span class="token string">'./uploads'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//输出结果：dir</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>在Windows系统中，PHP只能获得“file”、“dir”和“unknown”三种文件类型。</li><li>在Linux系统中，还可以获取block（块设备文件）、char（字符设置）、link（符号链接）等文件类型。</li></ul><blockquote><p><strong>在操作一个文件时，如果该文件不存在，会发生错误</strong>。为了避免这种情况发生，可以通过<strong>file_exits()</strong>、<strong>is_file()</strong>和<strong>is_dir()</strong>函数，来检查文件或目录是否存在。</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token function">var_dump</span><span class="token punctuation">(</span> <span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token string">'./uploads/1.jpg'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//文件存在，输出：bool(true)</span><span class="token function">var_dump</span><span class="token punctuation">(</span> <span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token string">'./uploads/2.jpg'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//文件不存在，输出：bool(false)</span><span class="token function">var_dump</span><span class="token punctuation">(</span> <span class="token function">is_file</span><span class="token punctuation">(</span><span class="token string">'./uploads/1.jpg'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//输出结果：bool(true)</span><span class="token function">var_dump</span><span class="token punctuation">(</span> <span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token string">'./uploads'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//输出结果：bool(true)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4><span id="2-2-wen-jian-shu-xing">2.2、文件属性</span><a href="#2-2-wen-jian-shu-xing" class="header-anchor">.</a></h4><table><thead><tr><th><strong>函数</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>int filesize(string $filename )</td><td>获取文件大小</td></tr><tr><td>int filectime(string $filename)</td><td>获取文件的创建时间</td></tr><tr><td>int filemtime(string $filename)</td><td>获取文件的修改时间</td></tr><tr><td>int fileatime(string $filename)</td><td>获取文件的上次访问时间</td></tr><tr><td>bool is_readable(string $filename)</td><td>判断给定文件是否可读</td></tr><tr><td>bool is_writable(string $filename)</td><td>判断给定文件是否可写</td></tr><tr><td>bool is_executable(string $filename)</td><td>判断给定文件是否可执行</td></tr><tr><td>array stat(string $filename)</td><td>给出文件的信息</td></tr></tbody></table><blockquote><p>由于PHP中int数据类型表示的数据范围有限，所以filesize()函数对于大于2GB的文件，并不能准确获取其大小，需斟酌使用。</p></blockquote><h4><span id="2-3-wen-jian-cao-zuo">2.3、文件操作</span><a href="#2-3-wen-jian-cao-zuo" class="header-anchor">.</a></h4><p>在程序开发过程中，经常需要对文件进行复制、删除以及重命名等操作。针对这些功能，PHP提供了相应的函数</p><table><thead><tr><th><strong>函数</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>bool copy(string $source, string $dest)</td><td>用于实现拷贝文件的功能</td></tr><tr><td>bool unlink(string $filename)</td><td>用于删除文件</td></tr><tr><td>bool rename(string $old_name, string $new_name)</td><td>用于实现文件或目录的重命名功能</td></tr></tbody></table><h4><span id="2-4-wen-jian-du-xie">2.4、文件读写</span><a href="#2-4-wen-jian-du-xie" class="header-anchor">.</a></h4><p>在PHP中，对于文件的读写提供了许多函数。其中，基于文件的句柄的函数可以对大文件进行流式读写操作；而对于小文件，直接进行读写效率更高。</p><table><thead><tr><th><strong>函数</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>resource fopen(string $filename, string $mode)</td><td>打开文件，获取文件句柄</td></tr><tr><td>bool fclose(resource $handle)</td><td>关闭文件句柄</td></tr><tr><td>string fread(resource $handle, int $length)</td><td>通过句柄读取文件，获取指定长度字符串</td></tr><tr><td>int fwrite(resource $handle, string $string [,int $length])</td><td>通过句柄写入文件</td></tr><tr><td>string fgetc(resource $handle)</td><td>通过句柄读取文件，每次读取一个字节。</td></tr><tr><td>string fgets(resource $handle [,int $length])</td><td>通过句柄读取文件，每次读取一行内容</td></tr><tr><td>array file(string $filename)</td><td>将文件读取到按行分割的数组中</td></tr><tr><td>string file_get_contents(string $filename)</td><td>读取文件</td></tr><tr><td>int file_put_contents(string $filename, mixed $data)</td><td>写入文件</td></tr></tbody></table><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//定义下载文件名</span><span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string">'download.zip'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取文件大小</span><span class="token variable">$size</span> <span class="token operator">=</span> <span class="token function">filesize</span><span class="token punctuation">(</span><span class="token string">'./data.zip'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置HTTP响应消息为文件下载</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'content-type:octet-stream'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'content-length:'</span><span class="token punctuation">.</span><span class="token variable">$size</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'content-disposition:attachment;filename="'</span><span class="token punctuation">.</span><span class="token variable">$name</span><span class="token punctuation">.</span><span class="token string">'"'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$fp</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">'./data.zip'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//以只读方式打开文件</span><span class="token comment" spellcheck="true">//读取文件并输出</span><span class="token variable">$buffer</span> <span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//读取缓冲</span><span class="token variable">$count</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//已读取的大小</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">feof</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token variable">$size</span> <span class="token operator">-</span> <span class="token variable">$count</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//判断文件是否全部读取</span>      <span class="token keyword">echo</span> <span class="token function">fread</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">,</span> <span class="token variable">$buffer</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token variable">$count</span> <span class="token operator">+</span><span class="token operator">=</span> <span class="token variable">$buffer</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//关闭文件，停止脚本</span><span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>exit<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="3-mu-lu-ji-ben-cao-zuo">3、目录基本操作</span><a href="#3-mu-lu-ji-ben-cao-zuo" class="header-anchor">.</a></h3><h4><span id="3-1-chuang-jian-mu-lu">3.1、创建目录</span><a href="#3-1-chuang-jian-mu-lu" class="header-anchor">.</a></h4><p>在进行文件操作时，经常需要创建目录。通过mkdir()函数可以实现目录的创建。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token string">'./path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//在当前目录下创建一个path目录</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token string">'./path1/path2'</span><span class="token punctuation">,</span> <span class="token number">0777</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//在当前目录下递归创建path1/path2目录</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4><span id="3-2-jie-xi-lu-jing">3.2、解析路径</span><a href="#3-2-jie-xi-lu-jing" class="header-anchor">.</a></h4><p>在程序中经常需要对文件路径进行解析操作，如路径中的文件名和目录等。PHP提供了一些函数实现目录的解析操作。</p><table><thead><tr><th><strong>函数</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>string basename(string $path [, string $suffix ])</td><td>返回路径中的文件名</td></tr><tr><td>string dirname(string $path)</td><td>返回路径中的目录部分</td></tr><tr><td>mixed pathinfo(string $path [, int $options ])</td><td>以数组的形式返回路径信息，包括目录名、文件名等</td></tr></tbody></table><blockquote><p>需要注意的是，在处理带有中文的路径时，应注意操作系统对于文件路径的编码问题。只有PHP程序设置的编码与操作系统的编码统一，才能正确处理中文路径。</p></blockquote><h4><span id="3-3-bian-li-mu-lu">3.3、遍历目录</span><a href="#3-3-bian-li-mu-lu" class="header-anchor">.</a></h4><p>在程序中经常需要对某个目录下的子目录或文件进行遍历。为此，PHP中内置了相应的函数用于实现目录或文件的遍历。</p><table><thead><tr><th><strong>函数</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>resource opendir(string $path)</td><td>打开一个目录句柄</td></tr><tr><td>string readdir(resource $dir_handle)</td><td>从目录句柄中读取条目</td></tr><tr><td>void closedir(resource $dir_handle)</td><td>关闭目录句柄</td></tr><tr><td>void rewinddir(resource $dir_handle)</td><td>倒回目录句柄</td></tr><tr><td>array glob(string $pattern [, int $flags = 0 ])</td><td>寻找与模式匹配的文件路径</td></tr></tbody></table><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">getDirSize</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token variable">$size</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>              <span class="token comment" spellcheck="true">//保存文件大小</span>      <span class="token variable">$handle</span> <span class="token operator">=</span> <span class="token function">opendir</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//打开目录句柄</span>      <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$name</span> <span class="token operator">=</span> <span class="token function">readdir</span><span class="token punctuation">(</span><span class="token variable">$handle</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token operator">!=</span><span class="token string">'.'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$name</span> <span class="token operator">!=</span><span class="token string">'..'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                  <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token string">"$path/$name"</span><span class="token punctuation">;</span>                  <span class="token variable">$size</span> <span class="token operator">+</span><span class="token operator">=</span> <span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">getDirSize</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token function">filesize</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>      <span class="token punctuation">}</span>      <span class="token function">closedir</span><span class="token punctuation">(</span><span class="token variable">$handle</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token variable">$size</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">echo</span> <span class="token string">'当前目录大小：'</span><span class="token punctuation">.</span><span class="token function">getDirSize</span><span class="token punctuation">(</span><span class="token string">'./'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">'B'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="si-tu-xiang-chu-li">四、图像处理</span><a href="#si-tu-xiang-chu-li" class="header-anchor">.</a></h2><h3><span id="1-gd-ku-jian-jie">1、GD库简介</span><a href="#1-gd-ku-jian-jie" class="header-anchor">.</a></h3><blockquote><p>GD库是PHP处理图像的扩展库，它提供了一系列用来处理图像的函数，可以实现缩略图、验证码和图片水印等操作。<br>但由于不同的GD库版本支持的图像格式不完全一样，因此，从PHP的4.3版本开始，PHP捆绑了其开发团队实现的GD2库。它不仅支持GIF、JPEG、PNG等格式的图像文件，还支持FreeType、Type1等字体库。</p></blockquote><ul><li>打开PHP的配置文件php.ini</li><li>找到“;extension=php_gd2.dll”配置项，去掉前面的分号“;”注释</li><li>保存PHP的配置文件php.ini，并重启Apache使配置生效</li><li>通过phpinfo()函数可以查看GD库是否开启成功</li></ul><h3><span id="2-tu-xiang-de-chuang-jian-yu-shu-chu">2、图像的创建与输出</span><a href="#2-tu-xiang-de-chuang-jian-yu-shu-chu" class="header-anchor">.</a></h3><h4><span id="2-1-chuang-jian-tu-xiang-zi-yuan">2.1、创建图像资源</span><a href="#2-1-chuang-jian-tu-xiang-zi-yuan" class="header-anchor">.</a></h4><p>在处理图像前，需要先创建图像资源。PHP有多种创建图像的方式，可以基于一个已有的文件创建，也可以直接创建一个空白画布。</p><table><thead><tr><th><strong>函数</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>resource imagecreate(int $width, int $height)</td><td>创建指定宽高的空白画布图像</td></tr><tr><td>resource imagecreatetruecolor (int $width, int $height )</td><td>创建指定宽高的真彩色空白画布图像</td></tr><tr><td>resource imagecreatefromgif(string $filename)</td><td>从给定的文件路径创建GIF格式的图像</td></tr><tr><td>resource imagecreatefromjpeg(string $filename)</td><td>从给定的文件路径创建JPEG格式的图像</td></tr><tr><td>resource imagecreatefrompng(string $filename)</td><td>从给定的文件路径创建PNG格式的图像</td></tr></tbody></table><h4><span id="2-2-tian-chong-yan-se">2.2、填充颜色</span><a href="#2-2-tian-chong-yan-se" class="header-anchor">.</a></h4><p>在使用PHP创建空白画布的时候，并不能直接给画布指定颜色。为画布填充颜色时，可以通过imagecolorallocate()函数来完成。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//创建空白画布资源</span><span class="token variable">$im</span> <span class="token operator">=</span> <span class="token function">imagecreate</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//填充颜色（参数依次为：图像资源、红色数值、绿色数值，蓝色数值）</span><span class="token function">imagecolorallocate</span><span class="token punctuation">(</span><span class="token variable">$im</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">204</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>imagecolorallocate()函数用于为画布填充颜色，该函数的第2~4个参数分别表示RGB中的三种颜色。</p><h4><span id="2-3-tu-xiang-shu-chu">2.3、图像输出</span><a href="#2-3-tu-xiang-shu-chu" class="header-anchor">.</a></h4><p>在完成图像资源的处理后，可以将图像输出到网页中，或者保存到文件中。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//创建空白画布并填充颜色</span><span class="token variable">$im</span> <span class="token operator">=</span> <span class="token function">imagecreate</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imagecolorallocate</span><span class="token punctuation">(</span><span class="token variable">$im</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">204</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置HTTP响应消息，将文档类型设置为GIF图片</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'Content-Type: image/gif'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将图像资源以GIF格式输出</span><span class="token function">imagegif</span><span class="token punctuation">(</span><span class="token variable">$im</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//该函数第2个参数指定图像保存路径，省略时直接输出到网页</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>在在输出时应通过header()函数告知浏览器接下来发送的数据是一张GIF格式的图片，否则浏览器不会以图片的形式展现内容。</p></blockquote><h3><span id="3-hui-zhi-wen-ben-he-tu-xing">3、绘制文本和图形</span><a href="#3-hui-zhi-wen-ben-he-tu-xing" class="header-anchor">.</a></h3><h4><span id="3-1-hui-zhi-wen-ben">3.1、绘制文本</span><a href="#3-1-hui-zhi-wen-ben" class="header-anchor">.</a></h4><p>在PHP中，绘制文本通常用于开发验证码、文字水印等功能。通过imagettftext()函数可以将文字写入到图像中，该函数的参数说明如下。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">array</span> <span class="token function">imagettftext</span><span class="token punctuation">(</span>      resource <span class="token variable">$image</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">//图像资源（通过imagecreate()创建）</span>      float <span class="token variable">$size</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//文字大小（字号）</span>      float <span class="token variable">$angel</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//文字倾斜角度</span>      int <span class="token variable">$x</span><span class="token punctuation">,</span>         <span class="token comment" spellcheck="true">//绘制位置的x坐标</span>      int <span class="token variable">$y</span><span class="token punctuation">,</span>         <span class="token comment" spellcheck="true">//绘制位置的y坐标</span>      int <span class="token variable">$color</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//文字颜色（通过imagecolorallocate()创建）</span>      string <span class="token variable">$fontfile</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//文字字体文件（即.ttf字体文件的保存路径）</span>      string <span class="token variable">$text</span>    <span class="token comment" spellcheck="true">//文字内容</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在使用imagettftext()函数时，需要给定字体文件，可以使用Windows系统中安装的字体文件（在C:\Windows\Fonts目录中），也可以通过网络获取其它字体文件放在项目目录下使用。</p><h4><span id="3-2-hui-zhi-ji-ben-tu-xing">3.2、绘制基本图形</span><a href="#3-2-hui-zhi-ji-ben-tu-xing" class="header-anchor">.</a></h4><p>图形的构成无论多么复杂，都离不开最基本的点、线、面。在PHP中，GD库提供很多绘制基本图形的函数，通过这些函数可以绘制像素点、线条、矩形、图形等。</p><table><thead><tr><th><strong>函数</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>imagesetpixel(resource $image, int $x, int ​$y, int $color)</td><td>绘制一个点，其中参数$x和​$y用于指定该点的坐标，$color用于指定颜色</td></tr><tr><td>imageline(resource $image, int ​$x1, int ​$y1, int ​$x2, int $y2, int $color)</td><td>用$color颜色在图像$image中从坐标（x1,y1）到（x2,y2）绘制一条线条</td></tr><tr><td>imagerectangle(resource $image, int ​$x1, int ​$y1, int $x2, int ​$y2, int $color)</td><td>用$color颜色在$image图像中绘制一个矩形，其左上角坐标为（x1，y1），右下角坐标为（x2，y2）</td></tr><tr><td>imageellipse(resource $image, int ​$cx, int ​$cy, int ​$w, int ​$h, int $color)</td><td>在$image图像中绘制一个以坐标（cx，cy）为中心的椭圆。其中，​$w和​$h分别指定了椭圆的宽度和高度，如果​$w和$h相等，则为正圆。成功时返回true，失败则返回false。</td></tr><tr><td>imagesetpixel(resource $image, int ​$x, int ​$y, int $color)</td><td>绘制一个点，其中参数$x和​$y用于指定该点的坐标，$color用于指定颜色</td></tr></tbody></table><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//创建画布、填充颜色、创建颜色</span><span class="token variable">$im</span> <span class="token operator">=</span> <span class="token function">imagecreate</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//创建200*100大小的画布</span><span class="token function">imagecolorallocate</span><span class="token punctuation">(</span><span class="token variable">$im</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//为画布填充白色</span><span class="token variable">$color</span> <span class="token operator">=</span> <span class="token function">imagecolorallocate</span><span class="token punctuation">(</span><span class="token variable">$im</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//创建黑色</span><span class="token comment" spellcheck="true">//绘制矩形</span><span class="token function">imagerectangle</span><span class="token punctuation">(</span><span class="token variable">$im</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token variable">$color</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//绘制文本（使用Windows自带的黑体字体）</span><span class="token function">imagettftext</span><span class="token punctuation">(</span><span class="token variable">$im</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token variable">$color</span><span class="token punctuation">,</span> <span class="token string">'C:/Windows/Fonts/simhei.ttf'</span><span class="token punctuation">,</span> <span class="token string">'矩形'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//输出图像</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'Content-Type: image/png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">imagepng</span><span class="token punctuation">(</span><span class="token variable">$im</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="4-tu-xiang-suo-fang-yu-die-jia">4、图像缩放与叠加</span><a href="#4-tu-xiang-suo-fang-yu-die-jia" class="header-anchor">.</a></h3><p>在创建图像资源时，除了创建空白画布，还可以基于图片文件进行创建。当需要对图片进行缩放、叠加时，可以通过imagecopyresampled()函数来完成。</p><pre class="line-numbers language-php"><code class="language-php">bool <span class="token function">imagecopyresampled</span><span class="token punctuation">(</span>      resource <span class="token variable">$dst_image</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//目标图像资源</span>      resource <span class="token variable">$src_image</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//原图像资源</span>      int <span class="token variable">$dst_x</span><span class="token punctuation">,</span>         <span class="token comment" spellcheck="true">//目标的x坐标</span>      int <span class="token variable">$dst_y</span><span class="token punctuation">,</span>         <span class="token comment" spellcheck="true">//目标的y坐标</span>      int <span class="token variable">$src_x</span><span class="token punctuation">,</span>         <span class="token comment" spellcheck="true">//原图的x坐标</span>      int <span class="token variable">$src_y</span><span class="token punctuation">,</span>         <span class="token comment" spellcheck="true">//原图的y坐标</span>      int <span class="token variable">$dst_w</span><span class="token punctuation">,</span>         <span class="token comment" spellcheck="true">//目标图像的宽</span>      int <span class="token variable">$dst_h</span><span class="token punctuation">,</span>         <span class="token comment" spellcheck="true">//目标图像的高</span>      int <span class="token variable">$src_w</span><span class="token punctuation">,</span>         <span class="token comment" spellcheck="true">//原图像的宽</span>      int <span class="token variable">$src_h</span>         <span class="token comment" spellcheck="true">//原图像的高</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//定义基本变量</span><span class="token variable">$source</span> <span class="token operator">=</span> <span class="token string">'./1.jpg'</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//原图路径</span><span class="token variable">$dst_w</span> <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//目标宽度</span><span class="token variable">$dst_h</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>    目标高度<span class="token function">list</span><span class="token punctuation">(</span><span class="token variable">$src_w</span><span class="token punctuation">,</span> <span class="token variable">$src_h</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">getimagesize</span><span class="token punctuation">(</span><span class="token variable">$source</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//获取原图宽高</span><span class="token variable">$src_im</span> <span class="token operator">=</span> <span class="token function">imagecreatefromjpeg</span><span class="token punctuation">(</span><span class="token variable">$source</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//创建原图资源</span><span class="token variable">$dst_im</span> <span class="token operator">=</span> <span class="token function">imagecreatetruecolor</span><span class="token punctuation">(</span><span class="token variable">$dst_w</span><span class="token punctuation">,</span> <span class="token variable">$dst_h</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//创建目标图像画布资源</span><span class="token comment" spellcheck="true">//将原图缩放到目标图像中</span><span class="token function">imagecopyresampled</span><span class="token punctuation">(</span><span class="token variable">$dst_im</span><span class="token punctuation">,</span> <span class="token variable">$src_im</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token variable">$dst_w</span><span class="token punctuation">,</span> <span class="token variable">$dst_h</span><span class="token punctuation">,</span> <span class="token variable">$src_w</span><span class="token punctuation">,</span> <span class="token variable">$src_h</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//保存到文件中（参数依次为图像资源、保存路径、JPEG压缩质量0~100）</span><span class="token function">imagejpeg</span><span class="token punctuation">(</span><span class="token variable">$dst_im</span><span class="token punctuation">,</span> <span class="token string">'./thumb_1.jpg'</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//定义基本变量</span><span class="token variable">$source</span> <span class="token operator">=</span> <span class="token string">'./1.jpg'</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//原图路径</span><span class="token variable">$target</span> <span class="token operator">=</span> <span class="token string">'./2.jpg'</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//目标图路径</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token variable">$src_w</span><span class="token punctuation">,</span> <span class="token variable">$src_h</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">getimagesize</span><span class="token punctuation">(</span><span class="token variable">$source</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//获取原图的宽高</span><span class="token comment" spellcheck="true">//创建图像资源</span><span class="token variable">$src_image</span> <span class="token operator">=</span> <span class="token function">imagecreatefromjpeg</span><span class="token punctuation">(</span><span class="token variable">$source</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$dst_image</span> <span class="token operator">=</span> <span class="token function">imagecreatefromjpeg</span><span class="token punctuation">(</span><span class="token variable">$target</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将原图叠加到目标图中</span><span class="token function">imagecopyresampled</span><span class="token punctuation">(</span><span class="token variable">$dst_image</span><span class="token punctuation">,</span> <span class="token variable">$src_image</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token variable">$src_w</span><span class="token punctuation">,</span> <span class="token variable">$src_h</span><span class="token punctuation">,</span> <span class="token variable">$src_w</span><span class="token punctuation">,</span> <span class="token variable">$src_h</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'Content-Type: image/jpeg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imagejpeg</span><span class="token punctuation">(</span><span class="token variable">$dst_image</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="wu-han-shu-jin-jie">五、函数进阶</span><a href="#wu-han-shu-jin-jie" class="header-anchor">.</a></h2><h3><span id="1-jing-tai-bian-liang">1、静态变量</span><a href="#1-jing-tai-bian-liang" class="header-anchor">.</a></h3><blockquote><p>在函数中定义的局部变量，在函数执行完成后，就会被自动释放。当不希望函数中的局部变量被释放时，可以使用静态变量。<br>在实际开发中，函数执行完成后自动释放局部变量有利于节省内存空间，而静态变量会一直占用内存空间，因此在使用静态变量时一定要酌情考虑</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">static</span> <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token operator">/</span>    <span class="token operator">/</span>声明静态变量，并赋值<span class="token number">1</span>      <span class="token keyword">return</span> <span class="token operator">++</span><span class="token variable">$a</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//静态变量$a自增1，然后返回</span><span class="token punctuation">}</span><span class="token keyword">echo</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//输出结果：2</span><span class="token keyword">echo</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//输出结果：3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="2-yin-yong-can-shu">2、引用参数</span><a href="#2-yin-yong-can-shu" class="header-anchor">.</a></h3><blockquote><p>在变量赋值的时候，有传值赋值和引用赋值两种形式。同样，在函数进行参数传递时，也可以进行引用传参。<br>在编写函数时，在参数的前面加上“&amp;”引用符号即可。</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token operator">++</span><span class="token variable">$a</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">$num</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//调用函数，引用传参</span><span class="token keyword">echo</span> <span class="token variable">$num</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//输出结果：2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>当test()函数第1次调用时，函数内的$a引用了函数外部的变量$num。</li><li>在函数中对$a进行自增运算时，$num的值也会随之改变。</li><li>在实际开发中，通过引用传参可以在函数中直接修改变量的值。</li></ul><p>3、可变参数</p><blockquote><p>在PHP中，函数参数的数量可以是不固定的，可以通过func_get_args()获取调用时传递的所有参数，这些参数以数组的形式保存。</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token variable">$params</span> <span class="token operator">=</span> <span class="token function">func_get_args</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//获取调用时传递的参数，返回数组类型</span>      <span class="token keyword">return</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">echo</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">456</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//输出结果：123-456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>test()函数定义时，没有声明参数</li><li>调用函数时传入的123、456两个参数</li><li>在test()中通过func_get_args()函数获取到传递的参数</li></ul><p>因此，在PHP中，函数的参数数量可以是不固定的</p><blockquote><p>值得一提的是，在调用函数时，还可以使用call_user_func_array()函数以数组的形式传递参数。</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token variable">$a</span> <span class="token operator">+</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">echo</span> <span class="token function">call_user_func_array</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">456</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//输出结果：579</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>call_user_func_array()函数的第1个参数表示需要调用的函数</li><li>call_user_func_array()函数的第2个参数表示传入的参数</li><li>在传参时，数组的第1个元素将赋值给$a，数组的第2个元素将赋值给$b。</li><li>当被调用的函数执行后，其返回值将作为call_user_func_array()函数的返回值进行返回。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php入门笔记3</title>
      <link href="/2020/06/21/6361.html"/>
      <url>/2020/06/21/6361.html</url>
      
        <content type="html"><![CDATA[<h1><span id="php-jin-jie">PHP进阶</span><a href="#php-jin-jie" class="header-anchor">.</a></h1><ul><li>HTTP协议</li><li>会话技术</li><li>文件操作</li><li>图像处理</li><li>函数进阶</li></ul><h2><span id="yi-http-xie-yi">一、 HTTP协议</span><a href="#yi-http-xie-yi" class="header-anchor">.</a></h2><h3><span id="1-shi-me-shi-http-xie-yi">1、 什么是HTTP协议</span><a href="#1-shi-me-shi-http-xie-yi" class="header-anchor">.</a></h3><blockquote><p>Hyper Text Transfer Protocol（超文本传输协议）的缩写,是用于从万维网（WWW:World Wide Web ）<strong>服务器</strong>传输<strong>超文本</strong>到<strong>本地浏览器</strong>的<strong>传送协议</strong>。</p><p>HTTP是一种基于请求与响应式的协议，即浏览器发送请求，服务器做出响应。在交互过程中，请求消息与响应消息统称为HTTP消息。</p></blockquote><h3><span id="2-http-xiao-xi">2、HTTP消息</span><a href="#2-http-xiao-xi" class="header-anchor">.</a></h3><ul><li>消息头<ul><li>保存消息时间、系统信息等内容</li></ul></li><li>实体内容<ul><li>包存网页或表单数据</li></ul></li></ul><blockquote><p>请求网址（Request URL）<img src="/2020/06/21/6361/image-20200621101540627.png" alt></p></blockquote><blockquote><p>请求方法（Request Method）<img src="/2020/06/21/6361/image-20200621101707766.png" alt></p></blockquote><blockquote><p>状态码（Status Code）<img src="/2020/06/21/6361/image-20200621101805949.png" alt></p></blockquote><blockquote><p>IP地址（Remote Address）<img src="/2020/06/21/6361/image-20200621101858003.png" alt></p></blockquote><blockquote><p>响应头（Response Headers）：是服务器返回的信息<img src="/2020/06/21/6361/image-20200621103020732.png" alt></p></blockquote><blockquote><p>请求头（Request Headers）：是发送本次请求时的浏览器的信息<img src="/2020/06/21/6361/image-20200621103215749.png" alt></p></blockquote><h3><span id="3-http-qing-qiu">3、 HTTP请求</span><a href="#3-http-qing-qiu" class="header-anchor">.</a></h3><h4><span id="3-1-qing-qiu-fang-shi-chang-yong">3.1、请求方式(常用)</span><a href="#3-1-qing-qiu-fang-shi-chang-yong" class="header-anchor">.</a></h4><ul><li><p>GET</p><ul><li>数据通过URL地址的参数进行传递,提交的数据是可见的(对于用户)</li><li>传输数据量（不超过1KB）受限于URL的长度</li></ul></li><li><p>POST</p><ul><li>通常用于表单和文件上传</li><li>通过实体内容传递数据</li><li>传输数据量大小理论上没有限制，但服务端会进行限制</li><li>因为POST内容隐藏在实体中，POST相对GET要安全一些</li></ul></li></ul><h4><span id="3-2-huo-qu-qing-qiu-xin-xi-php">3.2、获取请求信息（PHP）</span><a href="#3-2-huo-qu-qing-qiu-xin-xi-php" class="header-anchor">.</a></h4><blockquote><p>PHP接收到浏览器端的请求，会将相关信息保存在<strong><code>$_SERVER</code>超全局变量数组</strong>中,我们通过该数组就可以获得请求消息</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span><span class="token prolog">&lt;?php var_dump($_SERVER) ?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3><span id="4-http-xiang-ying">4、HTTP响应</span><a href="#4-http-xiang-ying" class="header-anchor">.</a></h3><table><thead><tr><th><strong>消息头</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>Location</td><td>控制浏览器显示哪个页面</td></tr><tr><td>Server</td><td>服务器的类型</td></tr><tr><td>Content-Type</td><td>服务器发送内容的类型和编码类型</td></tr><tr><td>Last-Modified</td><td>服务器最后一次修改的时间</td></tr><tr><td>Date</td><td>响应网站的时间</td></tr></tbody></table><h6><span id="zai-mo-ren-qing-kuang-xia-xiang-ying-xiao-xi-tou-you-fu-wu-qi-zi-dong-fa-chu-tong-guo-php-de-header-han-shu-ke-yi-zi-ding-yi-xiang-ying-xiao-xi-tou">在默认情况下，响应消息头由服务器自动发出。通过PHP的header()函数可以自定义响应消息头。</span><a href="#zai-mo-ren-qing-kuang-xia-xiang-ying-xiao-xi-tou-you-fu-wu-qi-zi-dong-fa-chu-tong-guo-php-de-header-han-shu-ke-yi-zi-ding-yi-xiang-ying-xiao-xi-tou" class="header-anchor">.</a></h6><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//设定编码格式</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'Content-Type:text/html;charset=utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//响应404消息</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'HTTP/1.1 404 Not Found'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//页面重定向</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'Location: login.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4><span id="4-1-php-yuan-cheng-qing-qiu">4.1、PHP远程请求</span><a href="#4-1-php-yuan-cheng-qing-qiu" class="header-anchor">.</a></h4><blockquote><p>HTTP协议是一种通信协议，除了浏览器，其他软件也可以通过HTTP协议与服务器交换信息。虽然PHP运行于服务器端，但有时服务器也需要向另一台服务器请求数据，这时可以通过PHP来实现。</p></blockquote><ul><li><p>file_get_contents()</p><p>file_get_contents()函数用于从一个文件中读取内容，返回字符串。该函数既可以读取本地文件，也可以读取远程地址文件。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//请求远程地址</span><span class="token variable">$html</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span>'http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//www.test.com');</span><span class="token comment" spellcheck="true">//获取响应消息头</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$http_response_header</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输出返回信息</span><span class="token keyword">echo</span> <span class="token string">'&lt;hr>'</span><span class="token punctuation">.</span><span class="token function">htmlspecialchars</span><span class="token punctuation">(</span><span class="token variable">$html</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>$http_response_header变量是PHP的内置变量，用于自动保存响应消息。</p></blockquote></li><li><p>cURL扩展</p><p>PHP中提供的cURL扩展可以高效地进行远程请求。在使用cURL扩展前应确保php.ini中已经开启了cURL扩展。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//初始化一个cURL会话</span><span class="token variable">$ch</span> <span class="token operator">=</span> <span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置请求选项，包括具体的URL</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_URL</span><span class="token punctuation">,</span> 'http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//www.itcast.cn');</span><span class="token comment" spellcheck="true">//设定返回的信息中包含响应消息头</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_HEADER</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设定curl_exec()函数将结果返回，而不是直接输出</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//执行一个cURL会话</span><span class="token variable">$html</span> <span class="token operator">=</span> <span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//释放cURL句柄，关闭一个cURL会话</span><span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输出返回信息</span><span class="token keyword">echo</span> <span class="token function">htmlspecialchars</span><span class="token punctuation">(</span><span class="token variable">$html</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2><span id="er-hui-hua-ji-zhu">二、会话技术</span><a href="#er-hui-hua-ji-zhu" class="header-anchor">.</a></h2><blockquote><p>当用户通过浏览器访问网站时，通常情况下，服务器需要对用户的状态进行跟踪。例如，当用户通过用户名和密码进行登录时，如果登录成功，服务器应该记住该用户的登录状态。<br>在Web开发中，服务器跟踪用户信息的技术称为会话技术。</p></blockquote><h3><span id="1-cookie-ji-zhu">1、Cookie技术</span><a href="#1-cookie-ji-zhu" class="header-anchor">.</a></h3><blockquote><p>Cookie是<strong>网站为了辨别用户身份而存储在用户本地终端上的数据</strong>。因为HTTP协议是无状态的，即服务器不知道用户上一次做了什么，这严重阻碍了交互式Web应用程序的实现。</p><p>Cookie就是<strong>解决HTTP无状态性的一种技术</strong>，服务器可以设置或读取Cookie中包含的信息，借此可以跟踪用户与服务器之间的会话状态，通常应用于保存浏览历史、保存购物车商品和保存用户登录状态等场景。</p></blockquote><img src="/2020/06/21/6361/image-20200706092718694.png" style="zoom:50%;"><h5><span id="que-dian">缺点</span><a href="#que-dian" class="header-anchor">.</a></h5><ul><li>Cookie被附加在每个HTTP请求中，无形中增加了数据流量。</li><li>Cookie在HTTP请求中是明文传输的，所以安全性不高，容易被窃取。</li><li>Cookie存储于浏览器，可以被篡改，服务器接收后必须先验证数据的合法性。</li><li>浏览器限制Cookie的数量和大小（通常限制为50个，每个不超过4KB），对于复杂的存储需求来说是不够用的。</li></ul><h4><span id="1-1-cookie-de-shi-yong">1.1、Cookie的使用</span><a href="#1-1-cookie-de-shi-yong" class="header-anchor">.</a></h4><p>​    在PHP中，使用setcookie()函数可以创建或修改Cookie。</p><pre class="line-numbers language-php"><code class="language-php">bool <span class="token function">setcookie</span> <span class="token punctuation">(</span>        string <span class="token variable">$name</span>        <span class="token comment" spellcheck="true">//Cookie名称</span>       string <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//Cookie值</span>       int <span class="token variable">$expire</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//有效期（时间戳）</span>       string <span class="token variable">$path</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//有效路径（默认为当前目录和子目录有效）</span>       string <span class="token variable">$domain</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//有效域名（可允许二级域名下访问Cookie）</span>       bool <span class="token variable">$secure</span> <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//是否只允许HTTPS安全连接访问</span>       bool <span class="token variable">$httponly</span> <span class="token operator">=</span> <span class="token boolean">false</span>      <span class="token comment" spellcheck="true">//是否只允许HTTP访问（可阻止JavaScript访问Cookie）</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>参数$name是必需的，其他参数都是可选的</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string">'city'</span><span class="token punctuation">,</span> <span class="token string">'北京市'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">//未指定过期时间，在会话结束时过期</span><span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string">'city'</span><span class="token punctuation">,</span> <span class="token string">'北京市'</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1800</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//半小时后过期</span><span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string">'city'</span><span class="token punctuation">,</span> <span class="token string">'北京市'</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//一天后过期</span><span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string">'city'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//立即过期（删除COOKIE）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>setcookie()函数的第三个参数是时间戳，当省略时，Cookie仅在本次会话有效，当用户关闭浏览器时，会话就会结束。</li><li>除了可以通过PHP操作Cookie，使用JavaScript也可以操作Cookie，如果只是保存用户在网页中的偏好设置，可以直接用JavaScript操作Cookie，无需服务器进行处理。</li></ul><h4><span id="1-2-du-qu-cookie">1.2、读取Cookie</span><a href="#1-2-du-qu-cookie" class="header-anchor">.</a></h4><blockquote><p>对于浏览器发送的Cookie数据，在PHP中可以使用超全局数组变量<code>$_COOKIE</code>来接收。</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//判断Cookie中是否存在city数据</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">'city'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token variable">$city</span> <span class="token operator">=</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">'city'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//从COOKIE中获取City数据</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//Cookie中的city不存在</span>    <span class="token comment" spellcheck="true">//在这可以设置cookie</span><span class="token punctuation">}</span><span class="token variable">$city</span><span class="token operator">=</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">'city'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string">'city'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>需要注意的是，当PHP第一次通过setcookie()创建Cookie时，<code>$_COOKIE</code>中没有这个数据；只有当浏览器下次请求并携带Cookie时，才能通过<code>$_COOKIE</code>获取到相关信息。</p></blockquote><h4><span id="1-3-cha-kan-cookie">1.3、查看Cookie</span><a href="#1-3-cha-kan-cookie" class="header-anchor">.</a></h4><blockquote><p>当服务器端PHP通过setcookie()向浏览器端响应Cookie后，浏览器就会保存Cookie，在下次请求时会自动携带Cookie。</p></blockquote><p>对于普通用户来说，Cookie是不可见的，但Web开发者可以通过“F12”开发者工具查看Cookie。在开发者工具中切换到【Network】-【Cookies】。</p><img src="/2020/06/21/6361/image-20200706094114117.png" style="zoom:50%;"><img src="/2020/06/21/6361/image-20200706094321663.png" style="zoom:50%;"><ul><li>Cookie在浏览器中是根据域名分开保存的，每个Cookie具有名称（Name）、值（Value）、域名（Domain）、路径（Path）、有效期（Expires）等属性。</li><li>在访问Cookie时，不同路径之间是隔离的，路径可以向下继承。例如，路径为“/admin/”的Cookie可以在admin的子目录中访问，但在admin的上级目录中无法访问。</li></ul><h3><span id="2-session-ji-zhu">2、Session技术</span><a href="#2-session-ji-zhu" class="header-anchor">.</a></h3><blockquote><p>Session在网络应用中称为“会话”，指的是用户在浏览某个网站时，从进入网站到关闭网站所经过的这段时间。<br>Session技术是一种服务器端的技术，它的生命周期从用户访问页面开始，直到断开与网站的连接时结束。Session通常用于保存用户登录状态、保存生成的验证码等。</p></blockquote><p>当PHP启动Session时，服务器会为每个用户的浏览器创建一个供其独享的Session文件。</p><img src="/2020/06/21/6361/image-20200706094745683.png" style="zoom:50%;"><ul><li>每一个Session都具有一个唯一的会话ID，用于标识不同的用户。</li><li>会话ID分别保存在浏览器端和服务器端两个位置，浏览器端<strong>通过Cookie保存</strong>，服务器端<strong>以文件的形式</strong>保存在指定的Session目录中。</li></ul><h4><span id="2-1-cha-kan-sessionid">2.1、查看SessionID</span><a href="#2-1-cha-kan-sessionid" class="header-anchor">.</a></h4><p> Session文件的保存目录是php.ini中的配置项“session.save_path”指定的，其默认路径位于“C:\Windows\Temp”，打开这个目录可以查看Session文件：</p><p><img src="/2020/06/21/6361/image-20200706100035013.png" alt></p><h4><span id="2-2-session-de-shi-yong">2.2、Session的使用</span><a href="#2-2-session-de-shi-yong" class="header-anchor">.</a></h4><ul><li>在使用Session之前，需要通过session_start()函数先启动Session</li><li>当启动后，即可通过超全局变量<code>$_SESSION</code>添加、读取或修改Session中的数据。</li></ul><pre class="line-numbers language-php"><code class="language-php"><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token comment" spellcheck="true">//开启SESSION</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'小明'</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">//向SESSION添加数据（字符串）</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'info'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>           <span class="token comment" spellcheck="true">//向SESSION添加数据（数组）</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'test'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">//判断SESSION中是否存在test</span>      <span class="token variable">$test</span> <span class="token operator">=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'test'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">//读取SESSION中的test</span><span class="token punctuation">}</span><span class="token function">unset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">//删除单个数据</span><span class="token variable">$_SESSION</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                  <span class="token comment" spellcheck="true">//删除所有数据</span><span class="token function">session_destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment" spellcheck="true">//结束当前会话</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>使用“<code>$_SESSION</code>= []”方式可以删除Session中的所有数据，但是Session文件仍然存在，只不过它是一个空文件。<br>如果需要将这个空文件删除，可以通过session_destroy()函数来实现。</p></blockquote><h3><span id="3-shu-chu-huan-chong">3、输出缓冲</span><a href="#3-shu-chu-huan-chong" class="header-anchor">.</a></h3><blockquote><p>在PHP中，输出缓冲（Output Buffer）是一种缓存机制，它通过内存预先保存PHP脚本的输出内容，当缓存的数据量达到设定的大小时，再将数据传输到浏览器。</p><p>输出缓冲机制解决了当有实体内容输出后，再使用header()、setcookie()、session_start()等函数无法设置HTTP消息头的问题，因为消息头必须在实体内容之前被发送，通过输出缓冲，可以使实体内容延缓到HTTP消息头的后面被发送。</p></blockquote><blockquote><p>输出缓冲在PHP中是默认开启的。<br>在php.ini中，它的配置项为“output_buffering = 4096”，表示输出缓冲的内存空间为4KB。</p></blockquote><p>通过PHP的ob函数可以控制输出缓冲，常用函数如下：</p><table><thead><tr><th><strong>函数名</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>ob_start()</td><td>启动输出缓冲</td></tr><tr><td>ob_get_contents()</td><td>返回当前输出缓冲区的内容</td></tr><tr><td>ob_end_flush()</td><td>向浏览器发送输出缓冲区的内容，并禁用输出缓冲</td></tr><tr><td>ob_end_clean()</td><td>清空输出缓冲区的内容，不进行发送，并禁用输出缓冲</td></tr><tr><td>ob_start()</td><td>启动输出缓冲</td></tr></tbody></table><h2><span id="san-wen-jian-cao-zuo">三、文件操作</span><a href="#san-wen-jian-cao-zuo" class="header-anchor">.</a></h2><h3><span id="1-wen-jian-shang-chuan">1、文件上传</span><a href="#1-wen-jian-shang-chuan" class="header-anchor">.</a></h3><h4><span id="1-1-wen-jian-shang-chuan-biao-dan">1.1、文件上传表单</span><a href="#1-1-wen-jian-shang-chuan-biao-dan" class="header-anchor">.</a></h4><p>要想完成文件上传，在设计表单时需要满足以下两个需求：</p><ul><li>表单提交方式设置为POST方式。</li><li>enctype属性的值设置为“multipart/form-data”。</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">enctype</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>multipart/form-data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>upload<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>上传<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>默认情况下，该元素只能上传一个文件。当需要上传多个文件时，可以编写多个标签，或者为一个标签添加multiple属性。</p></blockquote><h4><span id="1-2-chu-li-shang-chuan-wen-jian">1.2、处理上传文件</span><a href="#1-2-chu-li-shang-chuan-wen-jian" class="header-anchor">.</a></h4><p>PHP默认将通过HTTP上传的文件保存到服务器的临时目录下，该临时文件的保存期为脚本的周期，即PHP脚本执行期间。</p><p>在处理上传文件时，通过sleep(seconds)函数延迟PHP文件执行的时间，可以在系统临时目录“C:\Windows\Temp”中查看临时文件。</p><ul><li>提交表单后，上传的文件会以随机生成的文件名保存在系统临时目录中。</li><li>PHP执行完毕后，图中方框内的临时文件就会被释放掉。</li></ul><h4><span id="1-3-huo-qu-wen-jian-xin-xi">1.3、获取文件信息</span><a href="#1-3-huo-qu-wen-jian-xin-xi" class="header-anchor">.</a></h4><p>在PHP释放上传文件之前，在PHP脚本中可以用超全局变量<code>$_FILES</code>来获取上传文件的信息。<br>该变量的外层数组保存上传文件的“name”属性名，内层数组保存的是该上传文件的具体信息</p><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//假设PHP收到来自</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>upload<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></span>上传的文件<span class="token keyword">echo</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'upload'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//上传文件名称，如photo.jpg</span><span class="token keyword">echo</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'upload'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'size'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>               <span class="token comment" spellcheck="true">//上传文件大小，如879394（单位是Byte）</span><span class="token keyword">echo</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'upload'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'error'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>           <span class="token comment" spellcheck="true">//上传是否有误，如0（表示成功）</span><span class="token keyword">echo</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'upload'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'type'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>               <span class="token comment" spellcheck="true">//上传文件的MIME类型，如image/jpeg</span><span class="token keyword">echo</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'upload'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//上传后临时文件名，如C:\Windows\Temp\php9BA5.tmp</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$_FILES数组中的 error 有 7 个值，分别为 0、1、2、3、4、6、7。</p><p>0 表示上传成功<br>1 表示文件大小超过了php.ini中upload_max_filesize选项限制的值<br>2 表示文件大小超过了表单中max_file_size选项指定的值<br>3 表示文件只有部分被上传<br>4 表示没有文件被上传<br>6 表示找不到临时文件夹<br>7 表示文件写入失败</p><h4><span id="1-4-shang-chuan-wen-jian-de-bao-cun">1.4、上传文件的保存</span><a href="#1-4-shang-chuan-wen-jian-de-bao-cun" class="header-anchor">.</a></h4><ul><li>文件上传成功后会暂时保存在系统的临时文件夹中。</li><li>为了保存文件到指定的目录中，需要使用 move_uploaded_file()函数进行操作。</li></ul><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//判断是否有“name=upload”的文件上传，是否上传成功</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'upload'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'upload'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'error'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//上传成功，将文件保存到当前目录下的“uploads”目录中</span>      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string">'upload'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'./uploads'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">echo</span> <span class="token string">'文件上传成功'</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>需要注意的是，移动文件的目标路径“./uploads”必须是已经存在的目录，否则会移动失败。</p></blockquote><h3><span id="2-wen-jian-ji-ben-cao-zuo">2、文件基本操作</span><a href="#2-wen-jian-ji-ben-cao-zuo" class="header-anchor">.</a></h3><h4><span id="2-1-wen-jian-lei-xing">2.1、文件类型</span><a href="#2-1-wen-jian-lei-xing" class="header-anchor">.</a></h4><blockquote><p>文件类型主要分为文件和目录，PHP可以通过filetype()函数来获取文件类型。</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">echo</span> <span class="token function">filetype</span><span class="token punctuation">(</span><span class="token string">'./uploads/1.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//输出结果：file</span><span class="token keyword">echo</span> <span class="token function">filetype</span><span class="token punctuation">(</span><span class="token string">'./uploads'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//输出结果：dir</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>在Windows系统中，PHP只能获得“file”、“dir”和“unknown”三种文件类型。</li><li>在Linux系统中，还可以获取block（块设备文件）、char（字符设置）、link（符号链接）等文件类型。</li></ul><blockquote><p><strong>在操作一个文件时，如果该文件不存在，会发生错误</strong>。为了避免这种情况发生，可以通过<strong>file_exits()</strong>、<strong>is_file()</strong>和<strong>is_dir()</strong>函数，来检查文件或目录是否存在。</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token function">var_dump</span><span class="token punctuation">(</span> <span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token string">'./uploads/1.jpg'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//文件存在，输出：bool(true)</span><span class="token function">var_dump</span><span class="token punctuation">(</span> <span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token string">'./uploads/2.jpg'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//文件不存在，输出：bool(false)</span><span class="token function">var_dump</span><span class="token punctuation">(</span> <span class="token function">is_file</span><span class="token punctuation">(</span><span class="token string">'./uploads/1.jpg'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//输出结果：bool(true)</span><span class="token function">var_dump</span><span class="token punctuation">(</span> <span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token string">'./uploads'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//输出结果：bool(true)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4><span id="2-2-wen-jian-shu-xing">2.2、文件属性</span><a href="#2-2-wen-jian-shu-xing" class="header-anchor">.</a></h4><table><thead><tr><th><strong>函数</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>int filesize(string $filename )</td><td>获取文件大小</td></tr><tr><td>int filectime(string $filename)</td><td>获取文件的创建时间</td></tr><tr><td>int filemtime(string $filename)</td><td>获取文件的修改时间</td></tr><tr><td>int fileatime(string $filename)</td><td>获取文件的上次访问时间</td></tr><tr><td>bool is_readable(string $filename)</td><td>判断给定文件是否可读</td></tr><tr><td>bool is_writable(string $filename)</td><td>判断给定文件是否可写</td></tr><tr><td>bool is_executable(string $filename)</td><td>判断给定文件是否可执行</td></tr><tr><td>array stat(string $filename)</td><td>给出文件的信息</td></tr></tbody></table><blockquote><p>由于PHP中int数据类型表示的数据范围有限，所以filesize()函数对于大于2GB的文件，并不能准确获取其大小，需斟酌使用。</p></blockquote><h4><span id="2-3-wen-jian-cao-zuo">2.3、文件操作</span><a href="#2-3-wen-jian-cao-zuo" class="header-anchor">.</a></h4><p>在程序开发过程中，经常需要对文件进行复制、删除以及重命名等操作。针对这些功能，PHP提供了相应的函数</p><table><thead><tr><th><strong>函数</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>bool copy(string $source, string $dest)</td><td>用于实现拷贝文件的功能</td></tr><tr><td>bool unlink(string $filename)</td><td>用于删除文件</td></tr><tr><td>bool rename(string $old_name, string $new_name)</td><td>用于实现文件或目录的重命名功能</td></tr></tbody></table><h4><span id="2-4-wen-jian-du-xie">2.4、文件读写</span><a href="#2-4-wen-jian-du-xie" class="header-anchor">.</a></h4><p>在PHP中，对于文件的读写提供了许多函数。其中，基于文件的句柄的函数可以对大文件进行流式读写操作；而对于小文件，直接进行读写效率更高。</p><table><thead><tr><th><strong>函数</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>resource fopen(string $filename, string $mode)</td><td>打开文件，获取文件句柄</td></tr><tr><td>bool fclose(resource $handle)</td><td>关闭文件句柄</td></tr><tr><td>string fread(resource $handle, int $length)</td><td>通过句柄读取文件，获取指定长度字符串</td></tr><tr><td>int fwrite(resource $handle, string $string [,int $length])</td><td>通过句柄写入文件</td></tr><tr><td>string fgetc(resource $handle)</td><td>通过句柄读取文件，每次读取一个字节。</td></tr><tr><td>string fgets(resource $handle [,int $length])</td><td>通过句柄读取文件，每次读取一行内容</td></tr><tr><td>array file(string $filename)</td><td>将文件读取到按行分割的数组中</td></tr><tr><td>string file_get_contents(string $filename)</td><td>读取文件</td></tr><tr><td>int file_put_contents(string $filename, mixed $data)</td><td>写入文件</td></tr></tbody></table><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//定义下载文件名</span><span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string">'download.zip'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取文件大小</span><span class="token variable">$size</span> <span class="token operator">=</span> <span class="token function">filesize</span><span class="token punctuation">(</span><span class="token string">'./data.zip'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置HTTP响应消息为文件下载</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'content-type:octet-stream'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'content-length:'</span><span class="token punctuation">.</span><span class="token variable">$size</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'content-disposition:attachment;filename="'</span><span class="token punctuation">.</span><span class="token variable">$name</span><span class="token punctuation">.</span><span class="token string">'"'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$fp</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">'./data.zip'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//以只读方式打开文件</span><span class="token comment" spellcheck="true">//读取文件并输出</span><span class="token variable">$buffer</span> <span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//读取缓冲</span><span class="token variable">$count</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//已读取的大小</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">feof</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token variable">$size</span> <span class="token operator">-</span> <span class="token variable">$count</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//判断文件是否全部读取</span>      <span class="token keyword">echo</span> <span class="token function">fread</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">,</span> <span class="token variable">$buffer</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token variable">$count</span> <span class="token operator">+</span><span class="token operator">=</span> <span class="token variable">$buffer</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//关闭文件，停止脚本</span><span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>exit<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="3-mu-lu-ji-ben-cao-zuo">3、目录基本操作</span><a href="#3-mu-lu-ji-ben-cao-zuo" class="header-anchor">.</a></h3><h4><span id="3-1-chuang-jian-mu-lu">3.1、创建目录</span><a href="#3-1-chuang-jian-mu-lu" class="header-anchor">.</a></h4><p>在进行文件操作时，经常需要创建目录。通过mkdir()函数可以实现目录的创建。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token string">'./path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//在当前目录下创建一个path目录</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token string">'./path1/path2'</span><span class="token punctuation">,</span> <span class="token number">0777</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//在当前目录下递归创建path1/path2目录</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4><span id="3-2-jie-xi-lu-jing">3.2、解析路径</span><a href="#3-2-jie-xi-lu-jing" class="header-anchor">.</a></h4><p>在程序中经常需要对文件路径进行解析操作，如路径中的文件名和目录等。PHP提供了一些函数实现目录的解析操作。</p><table><thead><tr><th><strong>函数</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>string basename(string $path [, string $suffix ])</td><td>返回路径中的文件名</td></tr><tr><td>string dirname(string $path)</td><td>返回路径中的目录部分</td></tr><tr><td>mixed pathinfo(string $path [, int $options ])</td><td>以数组的形式返回路径信息，包括目录名、文件名等</td></tr></tbody></table><blockquote><p>需要注意的是，在处理带有中文的路径时，应注意操作系统对于文件路径的编码问题。只有PHP程序设置的编码与操作系统的编码统一，才能正确处理中文路径。</p></blockquote><h4><span id="3-3-bian-li-mu-lu">3.3、遍历目录</span><a href="#3-3-bian-li-mu-lu" class="header-anchor">.</a></h4><p>在程序中经常需要对某个目录下的子目录或文件进行遍历。为此，PHP中内置了相应的函数用于实现目录或文件的遍历。</p><table><thead><tr><th><strong>函数</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>resource opendir(string $path)</td><td>打开一个目录句柄</td></tr><tr><td>string readdir(resource $dir_handle)</td><td>从目录句柄中读取条目</td></tr><tr><td>void closedir(resource $dir_handle)</td><td>关闭目录句柄</td></tr><tr><td>void rewinddir(resource $dir_handle)</td><td>倒回目录句柄</td></tr><tr><td>array glob(string $pattern [, int $flags = 0 ])</td><td>寻找与模式匹配的文件路径</td></tr></tbody></table><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">getDirSize</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token variable">$size</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>              <span class="token comment" spellcheck="true">//保存文件大小</span>      <span class="token variable">$handle</span> <span class="token operator">=</span> <span class="token function">opendir</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//打开目录句柄</span>      <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$name</span> <span class="token operator">=</span> <span class="token function">readdir</span><span class="token punctuation">(</span><span class="token variable">$handle</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token operator">!=</span><span class="token string">'.'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$name</span> <span class="token operator">!=</span><span class="token string">'..'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                  <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token string">"$path/$name"</span><span class="token punctuation">;</span>                  <span class="token variable">$size</span> <span class="token operator">+</span><span class="token operator">=</span> <span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">getDirSize</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token function">filesize</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>      <span class="token punctuation">}</span>      <span class="token function">closedir</span><span class="token punctuation">(</span><span class="token variable">$handle</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token variable">$size</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">echo</span> <span class="token string">'当前目录大小：'</span><span class="token punctuation">.</span><span class="token function">getDirSize</span><span class="token punctuation">(</span><span class="token string">'./'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">'B'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="si-tu-xiang-chu-li">四、图像处理</span><a href="#si-tu-xiang-chu-li" class="header-anchor">.</a></h2><h3><span id="1-gd-ku-jian-jie">1、GD库简介</span><a href="#1-gd-ku-jian-jie" class="header-anchor">.</a></h3><blockquote><p>GD库是PHP处理图像的扩展库，它提供了一系列用来处理图像的函数，可以实现缩略图、验证码和图片水印等操作。<br>但由于不同的GD库版本支持的图像格式不完全一样，因此，从PHP的4.3版本开始，PHP捆绑了其开发团队实现的GD2库。它不仅支持GIF、JPEG、PNG等格式的图像文件，还支持FreeType、Type1等字体库。</p></blockquote><ul><li>打开PHP的配置文件php.ini</li><li>找到“;extension=php_gd2.dll”配置项，去掉前面的分号“;”注释</li><li>保存PHP的配置文件php.ini，并重启Apache使配置生效</li><li>通过phpinfo()函数可以查看GD库是否开启成功</li></ul><h3><span id="2-tu-xiang-de-chuang-jian-yu-shu-chu">2、图像的创建与输出</span><a href="#2-tu-xiang-de-chuang-jian-yu-shu-chu" class="header-anchor">.</a></h3><h4><span id="2-1-chuang-jian-tu-xiang-zi-yuan">2.1、创建图像资源</span><a href="#2-1-chuang-jian-tu-xiang-zi-yuan" class="header-anchor">.</a></h4><p>在处理图像前，需要先创建图像资源。PHP有多种创建图像的方式，可以基于一个已有的文件创建，也可以直接创建一个空白画布。</p><table><thead><tr><th><strong>函数</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>resource imagecreate(int $width, int $height)</td><td>创建指定宽高的空白画布图像</td></tr><tr><td>resource imagecreatetruecolor (int $width, int $height )</td><td>创建指定宽高的真彩色空白画布图像</td></tr><tr><td>resource imagecreatefromgif(string $filename)</td><td>从给定的文件路径创建GIF格式的图像</td></tr><tr><td>resource imagecreatefromjpeg(string $filename)</td><td>从给定的文件路径创建JPEG格式的图像</td></tr><tr><td>resource imagecreatefrompng(string $filename)</td><td>从给定的文件路径创建PNG格式的图像</td></tr></tbody></table><h4><span id="2-2-tian-chong-yan-se">2.2、填充颜色</span><a href="#2-2-tian-chong-yan-se" class="header-anchor">.</a></h4><p>在使用PHP创建空白画布的时候，并不能直接给画布指定颜色。为画布填充颜色时，可以通过imagecolorallocate()函数来完成。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//创建空白画布资源</span><span class="token variable">$im</span> <span class="token operator">=</span> <span class="token function">imagecreate</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//填充颜色（参数依次为：图像资源、红色数值、绿色数值，蓝色数值）</span><span class="token function">imagecolorallocate</span><span class="token punctuation">(</span><span class="token variable">$im</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">204</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>imagecolorallocate()函数用于为画布填充颜色，该函数的第2~4个参数分别表示RGB中的三种颜色。</p><h4><span id="2-3-tu-xiang-shu-chu">2.3、图像输出</span><a href="#2-3-tu-xiang-shu-chu" class="header-anchor">.</a></h4><p>在完成图像资源的处理后，可以将图像输出到网页中，或者保存到文件中。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//创建空白画布并填充颜色</span><span class="token variable">$im</span> <span class="token operator">=</span> <span class="token function">imagecreate</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imagecolorallocate</span><span class="token punctuation">(</span><span class="token variable">$im</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">204</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置HTTP响应消息，将文档类型设置为GIF图片</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'Content-Type: image/gif'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将图像资源以GIF格式输出</span><span class="token function">imagegif</span><span class="token punctuation">(</span><span class="token variable">$im</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//该函数第2个参数指定图像保存路径，省略时直接输出到网页</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>在在输出时应通过header()函数告知浏览器接下来发送的数据是一张GIF格式的图片，否则浏览器不会以图片的形式展现内容。</p></blockquote><h3><span id="3-hui-zhi-wen-ben-he-tu-xing">3、绘制文本和图形</span><a href="#3-hui-zhi-wen-ben-he-tu-xing" class="header-anchor">.</a></h3><h4><span id="3-1-hui-zhi-wen-ben">3.1、绘制文本</span><a href="#3-1-hui-zhi-wen-ben" class="header-anchor">.</a></h4><p>在PHP中，绘制文本通常用于开发验证码、文字水印等功能。通过imagettftext()函数可以将文字写入到图像中，该函数的参数说明如下。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">array</span> <span class="token function">imagettftext</span><span class="token punctuation">(</span>      resource <span class="token variable">$image</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">//图像资源（通过imagecreate()创建）</span>      float <span class="token variable">$size</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//文字大小（字号）</span>      float <span class="token variable">$angel</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//文字倾斜角度</span>      int <span class="token variable">$x</span><span class="token punctuation">,</span>         <span class="token comment" spellcheck="true">//绘制位置的x坐标</span>      int <span class="token variable">$y</span><span class="token punctuation">,</span>         <span class="token comment" spellcheck="true">//绘制位置的y坐标</span>      int <span class="token variable">$color</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//文字颜色（通过imagecolorallocate()创建）</span>      string <span class="token variable">$fontfile</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//文字字体文件（即.ttf字体文件的保存路径）</span>      string <span class="token variable">$text</span>    <span class="token comment" spellcheck="true">//文字内容</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在使用imagettftext()函数时，需要给定字体文件，可以使用Windows系统中安装的字体文件（在C:\Windows\Fonts目录中），也可以通过网络获取其它字体文件放在项目目录下使用。</p><h4><span id="3-2-hui-zhi-ji-ben-tu-xing">3.2、绘制基本图形</span><a href="#3-2-hui-zhi-ji-ben-tu-xing" class="header-anchor">.</a></h4><p>图形的构成无论多么复杂，都离不开最基本的点、线、面。在PHP中，GD库提供很多绘制基本图形的函数，通过这些函数可以绘制像素点、线条、矩形、图形等。</p><table><thead><tr><th><strong>函数</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>imagesetpixel(resource $image, int $x, int ​$y, int $color)</td><td>绘制一个点，其中参数$x和​$y用于指定该点的坐标，$color用于指定颜色</td></tr><tr><td>imageline(resource $image, int ​$x1, int ​$y1, int ​$x2, int $y2, int $color)</td><td>用$color颜色在图像$image中从坐标（x1,y1）到（x2,y2）绘制一条线条</td></tr><tr><td>imagerectangle(resource $image, int ​$x1, int ​$y1, int $x2, int ​$y2, int $color)</td><td>用$color颜色在$image图像中绘制一个矩形，其左上角坐标为（x1，y1），右下角坐标为（x2，y2）</td></tr><tr><td>imageellipse(resource $image, int ​$cx, int ​$cy, int ​$w, int ​$h, int $color)</td><td>在$image图像中绘制一个以坐标（cx，cy）为中心的椭圆。其中，​$w和​$h分别指定了椭圆的宽度和高度，如果​$w和$h相等，则为正圆。成功时返回true，失败则返回false。</td></tr><tr><td>imagesetpixel(resource $image, int ​$x, int ​$y, int $color)</td><td>绘制一个点，其中参数$x和​$y用于指定该点的坐标，$color用于指定颜色</td></tr></tbody></table><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//创建画布、填充颜色、创建颜色</span><span class="token variable">$im</span> <span class="token operator">=</span> <span class="token function">imagecreate</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//创建200*100大小的画布</span><span class="token function">imagecolorallocate</span><span class="token punctuation">(</span><span class="token variable">$im</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//为画布填充白色</span><span class="token variable">$color</span> <span class="token operator">=</span> <span class="token function">imagecolorallocate</span><span class="token punctuation">(</span><span class="token variable">$im</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//创建黑色</span><span class="token comment" spellcheck="true">//绘制矩形</span><span class="token function">imagerectangle</span><span class="token punctuation">(</span><span class="token variable">$im</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token variable">$color</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//绘制文本（使用Windows自带的黑体字体）</span><span class="token function">imagettftext</span><span class="token punctuation">(</span><span class="token variable">$im</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token variable">$color</span><span class="token punctuation">,</span> <span class="token string">'C:/Windows/Fonts/simhei.ttf'</span><span class="token punctuation">,</span> <span class="token string">'矩形'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//输出图像</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'Content-Type: image/png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">imagepng</span><span class="token punctuation">(</span><span class="token variable">$im</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="4-tu-xiang-suo-fang-yu-die-jia">4、图像缩放与叠加</span><a href="#4-tu-xiang-suo-fang-yu-die-jia" class="header-anchor">.</a></h3><p>在创建图像资源时，除了创建空白画布，还可以基于图片文件进行创建。当需要对图片进行缩放、叠加时，可以通过imagecopyresampled()函数来完成。</p><pre class="line-numbers language-php"><code class="language-php">bool <span class="token function">imagecopyresampled</span><span class="token punctuation">(</span>      resource <span class="token variable">$dst_image</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//目标图像资源</span>      resource <span class="token variable">$src_image</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//原图像资源</span>      int <span class="token variable">$dst_x</span><span class="token punctuation">,</span>         <span class="token comment" spellcheck="true">//目标的x坐标</span>      int <span class="token variable">$dst_y</span><span class="token punctuation">,</span>         <span class="token comment" spellcheck="true">//目标的y坐标</span>      int <span class="token variable">$src_x</span><span class="token punctuation">,</span>         <span class="token comment" spellcheck="true">//原图的x坐标</span>      int <span class="token variable">$src_y</span><span class="token punctuation">,</span>         <span class="token comment" spellcheck="true">//原图的y坐标</span>      int <span class="token variable">$dst_w</span><span class="token punctuation">,</span>         <span class="token comment" spellcheck="true">//目标图像的宽</span>      int <span class="token variable">$dst_h</span><span class="token punctuation">,</span>         <span class="token comment" spellcheck="true">//目标图像的高</span>      int <span class="token variable">$src_w</span><span class="token punctuation">,</span>         <span class="token comment" spellcheck="true">//原图像的宽</span>      int <span class="token variable">$src_h</span>         <span class="token comment" spellcheck="true">//原图像的高</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//定义基本变量</span><span class="token variable">$source</span> <span class="token operator">=</span> <span class="token string">'./1.jpg'</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//原图路径</span><span class="token variable">$dst_w</span> <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//目标宽度</span><span class="token variable">$dst_h</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>    目标高度<span class="token function">list</span><span class="token punctuation">(</span><span class="token variable">$src_w</span><span class="token punctuation">,</span> <span class="token variable">$src_h</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">getimagesize</span><span class="token punctuation">(</span><span class="token variable">$source</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//获取原图宽高</span><span class="token variable">$src_im</span> <span class="token operator">=</span> <span class="token function">imagecreatefromjpeg</span><span class="token punctuation">(</span><span class="token variable">$source</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//创建原图资源</span><span class="token variable">$dst_im</span> <span class="token operator">=</span> <span class="token function">imagecreatetruecolor</span><span class="token punctuation">(</span><span class="token variable">$dst_w</span><span class="token punctuation">,</span> <span class="token variable">$dst_h</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//创建目标图像画布资源</span><span class="token comment" spellcheck="true">//将原图缩放到目标图像中</span><span class="token function">imagecopyresampled</span><span class="token punctuation">(</span><span class="token variable">$dst_im</span><span class="token punctuation">,</span> <span class="token variable">$src_im</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token variable">$dst_w</span><span class="token punctuation">,</span> <span class="token variable">$dst_h</span><span class="token punctuation">,</span> <span class="token variable">$src_w</span><span class="token punctuation">,</span> <span class="token variable">$src_h</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//保存到文件中（参数依次为图像资源、保存路径、JPEG压缩质量0~100）</span><span class="token function">imagejpeg</span><span class="token punctuation">(</span><span class="token variable">$dst_im</span><span class="token punctuation">,</span> <span class="token string">'./thumb_1.jpg'</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//定义基本变量</span><span class="token variable">$source</span> <span class="token operator">=</span> <span class="token string">'./1.jpg'</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//原图路径</span><span class="token variable">$target</span> <span class="token operator">=</span> <span class="token string">'./2.jpg'</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//目标图路径</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token variable">$src_w</span><span class="token punctuation">,</span> <span class="token variable">$src_h</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">getimagesize</span><span class="token punctuation">(</span><span class="token variable">$source</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//获取原图的宽高</span><span class="token comment" spellcheck="true">//创建图像资源</span><span class="token variable">$src_image</span> <span class="token operator">=</span> <span class="token function">imagecreatefromjpeg</span><span class="token punctuation">(</span><span class="token variable">$source</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$dst_image</span> <span class="token operator">=</span> <span class="token function">imagecreatefromjpeg</span><span class="token punctuation">(</span><span class="token variable">$target</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//将原图叠加到目标图中</span><span class="token function">imagecopyresampled</span><span class="token punctuation">(</span><span class="token variable">$dst_image</span><span class="token punctuation">,</span> <span class="token variable">$src_image</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token variable">$src_w</span><span class="token punctuation">,</span> <span class="token variable">$src_h</span><span class="token punctuation">,</span> <span class="token variable">$src_w</span><span class="token punctuation">,</span> <span class="token variable">$src_h</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'Content-Type: image/jpeg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imagejpeg</span><span class="token punctuation">(</span><span class="token variable">$dst_image</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="wu-han-shu-jin-jie">五、函数进阶</span><a href="#wu-han-shu-jin-jie" class="header-anchor">.</a></h2><h3><span id="1-jing-tai-bian-liang">1、静态变量</span><a href="#1-jing-tai-bian-liang" class="header-anchor">.</a></h3><blockquote><p>在函数中定义的局部变量，在函数执行完成后，就会被自动释放。当不希望函数中的局部变量被释放时，可以使用静态变量。<br>在实际开发中，函数执行完成后自动释放局部变量有利于节省内存空间，而静态变量会一直占用内存空间，因此在使用静态变量时一定要酌情考虑</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">static</span> <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token operator">/</span>    <span class="token operator">/</span>声明静态变量，并赋值<span class="token number">1</span>      <span class="token keyword">return</span> <span class="token operator">++</span><span class="token variable">$a</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//静态变量$a自增1，然后返回</span><span class="token punctuation">}</span><span class="token keyword">echo</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//输出结果：2</span><span class="token keyword">echo</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//输出结果：3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="2-yin-yong-can-shu">2、引用参数</span><a href="#2-yin-yong-can-shu" class="header-anchor">.</a></h3><blockquote><p>在变量赋值的时候，有传值赋值和引用赋值两种形式。同样，在函数进行参数传递时，也可以进行引用传参。<br>在编写函数时，在参数的前面加上“&amp;”引用符号即可。</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token operator">++</span><span class="token variable">$a</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">$num</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//调用函数，引用传参</span><span class="token keyword">echo</span> <span class="token variable">$num</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//输出结果：2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>当test()函数第1次调用时，函数内的$a引用了函数外部的变量$num。</li><li>在函数中对$a进行自增运算时，$num的值也会随之改变。</li><li>在实际开发中，通过引用传参可以在函数中直接修改变量的值。</li></ul><p>3、可变参数</p><blockquote><p>在PHP中，函数参数的数量可以是不固定的，可以通过func_get_args()获取调用时传递的所有参数，这些参数以数组的形式保存。</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token variable">$params</span> <span class="token operator">=</span> <span class="token function">func_get_args</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//获取调用时传递的参数，返回数组类型</span>      <span class="token keyword">return</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">echo</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">456</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//输出结果：123-456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>test()函数定义时，没有声明参数</li><li>调用函数时传入的123、456两个参数</li><li>在test()中通过func_get_args()函数获取到传递的参数</li></ul><p>因此，在PHP中，函数的参数数量可以是不固定的</p><blockquote><p>值得一提的是，在调用函数时，还可以使用call_user_func_array()函数以数组的形式传递参数。</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token variable">$a</span> <span class="token operator">+</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">echo</span> <span class="token function">call_user_func_array</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">456</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//输出结果：579</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>call_user_func_array()函数的第1个参数表示需要调用的函数</li><li>call_user_func_array()函数的第2个参数表示传入的参数</li><li>在传参时，数组的第1个元素将赋值给$a，数组的第2个元素将赋值给$b。</li><li>当被调用的函数执行后，其返回值将作为call_user_func_array()函数的返回值进行返回。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS入门(表现层) -- B站狂神说java笔记</title>
      <link href="/2020/06/20/22113.html"/>
      <url>/2020/06/20/22113.html</url>
      
        <content type="html"><![CDATA[<h1><span id="css-ru-men-biao-xian-ceng-b-zhan-kuang-shen-shuo-java-bi-ji">CSS入门(表现层) – B站狂神说java笔记</span><a href="#css-ru-men-biao-xian-ceng-b-zhan-kuang-shen-shuo-java-bi-ji" class="header-anchor">.</a></h1><p><img src="/2020/06/20/22113/image-20200619022400050.png" alt></p><h3><span id="1-shi-me-shi-css">1.什么是CSS</span><a href="#1-shi-me-shi-css" class="header-anchor">.</a></h3><p>Cascading Style Sheets 层叠级联样式表</p><p>CSS：表现（美化页面）</p><p>字体、颜色、边距、高度、宽度、背景图、网页定位、网页浮动。。。</p><h3><span id="1-fa-zhan-shi">1.发展史</span><a href="#1-fa-zhan-shi" class="header-anchor">.</a></h3><p>CSS1.0</p><p>CSS2.0 DIV(块) + CSS    HTML与CSS分离，网页变的更简单，SEO优化</p><p>CSS2.1 浮动和定位（重点）</p><p>CSS3 圆角、阴影、动画、、、    浏览器兼容性~（如果要精通就这 可以上菜鸟教程）</p><h3><span id="2-kuai-su-ru-men">2.快速入门</span><a href="#2-kuai-su-ru-men" class="header-anchor">.</a></h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE HTML></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tilte</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 规范：&lt;style> 可以编写css的代码，设一个声明，最好使用分号结尾         &lt;style>            选择器 {                声明1;                声明2;                声明3;            }        &lt;/style>    --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector">h1 </span><span class="token punctuation">{</span>            <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>CSS 优势：</p><ul><li>内容和表现分离</li><li>网页结构表现统一，可以实现复用</li><li>样式十分丰富</li><li>建议使用独立于html的css文件</li><li>利用SEO，容易被搜索引擎收录 （用Vue这个框架，是及其不容易被收录的）</li></ul><h3><span id="3-css-san-chong-dao-ru-fang-shi">3.CSS三种导入方式</span><a href="#3-css-san-chong-dao-ru-fang-shi" class="header-anchor">.</a></h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tilte</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--内部样式--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector">h1</span><span class="token punctuation">{</span>            <span class="token property">color</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--外部样式--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>css/style.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 行内样式 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span>red</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我是标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*style.css*/</span><span class="token selector">h1</span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span>yellow<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><mark>优先级</mark>: 就近原则（谁里元素最近，就显示谁的样式）</p><p>拓展：</p><p>​    外部样式两种写法</p><ul><li><p>导入式(比较少用) css2.1特有的  必须在style标签里面</p><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--head标签内--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token atrule"><span class="token rule">@import</span> <span class="token url">url("css/style.css")</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><mark>弊端：</mark>当你网页代码比较多时，会先展示结构，后</p></li><li><p>链接式（主流）</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>css/style.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h3><span id="4-xuan-ze-qi">4. 选择器</span><a href="#4-xuan-ze-qi" class="header-anchor">.</a></h3><blockquote><p>作用：选择页面上的某一个或者某一类元素</p></blockquote><h4><span id="4-1-ji-ben-xuan-ze-qi">4.1 基本选择器</span><a href="#4-1-ji-ben-xuan-ze-qi" class="header-anchor">.</a></h4><ul><li>标签选择器 ：选中一类标签<ul><li>标签名 {}</li></ul></li><li>类选择器：选择所有class属性一致的标签，跨标签<ul><li>.类名 {}</li></ul></li><li>Id选择器（保证全局唯一）<ul><li>#id名 {}</li></ul></li></ul><p><mark>优先级</mark>：id &gt; class &gt; 标签</p><h4><span id="4-2-ceng-ci-xuan-ze-qi-xia-mian-de-ming-cheng-shi-bian-yu-li-jie">4.2 层次选择器(下面的名称是便于理解)</span><a href="#4-2-ceng-ci-xuan-ze-qi-xia-mian-de-ming-cheng-shi-bian-yu-li-jie" class="header-anchor">.</a></h4><ul><li>后代选择器：在某个元素的后面 所有子代 孙代 。。。</li><li>子选择器  下面的一代</li><li>相连兄弟选择器 只是下面的的相连节点</li><li>通用选择器 自己和自己下面的所有的</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>p0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>active<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>p1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>p2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>p3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>p4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>p5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>p6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">&lt;style>    &lt;!-- 后代选择器 -->    body p </span><span class="token punctuation">{</span>        <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">&lt;!-- 子选择器 -->    body>p</span><span class="token punctuation">{</span>        <span class="token property">background</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">&lt;!-- 相连兄弟选择器: 只是下面的一个 -->    <span class="token class">.active</span> + p</span><span class="token punctuation">{</span>        <span class="token property">background</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">&lt;!-- 通用兄弟选择器: 自己和自己下面的所有的 -->    <span class="token class">.active</span>~p</span><span class="token punctuation">{</span>        <span class="token property">background</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>    <span class="token punctuation">}</span>&lt;/style><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4><span id="4-3-jie-gou-wei-lei-xuan-ze-qi">4.3 结构伪类选择器</span><a href="#4-3-jie-gou-wei-lei-xuan-ze-qi" class="header-anchor">.</a></h4><p>格式   <strong>selector:pseudo-classes（伪类）{}</strong></p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>h1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>p1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>p2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>p3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>li1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>li2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>li3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css"><code class="language-css">&lt;style>    <span class="token comment" spellcheck="true">/* ul的第一个子元素 */</span>    <span class="token selector">ul li<span class="token pseudo-class">:first-child</span></span><span class="token punctuation">{</span>        <span class="token property">color</span><span class="token punctuation">:</span>yellow<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/* ul的最后一个子元素 */</span>    <span class="token selector">ul li<span class="token pseudo-class">:last-child</span></span><span class="token punctuation">{</span>        <span class="token property">color</span><span class="token punctuation">:</span>pink<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*选中p1 ： 定位到父元素，选择当前的第一个元素 *， 选择当前p元素的父级元素的第一个子元素，并且是当前元素（p）才生效*/</span>    <span class="token selector">p<span class="token pseudo-class">:nth-child(2)</span></span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">/*按顺序  如果有其他元素 它的位置也算做其中之一，但是它的样式不会有任何改变*/</span>         <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">p<span class="token pseudo-class">:nth-of-type(2)</span></span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">/*按类型*/</span>         <span class="token property">color</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span>    <span class="token punctuation">}</span>&lt;/style><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/06/20/22113/image-20200619072450955.png" alt></p><h4><span id="4-4-shu-xing-xuan-ze-qi">4.4 属性选择器</span><a href="#4-4-shu-xing-xuan-ze-qi" class="header-anchor">.</a></h4><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>demo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.baidu.com<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>links item first<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>first<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>links item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>images/12.html<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>links item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>images/12.png<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>links item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.baidu.com<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>links item<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>first<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>abc<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>links item last<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">&lt;style>    <span class="token class">.demo</span> a</span><span class="token punctuation">{</span>        <span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span>        <span class="token property">display</span><span class="token punctuation">:</span>block<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">50</span>px<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">50</span>px<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span><span class="token number">10</span>px<span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#270066</span><span class="token punctuation">;</span>        <span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span>white<span class="token punctuation">;</span>        <span class="token property">text-decoration</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span>        <span class="token property">margin-right</span><span class="token punctuation">:</span><span class="token number">5</span>px<span class="token punctuation">;</span>        <span class="token property">font</span><span class="token punctuation">:</span>bold <span class="token number">20</span>px/<span class="token number">50</span>px Arial<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*        标签[属性名=属性值]{}        [属性名=属性值(可以是正则表达式)]        = 绝对等于(属性值及个数都相等)        *= 包含等于        ^= 以什么开头        $= 以什么结尾        ...        ...    */</span>    <span class="token comment" spellcheck="true">/*        存在id=first的元素 选中 背景变红    */</span>    <span class="token selector">a<span class="token attribute">[id='first']</span></span><span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span>red    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*        存在class=links 背景变绿    */</span>    <span class="token comment" spellcheck="true">/*变不了绿 因为所有class 至少有"links item"组成，而"links item" != "links  (绝对等于)" */</span>    <span class="token selector">a<span class="token attribute">[class='links']</span></span><span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*变绿不行 那么 全变黄了; 这个只要包含 links 就可以改变样式" */</span>    <span class="token selector">a<span class="token attribute">[class*='links']</span></span><span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span>yellow<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/*选择href属性值中以http开头 变橙色*/</span>    <span class="token selector">a<span class="token attribute">[href^='http']</span></span><span class="token punctuation">{</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span>    <span class="token punctuation">}</span>&lt;/style><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="5-mei-hua-wang-ye">5.美化网页</span><a href="#5-mei-hua-wang-ye" class="header-anchor">.</a></h3><h4><span id="5-1-wei-shi-me-yao-mei-hua-ye-mian">5.1 为什么要美化页面</span><a href="#5-1-wei-shi-me-yao-mei-hua-ye-mian" class="header-anchor">.</a></h4><ul><li>有效的传递页面信息</li><li>美化页面，页面漂亮，才能吸引用户</li><li>凸显页面的主题</li><li>提高用户的体验</li></ul><p>span标签：重点要突出的字，使用span标签括起来</p><h4><span id="5-2-zi-ti-yang-shi-chang-yong">5.2 字体样式（常用）</span><a href="#5-2-zi-ti-yang-shi-chang-yong" class="header-anchor">.</a></h4><ul><li>font-family 字体</li><li>font-size 字体大小</li><li>font-weight 字体粗细</li><li>color 字体颜色</li><li></li></ul><h4><span id="5-3-wen-ben-yang-shi-chang-yong">5.3 文本样式（常用）</span><a href="#5-3-wen-ben-yang-shi-chang-yong" class="header-anchor">.</a></h4><ul><li><p>颜色 color</p><ul><li>单词 red</li><li>RGB 红绿蓝 rgb(r,g,b) 或 #——</li><li>RGBA 红绿蓝透明度 rgba(r,g,b,a);</li></ul></li><li><p>文本对齐方式 text-align </p><ul><li>center</li><li>left</li><li>right</li></ul></li><li><p>首行缩进 text-indent</p></li><li><p>行高 line-height    <mark>行高 与 块的高度一致 文本就可以上下居中</mark></p></li><li><p>装饰 text-decoration</p><ul><li>underline 下划线</li><li>line-through 中划线</li><li>overline 上划线</li><li>none 去划线</li></ul></li><li><p><mark>文本图片垂直对齐 </mark>vertical-align</p><ul><li>top</li><li><strong>middle</strong></li><li>bottom</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!doctype html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">            <span class="token comment" spellcheck="true">/*因为图片-文本垂直居中对齐 是图片和文字相对的，所以两个都要设置*/</span>          <span class="token selector">img,span</span><span class="token punctuation">{</span>               <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>           <span class="token punctuation">}</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>img</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>武当王也，拜见老天师<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p><img src="/2020/06/20/22113/image-20200619092336196.png" alt="image-20200619092336196"></p><h4><span id="5-4-chao-lian-jie-wei-lei">5.4 超链接伪类</span><a href="#5-4-chao-lian-jie-wei-lei" class="header-anchor">.</a></h4><ul><li><p>link  未访问的链接</p></li><li><p>visited 已访问的链接</p></li><li><p><strong>hover</strong> 鼠标悬浮在链接上</p></li><li><p>active 被选择的链接</p><p><strong>1.hover的声明必须在link和visited之后</strong> </p><p><strong>2.active的声明必须在hover之后</strong></p></li></ul><h4><span id="5-5-wen-ben-yin-ying-xin-te-xing">5.5 文本阴影（新特性）</span><a href="#5-5-wen-ben-yin-ying-xin-te-xing" class="header-anchor">.</a></h4><ul><li>text-shadow：阴影颜色  水平偏移  垂直偏移  阴影半径</li></ul><h4><span id="5-6-lie-biao">5.6 列表</span><a href="#5-6-lie-biao" class="header-anchor">.</a></h4><ul><li>list-style：none 去掉圆点<ul><li>circle 空心圆</li><li>decimal 数字</li><li>square 正方形</li><li>。。。</li></ul></li></ul><h4><span id="5-7-bei-jing">5.7 背景</span><a href="#5-7-bei-jing" class="header-anchor">.</a></h4><ul><li>背景颜色 background-color</li><li>背景图片 background-image ：url(“”)</li><li>平铺 background-repeat<ul><li>默认平铺的 repeat</li><li>repeat-x</li><li>repeat-y</li><li>no-repeat</li></ul></li><li>background ：颜色  图片  图片位置（）  平铺方式</li></ul><h4><span id="5-8-jian-bian">5.8 渐变</span><a href="#5-8-jian-bian" class="header-anchor">.</a></h4><pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*例子*/</span><span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#52ACFF</span><span class="token punctuation">;</span><span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span><span class="token number">180</span>deg, <span class="token hexcode">#52ACFF</span> <span class="token number">25%</span>, <span class="token hexcode">#FFE32C</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4><span id="5-9-he-zi-mo-xing">5.9 盒子模型</span><a href="#5-9-he-zi-mo-xing" class="header-anchor">.</a></h4><ul><li><p>margin：外边距</p></li><li><p>padding：内边距</p></li><li><p>border：边框</p></li></ul><p><img src="/2020/06/20/22113/image-20200619110600410.png" alt="image-20200619110600410"></p><h5><span id="5-9-1-bian-kuang-border-cu-xi-yang-shi-yan-se">5.9.1 边框 border：粗细 样式 颜色</span><a href="#5-9-1-bian-kuang-border-cu-xi-yang-shi-yan-se" class="header-anchor">.</a></h5><ol><li>边框的粗细</li><li>边框的样式</li><li>边框的颜色</li></ol><h4><span id="5-10-yuan-jiao-bian-kuang"><mark>5.10 圆角边框</mark></span><a href="#5-10-yuan-jiao-bian-kuang" class="header-anchor">.</a></h4><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!doctype html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">            <span class="token comment" spellcheck="true">/*                圆角： >= 宽度                小边宽度构造源            */</span>            <span class="token selector">div</span><span class="token punctuation">{</span>                <span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span>                <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>                <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">span</span><span class="token punctuation">{</span>                <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>                <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">div<span class="token pseudo-class">:nth-child(1)</span></span><span class="token punctuation">{</span>                <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>                <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>                <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">10</span>px solid red<span class="token punctuation">;</span>                <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">div<span class="token pseudo-class">:nth-child(2)</span></span><span class="token punctuation">{</span>                <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>                <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>                <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">10</span>px solid red<span class="token punctuation">;</span>                <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">100</span>px <span class="token number">100</span>px <span class="token number">0</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">div<span class="token pseudo-class">:nth-child(2)</span> span</span><span class="token punctuation">{</span>                <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>             <span class="token punctuation">}</span>            <span class="token selector">div<span class="token pseudo-class">:nth-child(3)</span></span><span class="token punctuation">{</span>                <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>                <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>                <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">10</span>px solid red<span class="token punctuation">;</span>                <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">div<span class="token pseudo-class">:nth-child(4)</span></span><span class="token punctuation">{</span>                <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>                <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>                <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">10</span>px solid red<span class="token punctuation">;</span>                <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">div<span class="token pseudo-class">:nth-child(5)</span></span><span class="token punctuation">{</span>                <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>                <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>                <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">10</span>px solid red<span class="token punctuation">;</span>                <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector">div<span class="token pseudo-class">:nth-child(5)</span> span</span><span class="token punctuation">{</span>                <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>             <span class="token punctuation">}</span>            <span class="token selector">div<span class="token pseudo-class">:nth-child(6)</span></span><span class="token punctuation">{</span>                <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>                <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>                <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">10</span>px solid red<span class="token punctuation">;</span>                <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">1000</span>px<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>       <span class="token comment" spellcheck="true">&lt;!--    border-radius    --></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>100px<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>100px<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>30px<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>50px<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>100px<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>1000px<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/06/20/22113/image-20200619115428347.png" alt="image-20200619115428347"></p><h4><span id="5-11-he-zi-yin-ying"><mark>5.11 盒子阴影</mark></span><a href="#5-11-he-zi-yin-ying" class="header-anchor">.</a></h4><p><strong>box-shadow:</strong>水平偏移  垂直偏移  模糊程度(px)  颜色</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector">div </span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">10</span>px solid pink<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/*阴影 颜色 水平 垂直 模糊程度*/</span>            <span class="token property">box-shadow</span><span class="token punctuation">:</span> red <span class="token number">10</span>px <span class="token number">10</span>px <span class="token number">100</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/06/20/22113/image-20200619120531110.png" alt="image-20200619120531110"></p><h4><span id="5-12-fu-dong">5.12 浮动</span><a href="#5-12-fu-dong" class="header-anchor">.</a></h4><ul><li><p>float</p><ul><li>left</li><li>right</li></ul></li><li><p>display：</p><ul><li>inline</li><li>block</li><li>inline-block</li><li>none：消失</li></ul></li></ul><p><strong>问题</strong>：边框塌陷 </p><p><strong>没有使用浮动</strong>紫色的是父级边框</p><p><img src="/2020/06/20/22113/image-20200619125625442.png" alt="没有使用浮动"></p><p><strong>使用浮动后</strong>紫色边框被压扁了</p><p><img src="/2020/06/20/22113/image-20200619125923675.png" alt="使用浮动后"></p><p><strong>解决方法</strong>：</p><ul><li>clear<ul><li>left</li><li>right</li><li>both</li></ul></li></ul><h4><span id="5-13-fu-ji-bian-kuang-ta-xian">5.13 父级边框塌陷</span><a href="#5-13-fu-ji-bian-kuang-ta-xian" class="header-anchor">.</a></h4><p><strong>1.将父级边框高度设置到比浮动高度大（比较LOW）</strong></p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.father</span> </span><span class="token punctuation">{</span>                <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">10</span>px solid <span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">47</span>, <span class="token number">12</span>, <span class="token number">161</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">1000</span>px<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/06/20/22113/image-20200619133432172.png" alt="image-20200619133432172"></p><p><strong>2.增加一个空的div 设置clear 清除浮动</strong></p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!doctype html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">            <span class="token selector"><span class="token class">.father</span> </span><span class="token punctuation">{</span>                <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">10</span>px solid <span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">47</span>, <span class="token number">12</span>, <span class="token number">161</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token selector"><span class="token class">.father</span>  div<span class="token pseudo-class">:nth-of-type(1)</span> </span><span class="token punctuation">{</span>                <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">2</span>px solid red<span class="token punctuation">;</span>                <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">/* display: inline-block; */</span>            <span class="token punctuation">}</span>            <span class="token selector"><span class="token class">.father</span>  div<span class="token pseudo-class">:nth-of-type(2)</span> </span><span class="token punctuation">{</span>                <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">2</span>px solid red<span class="token punctuation">;</span>                <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">/* display: inline-block; */</span>            <span class="token punctuation">}</span>            <span class="token selector"><span class="token class">.father</span>  div<span class="token pseudo-class">:nth-of-type(3)</span> </span><span class="token punctuation">{</span>                <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">2</span>px solid red<span class="token punctuation">;</span>                <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">/* display: inline-block; */</span>            <span class="token punctuation">}</span>            <span class="token selector"><span class="token class">.clear</span></span><span class="token punctuation">{</span>                <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>                <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid darkgoldenrod            <span class="token punctuation">}</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>father<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>img</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>img</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>img</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>武当王也,拜见老天师！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 增加空div clear清除浮动 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>clear<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/06/20/22113/image-20200619133010045.png" alt="image-20200619133010045"></p><p><strong>3.overflow 溢出  在父级元素中添加该样式</strong></p><ul><li>hidden 内容超过容器部分隐藏</li><li>scroll  以滚动条方式 容纳全部内容</li></ul><p><strong>hidden</strong></p><pre class="line-numbers language-css"><code class="language-css"> <span class="token selector"><span class="token class">.father</span> </span><span class="token punctuation">{</span>     <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">10</span>px solid <span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">47</span>, <span class="token number">12</span>, <span class="token number">161</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">/* height: 1000px; */</span>     <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/06/20/22113/image-20200619134516220.png" alt="image-20200619134516220"></p><p><strong>Scroll</strong></p><pre class="line-numbers language-css"><code class="language-css"> <span class="token selector"><span class="token class">.father</span> </span><span class="token punctuation">{</span>     <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">10</span>px solid <span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">47</span>, <span class="token number">12</span>, <span class="token number">161</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">/* height: 1000px; */</span>     <span class="token property">overflow</span><span class="token punctuation">:</span> scroll<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/06/20/22113/image-20200619134056874.png" alt="image-20200619134056874"></p><ol start="4"><li>通过 伪类 :after实现</li></ol><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.father</span><span class="token pseudo-element">:after</span> </span><span class="token punctuation">{</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token property">clear</span><span class="token punctuation">:</span>both<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>小结</strong></p><ol><li><p>设置父元素的高度</p><p>简单，元素假设没有固定的高度，就会被限制</p></li><li><p>浮动元素后面添加空div</p><p>简单，代码中尽量避免空div</p></li><li><p>overflow</p><p>简单，下拉的一些场景避免使用</p></li><li><p>父类添加一个伪类，after</p><p>写法复杂一点，但是没有副作用，推荐使用</p></li></ol><h4><span id="dui-bi">对比</span><a href="#dui-bi" class="header-anchor">.</a></h4><ul><li>display<ul><li>方向不可控制</li></ul></li><li>float<ul><li>浮动起来的话会脱离标准文档流，所以要解决父级边框塌陷问题</li></ul></li></ul><h4><span id="5-14-ding-wei">5.14 定位</span><a href="#5-14-ding-wei" class="header-anchor">.</a></h4><h5><span id="5-14-1-xiang-dui-ding-wei">5.14.1 相对定位</span><a href="#5-14-1-xiang-dui-ding-wei" class="header-anchor">.</a></h5><ul><li>相对于原来的位置进行偏移</li><li>position：relation</li><li>他仍然在标准文件流中</li></ul><h5><span id="5-14-2-jue-dui-ding-wei">5.14.2 绝对定位</span><a href="#5-14-2-jue-dui-ding-wei" class="header-anchor">.</a></h5><ul><li><p>position：absolute</p></li><li><p>没有父级元素的前提下，相对于浏览器定位</p></li><li><p>假如父级元素存在定位，我们通常会相对于父级元素进行偏移，在父级元素范围内移动</p></li></ul><p>相对于父级或浏览器的位置，进行制定的偏移，绝对定位的话，它不在标准文档流中，原来的位置不会保留</p><h5><span id="5-14-3-gu-ding-ding-wei">5.14.3 固定定位</span><a href="#5-14-3-gu-ding-ding-wei" class="header-anchor">.</a></h5><ul><li>position：fixed</li></ul><h5><span id="5-14-4-z-index">5.14.4 z-index</span><a href="#5-14-4-z-index" class="header-anchor">.</a></h5><ul><li>0 - 999</li></ul><p><strong>opacity</strong> 背景透明度(&lt;1)</p><p>filter:Alpha(opacity=50)</p><blockquote><p>margin : 0 auto; 居中的前提</p><p>要求： 块元素， 块元素有固定的宽度</p></blockquote><p>###</p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript入门(行为层) -- B站狂神说Java笔记</title>
      <link href="/2020/06/20/11091.html"/>
      <url>/2020/06/20/11091.html</url>
      
        <content type="html"><![CDATA[<h2><span id="javascript-ru-men-xing-wei-ceng-b-zhan-kuang-shen-shuo-java-bi-ji">JavaScript入门(行为层) – B站狂神说Java笔记</span><a href="#javascript-ru-men-xing-wei-ceng-b-zhan-kuang-shen-shuo-java-bi-ji" class="header-anchor">.</a></h2><h1><span id="jquery-zhong-wen-wen-dang"></span><a href="#jquery-zhong-wen-wen-dang" class="header-anchor">.</a></h1><h2><span id="1-shi-me-shi-javascript">1、 什么是JavaScript？</span><a href="#1-shi-me-shi-javascript" class="header-anchor">.</a></h2><ul><li><p>javascript是 一门世界上最流行的脚本语言</p></li><li><p>Java、JavaScript没关系</p></li><li><p>javascript 10天就开发出来了</p></li><li><p>ECMAScript是javaScript的一个标准</p></li></ul><p><mark>一个合格的后端人员，必须要精通JavaScript</mark></p><h2><span id="2-kuai-su-ru-men">2、快速入门</span><a href="#2-kuai-su-ru-men" class="header-anchor">.</a></h2><h3><span id="2-1-yin-ru-javascript">2.1 引入JavaScript</span><a href="#2-1-yin-ru-javascript" class="header-anchor">.</a></h3><p>1.内部标签</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token comment" spellcheck="true">//.........</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>2.外部引入</p><pre class="line-numbers language-html"><code class="language-html">//js文件内部写 js //html 引用js文件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>abc.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="2-2-ji-ben-yu-fa-ru-men">2.2 基本语法入门</span><a href="#2-2-ji-ben-yu-fa-ru-men" class="header-anchor">.</a></h3><h4><span id="1-bian-liang">1.变量</span><a href="#1-bian-liang" class="header-anchor">.</a></h4><ul><li><p>定义变量</p><ul><li>var num = 1；</li><li>var name = “lmk”；</li></ul><blockquote><p>javascript 严格区分大小写</p></blockquote><blockquote><p>console.log(变量名)  在浏览器控制台打印数据</p></blockquote></li></ul><h4><span id="2-shu-ju-lei-xing">2.数据类型</span><a href="#2-shu-ju-lei-xing" class="header-anchor">.</a></h4><p>数值、文本、图形、音频、视频。。。</p><p><mark>number</mark></p><blockquote><p>js 不区分小数和整数</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token number">123</span> <span class="token comment" spellcheck="true">//整数 123</span><span class="token number">123.1</span> <span class="token comment" spellcheck="true">//浮点数 123.1</span><span class="token number">1.123e3</span> <span class="token comment" spellcheck="true">//科学计数法</span><span class="token operator">-</span><span class="token number">99</span> <span class="token comment" spellcheck="true">//负数</span><span class="token number">NaN</span> <span class="token comment" spellcheck="true">// not a number</span><span class="token number">Infinity</span> <span class="token comment" spellcheck="true">// 无限大</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><mark>字符串</mark></p><ul><li>‘abc’</li><li>“abc”</li></ul><p><mark>布尔值</mark></p><ul><li>true</li><li>false</li></ul><p><mark>null 和 undefined</mark></p><ul><li>null 空</li><li>undefined 未定义</li></ul><p><mark>数组</mark></p><p>一些类型相同的对象，js中不需要这样</p><pre><code>var arr = [1,2,3,&quot;4&quot;];new Array(1,2,3,&quot;4&quot;);</code></pre><p><mark>对象</mark></p><p>对象是大括号，数组是中括号</p><blockquote><p>每个属性之间使用逗号隔开，最后一个不需要添加</p></blockquote><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//Person person = new Person(1,2,3,4);</span><span class="token keyword">var</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>    name<span class="token punctuation">:</span><span class="token string">'lmk'</span><span class="token punctuation">,</span>    age<span class="token punctuation">:</span><span class="token string">'1'</span><span class="token punctuation">,</span>    tags<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'js'</span><span class="token punctuation">,</span><span class="token string">'java'</span><span class="token punctuation">,</span><span class="token string">'c++'</span><span class="token punctuation">,</span><span class="token string">'python'</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>去对象的值</p><pre><code>person.name&gt;&quot;lmk&quot;</code></pre><p><strong>逻辑运算</strong></p><pre class="line-numbers language-javaScript"><code class="language-javaScript">&&|||<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>比较运算符</strong></p><pre><code>=== 等于=== 绝对等于 值要等、类型也要相等</code></pre><p>这是一个js的缺陷 ，坚持不用==比较</p><p>须知：</p><ul><li>NaN === NaN // false 这个与所有的数值都不相等，包括自己</li><li>只能用 isNaN()方法判断</li></ul><p>浮点数问题：精度问题</p><pre class="line-numbers language-javascript"><code class="language-javascript">Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">3</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">2</span><span class="token operator">/</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0.00000001</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3><span id="2-3-yan-ge-jian-cha-mo-shi">2.3 严格检查模式</span><a href="#2-3-yan-ge-jian-cha-mo-shi" class="header-anchor">.</a></h3><pre class="line-numbers language-js"><code class="language-js"><span class="token string">"use strict"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 必须写在第一行 就会严格检查 下面 i = 1; 会报错</span><span class="token comment" spellcheck="true">//全局变量</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//ES6中 局部变量 建议使用</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/06/20/11091/image-20200619200342403.png" alt="严格检查"></p><hr><p><img src="/2020/06/20/11091/image-20200619200359165.png" alt="普通"></p><h2><span id="3-shu-ju-lei-xing">3、 数据类型</span><a href="#3-shu-ju-lei-xing" class="header-anchor">.</a></h2><h3><span id="3-1-zi-fu-chuan">3.1 字符串</span><a href="#3-1-zi-fu-chuan" class="header-anchor">.</a></h3><p>1.正常字符串我们使用 单引号，或者双引号包裹</p><p>2.注意转义字符 \</p><pre class="line-numbers language-js"><code class="language-js">\'  单引号\n  换行\t  制表\u4e2d         \u#### unicode字符 ‘中’\x41     Ascll字符<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/06/20/11091/image-20200619201002952.png" alt="image-20200619201002952"></p><p>3.多行字符串编写 用反引号 包裹</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token template-string"><span class="token string">`helloworld....`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>4.模板字符串（ES6）${}</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">"lmk"</span><span class="token punctuation">;</span> <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token template-string"><span class="token string">`你好呀，</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2020/06/20/11091/image-20200619201707453.png" alt="image-20200619201707453"></p><p>5.字符串长度</p><pre class="line-numbers language-js"><code class="language-js">str<span class="token punctuation">.</span>length<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>6.字符串的可变性，<mark>不可变</mark></p><p><img src="/2020/06/20/11091/image-20200619202215891.png" alt="image-20200619202215891"></p><p>7.大小写转化</p><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//注意，这里是方法，不是属性了</span>student<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//变大写</span>student<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//变小写</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/06/20/11091/image-20200619202709214.png" alt="image-20200619202709214"></p><p>8.student.indexOf(“”); 获取指定字符串 在 student中的索引</p><p>9.substring</p><pre class="line-numbers language-js"><code class="language-js"><span class="token punctuation">[</span><span class="token punctuation">)</span>student<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//tudent</span>student<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//tu</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3><span id="3-2-shu-zu">3.2 数组</span><a href="#3-2-shu-zu" class="header-anchor">.</a></h3><p><strong>Array可以包含任意的数据类型</strong></p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> arr <span class="token operator">=</span>  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>1.长度</p><pre class="line-numbers language-js"><code class="language-js">arr<span class="token punctuation">.</span>length<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意：加入给arr.length复制，数组大小就会发生变化，如果复制过小，元素就会丢失</p><p>2.indexOf， 通过元素获得下标索引</p><p>3.<mark><strong>slice()</strong></mark>  截取array的一部分，返回一个新数组 类似于String中的substring</p><p>4.<strong>push , pop</strong></p><pre><code>push() // 压入到尾部pop() //弹出尾部元素</code></pre><ol start="5"><li><strong>unshift , shift</strong> 头部</li></ol><pre><code>unshift() // 压入到头部shift() // 弹出头部元素</code></pre><p>6.排序 sort()</p><p>7.元素反转 reverse()</p><p>8.片接 concat()</p><pre class="line-numbers language-js"><code class="language-js"><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"c"</span><span class="token punctuation">,</span><span class="token string">"b"</span><span class="token punctuation">,</span><span class="token string">"a"</span><span class="token punctuation">]</span>arr<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"c"</span><span class="token punctuation">,</span><span class="token string">"b"</span><span class="token punctuation">,</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token string">"1"</span><span class="token punctuation">,</span><span class="token string">"2"</span><span class="token punctuation">,</span><span class="token string">"3"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>注意：concat() 并没有修改数组，只是会返回一个新数组</p><p>9.<strong>连接符 join</strong></p><p>打印拼接数组，使用特定字符连接</p><pre class="line-numbers language-js"><code class="language-js"><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"c"</span><span class="token punctuation">,</span><span class="token string">"b"</span><span class="token punctuation">,</span><span class="token string">"a"</span><span class="token punctuation">]</span>arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token string">"c-b-a"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>10.多维数组</p><pre class="line-numbers language-js"><code class="language-js">arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"5"</span><span class="token punctuation">,</span><span class="token string">"6"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3><span id="3-3-dui-xiang"><mark>3.3 对象</mark></span><a href="#3-3-dui-xiang" class="header-anchor">.</a></h3><p><strong>若干个键值对，javascript中的所有的键都是字符串，值是任意对象</strong>  <em>用大括号扩起来</em></p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> 对象名 <span class="token operator">=</span> <span class="token punctuation">{</span>    属性名<span class="token punctuation">:</span>属性值<span class="token punctuation">,</span>    属性名<span class="token punctuation">:</span>属性值<span class="token punctuation">,</span>    <span class="token operator">...</span><span class="token punctuation">}</span><span class="token keyword">var</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>    name <span class="token punctuation">:</span> <span class="token string">"lmk"</span><span class="token punctuation">,</span>    age <span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>    email <span class="token punctuation">:</span> <span class="token string">"1423928659@qq.com"</span><span class="token punctuation">,</span>    score <span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1.对象赋值</p><pre class="line-numbers language-js"><code class="language-js">Person<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"liuminkai"</span><span class="token string">"liuminkai"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>2.<strong>使用一个不存在的对象属性，不会报错 undefined</strong></p><pre class="line-numbers language-js"><code class="language-js">person<span class="token punctuation">.</span>genderundefined<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>3<strong>.动态的删减属性</strong></p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">delete</span> person<span class="token punctuation">.</span>name<span class="token boolean">true</span>person <span class="token comment" spellcheck="true">//查看结构</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>4.<strong>动态的添加</strong></p><pre class="line-numbers language-js"><code class="language-js">person<span class="token punctuation">.</span>gender <span class="token operator">=</span> <span class="token string">"男"</span><span class="token punctuation">;</span><span class="token string">"男"</span>person <span class="token comment" spellcheck="true">// 查看结构</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>5.判断属性值是否在这个对象中 ！ xxx in xxx</p><pre class="line-numbers language-js"><code class="language-js"><span class="token string">'age'</span> <span class="token keyword">in</span> person<span class="token boolean">true</span><span class="token comment" spellcheck="true">//继承</span><span class="token string">'toString'</span> <span class="token keyword">in</span> person<span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/06/20/11091/image-20200619212646790.png" alt="image-20200619212646790"></p><ol start="6"><li>判断一个属性是否是这个对象自身拥有的hasOwnProperty</li></ol><pre class="line-numbers language-js"><code class="language-js">person<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">'toString'</span><span class="token punctuation">)</span><span class="token boolean">false</span>person<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">)</span><span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="3-4-liu-cheng-kong-zhi">3.4 流程控制</span><a href="#3-4-liu-cheng-kong-zhi" class="header-anchor">.</a></h3><p>if判断</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">if</span><span class="token punctuation">(</span>条件<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//...</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>条件<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//...</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>while循环</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">while</span><span class="token punctuation">(</span>条件<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//...</span><span class="token punctuation">}</span><span class="token keyword">do</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//...</span><span class="token punctuation">}</span><span class="token keyword">while</span><span class="token punctuation">(</span>条件<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>for循环</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//...</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>forEach（ES5.1）</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> age <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//函数</span>age<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>for in / for of</p><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//for  in</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token keyword">in</span> l<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//i 代表是 key </span>    <span class="token comment" spellcheck="true">//...</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>l<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//for  of</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token keyword">of</span> l<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//i 代表是 value</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="3-5-map-he-set-es6">3.5 Map 和Set （ES6）</span><a href="#3-5-map-he-set-es6" class="header-anchor">.</a></h3><p><strong>Map</strong></p><pre><code>//var map = new Map([[&#39;tom&#39;,100],[&#39;jack&#39;,90],[&#39;haha&#39;,80]]);var name = map.get(&#39;tom&#39;); //100map.set(&#39;lmk&#39;,100);// [&#39;lmk&#39;,100]</code></pre><p><strong>Set</strong>  (无序，不重复)</p><pre><code>var set = new Set([3,1,1,1,1]);set.add(2);set.delete(1);set.has(3);</code></pre><p><img src="/2020/06/20/11091/image-20200619221250133.png" alt></p><h3><span id="3-6-iterator-es6">3.6 iterator（ES6）</span><a href="#3-6-iterator-es6" class="header-anchor">.</a></h3><h4><span id="bian-li-shu-zu">遍历数组</span><a href="#bian-li-shu-zu" class="header-anchor">.</a></h4><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// arr.name = "212"; 早期bug 他会把name 也加进去</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> x <span class="token keyword">in</span> arr<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//x - 1,2,3,name</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> x <span class="token keyword">of</span> arr<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4><span id="bian-li-map">遍历Map</span><a href="#bian-li-map" class="header-anchor">.</a></h4><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">"tom"</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"jack"</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"lmk"</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> x <span class="token keyword">of</span> arr<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4><span id="bian-li-set">遍历Set</span><a href="#bian-li-set" class="header-anchor">.</a></h4><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> <span class="token keyword">set</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> x <span class="token keyword">of</span> arr<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="4-han-shu-ji-mian-xiang-dui-xiang">4、 函数及面向对象</span><a href="#4-han-shu-ji-mian-xiang-dui-xiang" class="header-anchor">.</a></h2><h3><span id="4-1-han-shu-ding-yi-ji-bian-liang-zuo-yong-yu">4.1 函数定义及变量作用域</span><a href="#4-1-han-shu-ding-yi-ji-bian-liang-zuo-yong-yu" class="header-anchor">.</a></h3><h4><span id="han-shu-de-ding-yi"><mark><strong>函数的定义</strong></mark></span><a href="#han-shu-de-ding-yi" class="header-anchor">.</a></h4><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//方式一</span><span class="token keyword">function</span> <span class="token function">方法名</span><span class="token punctuation">(</span>参数<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> 返回值<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//方式二</span><span class="token keyword">var</span> func <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>如果没有执行return，函数执行完也会放回结果，结果是</p><p>undefined</p></blockquote><p><strong>调用函数</strong></p><pre><code>函数名(参数);</code></pre><p><strong>手动抛出异常</strong></p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">!=</span> <span class="token string">"number"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    thown <span class="token string">'Not a Number'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>arguments</strong></p><blockquote><p>arguments 是javaScript 免费赠送的关键字</p><p>代表，传递进来的所有的参数，是一个数组</p></blockquote><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> abs <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>x <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> x<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">-</span>x<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>问题:arguments 包含所有的参数，我们有时候想使用多余的参数来进行附加操作，需要排除已有参数</p><p><strong>rest（ES6）</strong></p><p>获取除了已经定义的参数之外的所有参数 （可变参数）</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span><span class="token operator">...</span>rest<span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"a=>"</span><span class="token operator">+</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"b=>"</span><span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rest<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//会将除了a，b的所有参数变成一个数组</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4><span id="bian-liang-de-zuo-yong-yu"><strong>变量的作用域</strong></span><a href="#bian-liang-de-zuo-yong-yu" class="header-anchor">.</a></h4><p>在函数体中声明，则在函数体外不能使用</p><p>如果想用（后面 闭包）</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    x <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span>x <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// uncaught ReferenceError: x is not defined</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>提升变量的作用域</strong></p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token string">"x"</span> <span class="token operator">+</span> y<span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> y <span class="token operator">=</span> <span class="token string">'y'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 后定义 y</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果： xundefined</p><p>说明：js执行引擎，自动提升了y的声明，但是不会提升变量y的赋值(定义变量提前声明赋值)</p><p>这个是Javascript 建立之初就存在的特性，要养成规范</p><pre><code>function a(){    var y     var x = &quot;x&quot; + y;    console.og(x);    y = &#39;y&#39;; // 后定义 y}</code></pre><p><img src="/2020/06/20/11091/image-20200620072111763.png" alt="image-20200620072111763"></p><h5><span id="quan-ju-han-shu"><strong>全局函数</strong></span><a href="#quan-ju-han-shu" class="header-anchor">.</a></h5><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//全局变量</span><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 1 </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>全局对象<strong>window</strong></p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token string">"xxx"</span><span class="token punctuation">;</span><span class="token function">alert</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// xxx</span><span class="token function">alert</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// xxx</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>alert()这个函数本身也是一个<mark>window</mark>变量</p><pre><code>var x = &quot;xxx&quot;;window.alert(x); // xxxvar old_alert = window.alert;window.alert = function (){    console.log(&quot;...&quot;);}window.alert(123);//失败 ...window.old_alert(456);// 456//恢复window.alert = old_alert;window.alert(123);// 123</code></pre><p><video src="1.mp4"></video></p><h5><span id="quan-ju-zuo-yong-yu"><strong>全局作用域</strong></span><a href="#quan-ju-zuo-yong-yu" class="header-anchor">.</a></h5><p>javascript实际上只有一个全局作用域，任何变量（函数也可视为变量），假设没有在函数作用范围内找到，就会向外查找，如果在全局作用域中都没有找到，报错</p><h5><span id="ju-bu-zuo-yong-yu"><strong>局部作用域</strong></span><a href="#ju-bu-zuo-yong-yu" class="header-anchor">.</a></h5><p>在ES6之前</p><p>局部作用域有问题</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 问题，i 出了作用域还能用</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/06/20/11091/image-20200620083302887.png" alt="image-20200620083302887"></p><p>在ES6，引入了<strong>let关键字</strong>，解决了局部作用域冲突</p><pre><code>function a(){    for(let i = 0; i &lt; 4; i++){        console.log(i);    }    console.log(i+1);}</code></pre><p><img src="/2020/06/20/11091/image-20200620083614444.png" alt="image-20200620083614444"></p><h5><span id="chang-liang">常量</span><a href="#chang-liang" class="header-anchor">.</a></h5><p>在ES6之前，怎么定义常量：只有用大写字母命令的变量就是常量（建议不要修改，很脑残，实际上还是变量）</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> PI <span class="token operator">=</span> <span class="token string">'3.14'</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>PI<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 3.14</span>PI <span class="token operator">=</span> <span class="token string">"2"</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>PI<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在ES6，引入<strong>const常量关键字</strong></p><pre><code>const PI = &#39;3.14&#39;;PI = &#39;2&#39;;</code></pre><p><img src="/2020/06/20/11091/image-20200620084919380.png" alt></p><h4><span id="gui-fan">规范</span><a href="#gui-fan" class="header-anchor">.</a></h4><p>由于我们所有的全局变量都会绑定到我们的window上，如果不同的js文件，使用了相同的全局变量，冲突 -&gt; 如何能够减少冲突？<strong>自定义一个唯一空间名字中，所有的全局变量都把绑定到这个唯一空间名字上</strong></p><pre class="line-numbers language-js"><code class="language-js"> <span class="token comment" spellcheck="true">// 唯一全局变量</span> <span class="token keyword">var</span> lmk <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//定义全局变量</span>lmk<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"liuminkai"</span><span class="token punctuation">;</span>lmk<span class="token punctuation">.</span>add <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> x<span class="token operator">+</span>y<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="4-2-bi-bao">4.2 闭包</span><a href="#4-2-bi-bao" class="header-anchor">.</a></h3><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">lazy_sum</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> sum <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> sum<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//返回的是一个函数</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="4-3-jian-tou-han-shu">4.3 箭头函数</span><a href="#4-3-jian-tou-han-shu" class="header-anchor">.</a></h3><h3><span id="4-4-fang-fa">4.4 方法</span><a href="#4-4-fang-fa" class="header-anchor">.</a></h3><blockquote><p>方法就是把函数放在对象的里面，对象只有两个东西：属性和方法</p></blockquote><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//定义方法 age</span><span class="token keyword">var</span> lmk <span class="token operator">=</span> <span class="token punctuation">{</span>    name <span class="token punctuation">:</span> <span class="token string">'liuminkai'</span><span class="token punctuation">,</span>    birth <span class="token punctuation">:</span> <span class="token number">1999</span><span class="token punctuation">,</span>    age <span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 今年 - 出生的年</span>        <span class="token keyword">var</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> now <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>birth<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//调用</span>lmk<span class="token punctuation">.</span>name<span class="token punctuation">;</span>lmk<span class="token punctuation">.</span><span class="token function">age</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4><span id="this-dai-biao-shi-me">this代表什么？</span><a href="#this-dai-biao-shi-me" class="header-anchor">.</a></h4><p><strong>对象本身</strong></p><p>上面定义方法还可以拆开</p><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//定义方法的另一种方式 拆开</span><span class="token keyword">function</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 今年 - 出生的年</span>    <span class="token keyword">var</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> now <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>birth<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">var</span> lmk <span class="token operator">=</span> <span class="token punctuation">{</span>    name <span class="token punctuation">:</span> <span class="token string">'liuminkai'</span><span class="token punctuation">,</span>    birth <span class="token punctuation">:</span> <span class="token number">1999</span>    age <span class="token punctuation">:</span> getAge<span class="token punctuation">}</span>lmk<span class="token punctuation">.</span><span class="token function">age</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//ok</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//NaN  因为如果你调用getAge() 那么方法里的 this 就指向 window对象 ，该对象是没有birth这个属性的</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><mark>this是无法指向的，是默认指向调用它的对象</mark></p><h4><span id="apply">apply</span><a href="#apply" class="header-anchor">.</a></h4><blockquote><p>在js中可以控制this的指向</p></blockquote><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//定义方法的另一种方式 拆开</span><span class="token keyword">function</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 今年 - 出生的年</span>    <span class="token keyword">var</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> now <span class="token operator">-</span> <span class="token keyword">this</span><span class="token punctuation">.</span>birth<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">var</span> lmk <span class="token operator">=</span> <span class="token punctuation">{</span>    name <span class="token punctuation">:</span> <span class="token string">'liuminkai'</span><span class="token punctuation">,</span>    birth <span class="token punctuation">:</span> <span class="token number">1999</span><span class="token punctuation">,</span>    age <span class="token punctuation">:</span> getAge<span class="token punctuation">}</span><span class="token comment" spellcheck="true">//apply(应用的对象,参数列表)</span>getAge<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>lmk<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// ok this 指向 lmk</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/06/20/11091/image-20200620091652219.png" alt></p><h2><span id="5-nei-bu-dui-xiang">5、 内部对象</span><a href="#5-nei-bu-dui-xiang" class="header-anchor">.</a></h2><blockquote><p>标准对象 : 万物皆对象 – number对象 。。。</p></blockquote><p><img src="/2020/06/20/11091/image-20200620092256732.png" alt></p><h3><span id="5-1-date">5.1 Date</span><a href="#5-1-date" class="header-anchor">.</a></h3><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> now <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//Sat Jun 20 2020 09:24:14 GMT+0800 (中国标准时间)</span>now<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 年</span>now<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 月 0 - 11</span>now<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 日 -------注意</span>now<span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 星期</span>now<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 时</span>now<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 分</span>now<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 秒</span>now<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// "2020/6/20 上午9:31:29"</span>now<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 时间戳</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="5-2-json">5.2 JSON</span><a href="#5-2-json" class="header-anchor">.</a></h3><p>早期，所有数据传输习惯使用XML文件</p><p><strong>JSON是什么？</strong></p><ul><li><a href="https://baike.baidu.com/item/JSON" target="_blank" rel="noopener">JSON</a>(<a href="https://baike.baidu.com/item/JavaScript" target="_blank" rel="noopener">JavaScript</a> Object Notation, JS 对象简谱) 是一种轻量级的数据交换格式。</li><li>简洁和清晰的<strong>层次结构</strong>使得 JSON 成为理想的数据交换语言。 </li><li>易于人阅读和编写，同时也易于机器解析和生成，并有效地提升网络传输效率。</li></ul><p>在javascript中一切皆为对象、任何js支持的类型都可以用JSON来表示</p><ul><li>对象都用{}</li><li>数组都用[]</li><li>所有的键值对 都用 key : value</li></ul><h5><span id="json-zi-fu-chuan-he-js-dui-xiang-de-zhuan-huan">JSON 字符串和JS对象的转换</span><a href="#json-zi-fu-chuan-he-js-dui-xiang-de-zhuan-huan" class="header-anchor">.</a></h5><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>    name <span class="token punctuation">:</span> <span class="token string">"lmk"</span><span class="token punctuation">,</span>    age <span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>    gender <span class="token punctuation">:</span> <span class="token string">"男"</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//对象转化为 JSON字符串 </span><span class="token keyword">var</span> json <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//JSON 字符串串 转为 js对象 </span><span class="token comment" spellcheck="true">// key的引号加上 不然报错</span><span class="token keyword">var</span> newObj <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">'{"name":"liuminkai","age":1}'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/06/20/11091/image-20200620110612039.png" alt="JS对象 --&gt; JSON字符串"></p><p><img src="/2020/06/20/11091/image-20200620110839849.png" alt="JSON字符串 --&gt; JS对象"></p><p><strong>JSON与JS对象的区别</strong></p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>a<span class="token punctuation">:</span><span class="token string">'1'</span><span class="token punctuation">,</span>b<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">var</span> json <span class="token operator">=</span> <span class="token string">'{"a":"1","b":1}'</span> <span class="token comment" spellcheck="true">//字符串 内容是对象</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3><span id="5-3-ajax-lue">5.3 Ajax(略)</span><a href="#5-3-ajax-lue" class="header-anchor">.</a></h3><ul><li>原生的js写法 xhr异步请求</li><li>jQuery封装好的方法 $(“#name”).ajax(“”)</li><li>axios请求</li></ul><h2><span id="6-mian-xiang-dui-xiang-bian-cheng">6 、面向对象编程</span><a href="#6-mian-xiang-dui-xiang-bian-cheng" class="header-anchor">.</a></h2><h3><span id="6-1-shi-me-shi-mian-xiang-dui-xiang">6.1 什么是面向对象</span><a href="#6-1-shi-me-shi-mian-xiang-dui-xiang" class="header-anchor">.</a></h3><ul><li><p>JavaScript、java、C#、、、、  </p><ul><li>类：模板</li><li>对象：具体的实例</li></ul></li><li><p>在javaScript这个需要我们换一下思维</p><ul><li><p><strong>原型对象（可理解为父类）</strong></p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> student <span class="token operator">=</span> <span class="token punctuation">{</span>    name <span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>    work <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">" 写作业..."</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">var</span> lmk <span class="token operator">=</span> <span class="token punctuation">{</span>    name <span class="token punctuation">:</span> <span class="token string">"liuminkai"</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// lmk 的原型 是 student  这么看 这个原型可以随意的换</span>lmk<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> student<span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><pre><code>//类的定义看 下面```![](image-20200620113025346.png)&gt;  class继承（ES6）**以前给对象新增方法**- 要么在原对象里直接加- 要么拿到它的原型对象增加一个方法```js//以前定义 一个类//构造函数function Student(name) {    this.name = name;    //hello : function(){  }}// 给student 新增一个方法Student.prototype.hello = function(){    alert(&quot;hello&quot;);}//继承方法在上面  原型</code></pre><pre><code>![image-20200620120408164](image-20200620120408164.png)**ES6之后**：class1.定义一个类    ```js    //定义一个学生的类    class Student{        constructor(name){            this.name = name;        }        hello(){            alert(&#39;hello&#39;);        }    }    //小学生 继承 学生    class pupil extends Student{        constructor(name,grade){            super(name);            this.grade = grade;        }        myIdentity(){            console.log(&quot;我是一名小学生&quot;);        }     }</code></pre><p><strong>class继承本质：还是查看原型</strong></p><pre><code>![image-20200620120915598](image-20200620120915598.png)</code></pre><h4><span id="yuan-xing-lian">原型链</span><a href="#yuan-xing-lian" class="header-anchor">.</a></h4><blockquote><p>_<em>proto_</em></p></blockquote><p><img src="/2020/06/20/11091/image-20200620123248846.png" alt="image-20200620123248846"></p><p><a href="https://baijiahao.baidu.com/s?id=1604426873229560999&wfr=spider&for=pc" target="_blank" rel="noopener">秒通原型和原型链</a></p><h2><span id="7-cao-zuo-bom-yuan-su-chong-dian">7、 操作BOM元素（重点）</span><a href="#7-cao-zuo-bom-yuan-su-chong-dian" class="header-anchor">.</a></h2><p>BOM : 浏览器对象模型</p><p>JavaScript 和 浏览器的关系？</p><p>JavaScript的诞生是为了能够让他在浏览器中运行</p><ul><li>IE6-11</li><li>Chrome</li><li>Safari</li><li>FireFox <strong>Linux</strong></li></ul><h3><span id="7-1-window-chong-yao">7.1 window(重要)</span><a href="#7-1-window-chong-yao" class="header-anchor">.</a></h3><blockquote><p>window 代表 浏览器窗口 （默认全局作用域）</p></blockquote><pre class="line-numbers language-js"><code class="language-js">window<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>undefinedwindow<span class="token punctuation">.</span>innerHeight<span class="token number">63</span>window<span class="token punctuation">.</span>innerWidth<span class="token number">632</span>window<span class="token punctuation">.</span>outerHeight<span class="token number">63</span>window<span class="token punctuation">.</span>outerWidth<span class="token number">632</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="7-2-navigator">7.2 navigator</span><a href="#7-2-navigator" class="header-anchor">.</a></h3><blockquote><p>navigator 封装了浏览器的信息</p></blockquote><pre class="line-numbers language-js"><code class="language-js">navigator<span class="token punctuation">.</span>appName<span class="token string">"Netscape"</span>navigator<span class="token punctuation">.</span>appVersion<span class="token string">"5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Mobile Safari/537.36"</span>navigator<span class="token punctuation">.</span>userActivationUserActivation <span class="token punctuation">{</span>hasBeenActive<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> isActive<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span>navigator<span class="token punctuation">.</span>userAgent<span class="token string">"Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Mobile Safari/537.36"</span>navigator<span class="token punctuation">.</span>platform<span class="token string">"Win32"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>大多数时候，我们不会使用navigator对象，因为会被认为修改</strong></p><p><mark>不建议使用这些属性来判断和编写代码</mark></p><h3><span id="7-3-screen">7.3 screen</span><a href="#7-3-screen" class="header-anchor">.</a></h3><blockquote><p>代表屏幕</p></blockquote><pre class="line-numbers language-js"><code class="language-js">screen<span class="token punctuation">.</span>widthscreen<span class="token punctuation">.</span>height<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3><span id="7-4-location-chong-yao">7.4 location (重要)</span><a href="#7-4-location-chong-yao" class="header-anchor">.</a></h3><blockquote><p>代表当前页面的URL信息</p></blockquote><pre><code>location.assign(&#39;https://liuminkai.top&#39;);</code></pre><h3><span id="7-5-document">7.5 Document</span><a href="#7-5-document" class="header-anchor">.</a></h3><blockquote><p>代表当前的页面，HTML</p></blockquote><pre><code>document.titledocumen.title = &quot;...&quot;</code></pre><ul><li><p>获取具体的文档树节点</p></li><li><p>获取cookie</p><pre><code>document.cookie&quot;&quot;//不要浏览恶意的网站 因为 他们的cookie可能是由毒的</code></pre><p><strong>劫持cookie原理</strong></p><pre><code>&lt;script src=&quot;aa.js&quot;&gt;&lt;/script&gt;&lt;!-- 恶意人员，获取你的cookie上传到他的服务器获取登录 伪造cookie 获取你的隐私--&gt;</code></pre><p>服务器端可以设置 cookie ：httpOnly:只读</p></li></ul><h3><span id="7-6-history">7.6 History</span><a href="#7-6-history" class="header-anchor">.</a></h3><blockquote><p>代表浏览器的历史记录 不建议使用</p></blockquote><pre><code>history.back()history.forword()</code></pre><h3><span id="7-7-cao-zuo-biao-dan">7.7 操作表单</span><a href="#7-7-cao-zuo-biao-dan" class="header-anchor">.</a></h3><h3><span id="7-8-cao-zuo-wen-jian">7.8 操作文件</span><a href="#7-8-cao-zuo-wen-jian" class="header-anchor">.</a></h3><h2><span id="8-cao-zuo-dom-yuan-su-chong-dian">8、 操作DOM元素 （重点）</span><a href="#8-cao-zuo-dom-yuan-su-chong-dian" class="header-anchor">.</a></h2><h3><span id="8-1-de-dao-dom">8.1 得到DOM</span><a href="#8-1-de-dao-dom" class="header-anchor">.</a></h3><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//通过标签名</span>document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//通过id</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//通过class</span>document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//通过name</span>document<span class="token punctuation">.</span><span class="token function">getElementByName</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="8-2-geng-xin-dom">8.2 更新DOM</span><a href="#8-2-geng-xin-dom" class="header-anchor">.</a></h3><ul><li>操作文本<ul><li><code>node.innerText</code> 就是文本</li><li><code>node.innerHTML</code> 可以解析HTML代码</li></ul></li><li>操作css<ul><li><code>node.style.color</code> </li><li>。。。</li></ul></li></ul><h3><span id="8-3-shan-chu-dom">8.3 删除DOM</span><a href="#8-3-shan-chu-dom" class="header-anchor">.</a></h3><p>删除节点的步骤： 先获取父节点，再通过父节点删除自己</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>father<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>标题一<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>p1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>p1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>p2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>p2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> self <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'p1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> father <span class="token operator">=</span> self<span class="token punctuation">.</span>parentElement<span class="token punctuation">;</span>    father<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//还可以这样</span>    father<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>father<span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：删除多个节点的时候，children是在时刻变化的，删除节点的时候一定要注意~</p><h3><span id="8-4-cha-ru-dom">8.4 插入DOM</span><a href="#8-4-cha-ru-dom" class="header-anchor">.</a></h3><blockquote><p>前面的 innerHTML，innerHTML 也算是插入结点，当时会覆盖原有的信息 </p></blockquote><p><strong>追加</strong></p><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//创建 新节点</span><span class="token keyword">var</span> child <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"tagName"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//可添加属性和属性值</span><span class="token comment" spellcheck="true">//child.setAttribute('attribute','value');</span><span class="token comment" spellcheck="true">//结点 添加值</span>child<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">'我是新节点'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//child 追加到 father中</span>father<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>insertBefore</strong></p><pre><code>child.insertBefore(newNode,child)</code></pre><h2><span id="9-cao-zuo-biao-dan-yan-zheng">9、 操作表单(验证)</span><a href="#9-cao-zuo-biao-dan-yan-zheng" class="header-anchor">.</a></h2><ul><li>文本框 text</li><li>下拉框 select</li><li>单选框 radio</li><li>多选框 checkbox</li><li>隐藏域 hidden</li><li>密码框 password</li><li>。。。。</li></ul><p>表单目的：提交信息</p><blockquote><p>获得要提交的信息</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>用户名:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>man<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>男    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>women<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token punctuation">></span></span>女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">var</span> user <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'user'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> sex <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByName</span><span class="token punctuation">(</span><span class="token string">"sex"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//要获取 单选框选中</span>    <span class="token comment" spellcheck="true">//可以通过 checked</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>提交表单(无加密)</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>用户名:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>psw<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>man<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>男    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>women<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token punctuation">></span></span>女    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>提交<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/06/20/11091/image-20200620164408472.png" alt="image-20200620164408472"></p><blockquote><p>MD5工具类</p></blockquote><pre class="line-numbers language-html"><code class="language-html">&lt;script src = "https://cdn.bootcss.com/blueimp-md5/2.10.0/js/md5.min.js"><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>使用 MD５加密</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 在button增加一个onclick事件用于 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>用户名:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pwd<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>man<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>男    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>women<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token punctuation">></span></span>女    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>encrypt()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>提交<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">function</span> <span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> user <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'user'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> pwd <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'pwd'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> sex <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByName</span><span class="token punctuation">(</span><span class="token string">"sex"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    pwd<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span>pwd<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//md5加密</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/06/20/11091/image-20200620165446600.png" alt="image-20200620165446600"></p><p><strong>但是，代码是有问题的，当我们提交的时候，密码会变得很长</strong></p><p><img src="/2020/06/20/11091/image-20200620165619583.png" alt="image-20200620165619583"></p><blockquote><p>优化    隐藏加密信息，添加表单验证</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 添加hidden类型的input标签  --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://www.baidu.com<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">onsubmit</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>return encrypt()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>用户名:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input-pwd<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>md5-pwd<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>man<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>男    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>women<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token punctuation">></span></span>女    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>提交<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>01_helloworld.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">var</span> user <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'user'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> input_pwd <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'input-pwd'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> md5_pwd <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'md5-pwd'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    md5_pwd<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span>input_pwd<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//md5加密</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>input_pwd<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token string">""</span> <span class="token operator">||</span> user<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"请输入用户名或密码"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="10-jquery">10、jQuery</span><a href="#10-jquery" class="header-anchor">.</a></h2><p>JavaScript的jQuery库，里面存在大量的javascript的函数</p><blockquote><p>在线引用</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.bootcdn.net/ajax/libs/jquery/3.5.1/jquery.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>$ == jQuery</p><p><code>公式: $(选择器).事件(事件函数)</code>    </p></blockquote><h1><span id="jquery-zhong-wen-wen-dang"></span><a href="#jquery-zhong-wen-wen-dang" class="header-anchor">.</a></h1><blockquote><p>操作DOM</p></blockquote><p><img src="/2020/06/20/11091/image-20200620192341469.png" alt></p><blockquote><h2><span id="xiao-ji-qiao">小技巧</span><a href="#xiao-ji-qiao" class="header-anchor">.</a></h2></blockquote><ul><li>如何巩固JS （看jQuery源码，看游戏源码）</li><li>巩固HTML，CSS（扒网站，全部down下来，删除无关的）</li></ul><p>1.layui: 弹窗</p><p>2.ElementUI：饿了么 ，快速建web</p><p>3.bootstrap：×</p><p>4.note.js</p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云端IDE(linux服务器)</title>
      <link href="/2020/06/14/17010.html"/>
      <url>/2020/06/14/17010.html</url>
      
        <content type="html"><![CDATA[<p>有了云端ide（VSCode）就可以 随时随地 用各种设备 在网页上就可以编程了</p><h2><span id="an-zhuang-qian-ti">安装前提</span><a href="#an-zhuang-qian-ti" class="header-anchor">.</a></h2><ul><li>有台服务器</li><li>服务器安全组 配置规则 入方向 添加8080 8443端口</li></ul><p>Code-Server：<a href="https://github.com/cdr/code-server/releases/tag/3.4.0/" target="_blank" rel="noopener">https://github.com/cdr/code-server/releases/tag/3.4.0/</a></p><p>我的服务器是centos系统</p><pre><code>wget https://github.com/cdr/code-server/releases/tag/3.4.0/code-server-3.4.0-linux-x86_64.tar.gzornpm  install -g code-server</code></pre><p><img src="/2020/06/14/17010/image-20200615002332137.png" alt="没下成功,可以本地直接下载压缩包，通过xshell、xftp传过去"></p><pre class="line-numbers language-shell"><code class="language-shell"># 解压tar -zxvf code-server-3.4.0-linux-x86_64.tar.gz# 对其更名mv code-server-3.4.0-linux-x86_64 code-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-shell"><code class="language-shell"># 进入安装目录cd code-server# 启动服务./code-server# 设置固定密码export PASSWORD="你的密码"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因为8080端口一般会被占用 ，为了其他外网能够访问服务器</p><p>那么 我们可以做如下修改</p><pre class="line-numbers language-shell"><code class="language-shell"># 打开配置文件vim /root/.config/code-server/config.yaml# 修改配置bind-addr: 0.0.0.0:8443 # 默认端口auth: passwordpassword: 13fa7c9ec2398436ef7b851ccert: false<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置修改完 </p><pre class="line-numbers language-shell"><code class="language-shell"># Ctrl + c 终止服务# ./code-server 再次启动服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2020/06/14/17010/image-20200615105447319.png" alt="image-20200615105447319"></p><p>使用自己电脑或者移动设备</p><p>在浏览器 地址栏输入  服务器ip地址 ：8443 （如果有域名可以绑定ip）</p><p>出现下面情况 成功</p><p><img src="/2020/06/14/17010/image-20200615110222187.png" alt="image-20200615110222187"></p><p><strong>界面</strong></p><p><strong>移动端（手机）</strong></p><p><img src="/2020/06/14/17010/Screenshot_2020-06-15-11-06-03-600_com.android.br.jpg" alt></p><p><strong>PC端</strong></p><p><img src="/2020/06/14/17010/image-20200615111439323.png" alt></p>]]></content>
      
      
      
        <tags>
            
            <tag> 云端IDE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的自定义IDEA快捷键-部分</title>
      <link href="/2020/06/14/26561.html"/>
      <url>/2020/06/14/26561.html</url>
      
        <content type="html"><![CDATA[<h2><span id="wo-de-zi-ding-yi-idea-kuai-jie-jian">我的自定义IDEA快捷键</span><a href="#wo-de-zi-ding-yi-idea-kuai-jie-jian" class="header-anchor">.</a></h2><table><thead><tr><th>我的快捷键</th><th>描述</th></tr></thead><tbody><tr><td>Alt + ↑</td><td>当前行向上移动</td></tr><tr><td>Alt + ↓</td><td>当前行向下移动</td></tr><tr><td>Alt + ←</td><td>上一次编辑位置</td></tr><tr><td>Alt + →</td><td>下一次编辑位置</td></tr><tr><td>Alt + Shift + ↑</td><td>光标位置向外扩增选择</td></tr><tr><td>Alt + Shift + ↓</td><td>光标位置向内回退选择</td></tr><tr><td>Alt + 空格</td><td>generate(构造器,getter,setter …)</td></tr><tr><td></td><td></td></tr><tr><td>Ctrl + Alt + ↓</td><td>复制当前行到下一行</td></tr><tr><td>Ctrl + Alt + ←</td><td>上一个tab页</td></tr><tr><td>Ctrl + Alt + →</td><td>下一个tab页</td></tr><tr><td>Ctrl + Shift + ↑</td><td>光标所在位置的上一个方法</td></tr><tr><td>Ctrl + Shift + ↓</td><td>光标所在位置的下一个方法</td></tr><tr><td>Ctrl + Enter</td><td>光标所在位置下方插入新行</td></tr><tr><td>Ctrl + Shift + z</td><td>选中代码 + （if ，try ， …）</td></tr><tr><td></td><td></td></tr><tr><td>Shift + Enter</td><td>光标所在位置上方插入新行</td></tr></tbody></table><h3><span id="line-templates">line Templates</span><a href="#line-templates" class="header-anchor">.</a></h3><p><img src="/2020/06/14/26561/image-20200616205327632.png" alt="line Templates"></p><h3><span id="fang-fa-nei">方法内</span><a href="#fang-fa-nei" class="header-anchor">.</a></h3><p><strong>itar</strong> (for) – array(string)</p><pre><code>for (int i = 0; i &lt; args.length; i++) {    String arg = args[i];}</code></pre><p><strong>iter</strong> (foreach) – array(string)</p><pre><code>for (String arg : args) {}</code></pre><p><strong>ritar</strong>(r for) – array(string)</p><pre><code>for (int i = args.length - 1; i &gt;= 0; i--) {     String arg = args[i];}</code></pre><p><strong>itli</strong>(for list)</p><pre><code>for (int i = 0; i &lt; list.size(); i++) {    Object o =  list.get(i);}</code></pre><p><strong>itit</strong>(while 迭代器)</p><pre><code> while (iterator.hasNext()) {    Object next =  iterator.next();}</code></pre><p><strong>iten</strong>(while enum)</p><pre><code>while (enumeration.hasMoreElements()) {    Object nextElement =  enumeration.nextElement();}</code></pre><p><strong>itco</strong>(for 迭代器 集合)</p><pre><code>for (Iterator iterator = collection.iterator(); iterator.hasNext(); ) {    Object next =  iterator.next();}</code></pre><p><strong>souf</strong></p><pre><code>System.out.printf()</code></pre><p>serr</p><pre><code>System.err.println();</code></pre><p>soutv(打印可以直接访问的 变量 参数 )</p><pre><code>System.out.println(&quot;args = &quot; + args);</code></pre><p>soutp(打印方法参数)</p><pre><code>System.out.println(&quot;args = [&quot; + args + &quot;]&quot;);</code></pre><p>soutm（打印光标所在的 类名.方法名）</p><pre><code>System.out.println(&quot;io_05_inputStream.fun&quot;);</code></pre><h3><span id="fang-fa-nei-wai">方法内外</span><a href="#fang-fa-nei-wai" class="header-anchor">.</a></h3><p>prsf</p><pre><code>private static final </code></pre><p>psf</p><pre><code>public static final</code></pre><p>psfs</p><pre><code>public static final String </code></pre><p>psfi</p><pre><code>public static final int </code></pre><h3><span id="fang-fa-wai">方法外</span><a href="#fang-fa-wai" class="header-anchor">.</a></h3><p>sbc</p><pre><code>////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////</code></pre><p>noInstance</p><pre><code>private CLassName() {    //no instance}</code></pre><p>newInstance</p>]]></content>
      
      
      
        <tags>
            
            <tag> 快捷键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于更改my.ini client字符集仍然是GBK的问题-已解决</title>
      <link href="/2020/06/11/10249.html"/>
      <url>/2020/06/11/10249.html</url>
      
        <content type="html"><![CDATA[<h2><span id="guan-yu-geng-gai-my-ini-client-zi-fu-ji-mysql-cmd-reng-ran-shi-gbk-de-wen-ti-windows-yi-jie-jue">关于更改my.ini client字符集，mysql cmd仍然是GBK的问题（windows）-已解决</span><a href="#guan-yu-geng-gai-my-ini-client-zi-fu-ji-mysql-cmd-reng-ran-shi-gbk-de-wen-ti-windows-yi-jie-jue" class="header-anchor">.</a></h2><h3><span id="zhuang-kuang-shuo-ming">状况说明</span><a href="#zhuang-kuang-shuo-ming" class="header-anchor">.</a></h3><p>在练习JDBC操作数据库的时候，存入中文数据都成了 ’ ？‘</p><p>这是由于数据库字符集不是utf8导致的(java工程utf8)</p><p>经查看的确是编码不匹配问题</p><p><img src="/2020/06/11/10249/image-20200611011451063.png" alt></p><h3><span id="jie-jue-fang-fa">解决方法</span><a href="#jie-jue-fang-fa" class="header-anchor">.</a></h3><blockquote><p>先找到 my.ini 配置文件（可能在安装目录下或则是在隐藏文件夹ProgramData下mysql目录下）</p><p>打开my.ini 做如下修改</p></blockquote><pre class="line-numbers language-ini"><code class="language-ini"># 在 [mysqld] 下添加<span class="token constant">character-set-server</span><span class="token attr-value"><span class="token punctuation">=</span>utf8</span># 在 [client] 下添加<span class="token constant">default-character-set</span><span class="token attr-value"><span class="token punctuation">=</span>utf8</span># 重启MySQL服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/06/11/10249/image-20200611004519065.png" alt></p><p><img src="/2020/06/11/10249/image-20200611004843753.png" alt></p><h4><span id="jie-guo">结果</span><a href="#jie-guo" class="header-anchor">.</a></h4><p>仍然有点偏差，字符集 client 、connection 、 results 并没有改变，还是 GBK</p><p>但是<strong>JDBC插入数据已经能够正常显示</strong></p><p><img src="/2020/06/11/10249/image-20200611005648063.png" alt></p><h4><span id="wei-shi-me">为什么</span><a href="#wei-shi-me" class="header-anchor">.</a></h4><p>当我查看cmd字符集 代码是936（GBK）</p><p><img src="/2020/06/11/10249/image-20200611005914934.png" alt="GBK"></p><p>可能是cmd这个客户端编码的影响</p><p>当我切换cmd编码为 UTF8（65001）</p><pre class="line-numbers language-shell"><code class="language-shell">chcp 65001 # 临时更改<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/06/11/10249/image-20200611010504905.png" alt></p><h3><span id="yong-jiu-geng-gai-cmd-bian-ma">永久更改cmd编码</span><a href="#yong-jiu-geng-gai-cmd-bian-ma" class="header-anchor">.</a></h3><blockquote><p>第一步 win + R</p><p>第二步 输入regedit 进入注册表</p><p>第三步 找到下示路径 <strong>两种选一种</strong></p></blockquote><p><img src="/2020/06/11/10249/image-20200611010842614.png" alt>  </p><p><strong>或者</strong></p><p><img src="/2020/06/11/10249/image-20200611090830382.png" alt></p><blockquote><p>第四步  新建 autorun 文件 类型是字符串值</p><p> 或者 新建CodePage文件 类型是DWORD</p><p>第五步 双击autorun，填入值:     chcp 65001 </p><p>或者 双击CodePage， 填入值： 65001</p></blockquote><p><img src="/2020/06/11/10249/image-20200611011142820.png" alt></p><p><strong>或者</strong></p><p><img src="/2020/06/11/10249/image-20200611091155675.png" alt></p><blockquote><p>重启cmd 结束</p></blockquote><h3><span id="xin-de-wen-ti">新的问题</span><a href="#xin-de-wen-ti" class="header-anchor">.</a></h3><p>在mysql命令行会输入不了中文</p><p>解决 换回 GBK即可</p><p>：删除上述文件（autorun 或 CodePage）</p><p>以及</p><p><img src="/2020/06/11/10249/image-20200611101126058.png" alt></p><p><strong>上述client 、connection 、 results</strong>的编码并不代表数据的<strong>存储编码</strong></p><p><strong>只要在my.ini中有之前的配置就没问题</strong>但除了 你的 数据表、数据列的编码本身就 不是UTF8</p><p><strong>注意</strong></p><blockquote><p>如果你的 数据库的字符集是latin1</p><p>在该数据库下新建的 表、列的字符集都会是latin1</p><p>除非 在创建表时指定 字符集</p></blockquote><p>不同的客户端 的 这些都不同</p><p><strong>Navicat</strong>：</p><p><img src="/2020/06/11/10249/image-20200611102952562.png" alt></p><p>JAVA IDEA：</p><p><img src="/2020/06/11/10249/image-20200611105600508.png" alt></p><p><a href="https://blog.csdn.net/xinyuan_java/article/details/90715341?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522159184231219724848324900%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=159184231219724848324900&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-90715341.pc_search_back_js&utm_term=mysql%E5%AD%97%E7%AC%A6%E9%9B%86" target="_blank" rel="noopener">MySQL字符集</a> (服务器级、数据库级、数据表级、数据列级)</p>]]></content>
      
      
      
        <tags>
            
            <tag> err </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php入门笔记2</title>
      <link href="/2020/06/05/55320.html"/>
      <url>/2020/06/05/55320.html</url>
      
        <content type="html"><![CDATA[<h2><span id="php-cao-zuo-shu-ju-ku-mysql">php操作数据库（mysql）</span><a href="#php-cao-zuo-shu-ju-ku-mysql" class="header-anchor">.</a></h2><h3><span id="yi-php-shu-ju-ku-kuo-zhan-fen-lei">一、PHP数据库扩展分类</span><a href="#yi-php-shu-ju-ku-kuo-zhan-fen-lei" class="header-anchor">.</a></h3><ul><li>MySQL 扩展</li><li>MySQLi 扩展</li><li>PDO扩展</li></ul><h4><span id="1-mysql-kuo-zhan">1.MySQL扩展</span><a href="#1-mysql-kuo-zhan" class="header-anchor">.</a></h4><blockquote><p>MySQL 扩展是针对 MySQL 4.1.3 或更早版本设计的，是 PHP 与 MySQL数据库交互的早期扩展。由于其不支持 MySQL 数据库服务器的新特性，且安全性差，在项目开发中不建议使用，可用 MySQLi 扩展代替</p></blockquote><h4><span id="2-mysqli-kuo-zhan">2.MySQLi 扩展</span><a href="#2-mysqli-kuo-zhan" class="header-anchor">.</a></h4><blockquote><p>MySQLi 扩展是 MySQL 扩展的增强版，它不仅包含了所有 MySQL 扩展的功能函数，还可以使用 MySQL 新版本中的高级特性。</p><p>例如，多语句执行和事务的支持，预处理方式完全解决了 SQL 注入问题等。MySQLi 扩展只支持MySQL 数据库，如果不考虑其他数据库，该扩展是一个非常好的选择。</p></blockquote><h4><span id="3-pdo-kuo-zhan">3.PDO 扩展</span><a href="#3-pdo-kuo-zhan" class="header-anchor">.</a></h4><blockquote><p>PDO 是 PHP Data Objects（数据对象）的简称，它提供了一个统一的 API接口，只要修改其中的 DSN (数据源)，就可以实现PHP应用与不同类型数据库服务器之间的交互。</p></blockquote><p><strong>PHP中的数据库扩展需要到php.ini中打开</strong>，然后重启服务</p><blockquote><p>去掉 extension 前的 ；即可</p><p>extension=php_mysql.dll<br>extension=php_mysqli.dll<br>extension=php_pdo_mysql.dll</p></blockquote><h3><span id="er-php-fang-wen-mysql-de-ji-ben-bu-zou">二、PHP访问MySQL的基本步骤</span><a href="#er-php-fang-wen-mysql-de-ji-ben-bu-zou" class="header-anchor">.</a></h3><p><img src="/2020/06/05/55320/image-20200606125149957.png" alt></p><h3><span id="san-dui-bi-mysql-he-mysqli-kuo-zhan">三、对比MySQL和MySQLi扩展</span><a href="#san-dui-bi-mysql-he-mysqli-kuo-zhan" class="header-anchor">.</a></h3><ul><li><p>MySQLi扩展 支持两种语法，①面向过程 ②面向对象</p><p>MySQL扩展用法 非常相似的面向过程语法，即使用函数完成 PHP 与 MySQL的交互</p></li></ul><p><strong>面向过程 函数</strong></p><table><thead><tr><th><strong>基本步骤</strong></th><th><strong>MySQL扩展</strong></th><th><strong>MySQLi扩展</strong></th></tr></thead><tbody><tr><td><strong>连接和选择数据库</strong></td><td>mysql_connect()</td><td>mysqli_connect()</td></tr><tr><td><strong>执行SQL语句</strong></td><td>mysql_query()</td><td>mysqli_query()</td></tr><tr><td><strong>处理结果集</strong></td><td>mysql_fetch_array()</td><td>mysqli_fetch_array()</td></tr><tr><td><strong>释放结果集</strong></td><td>mysql_free_result()</td><td>mysqli_free_result()</td></tr><tr><td><strong>关闭连接</strong></td><td>mysql_close()</td><td>mysqli_close()</td></tr></tbody></table><h3><span id="si-lian-jie-shu-ju-ku-mian-xiang-guo-cheng">四、连接数据库（面向过程）</span><a href="#si-lian-jie-shu-ju-ku-mian-xiang-guo-cheng" class="header-anchor">.</a></h3><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//函数</span>mysqli <span class="token function">mysqli_connect</span> <span class="token punctuation">(</span>      string <span class="token variable">$host</span> <span class="token operator">=</span> <span class="token function">ini_get</span><span class="token punctuation">(</span><span class="token string">'mysqli.default_host'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//主机名或 IP</span>      string <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token function">ini_get</span><span class="token punctuation">(</span><span class="token string">'mysqli.default_user'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//用户名</span>      string <span class="token variable">$passwd</span> <span class="token operator">=</span> <span class="token function">ini_get</span><span class="token punctuation">(</span><span class="token string">'mysqli.default_pw'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//密码</span>      string <span class="token variable">$dbname</span> <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">,</span>                 <span class="token comment" spellcheck="true">//数据库名</span>      int <span class="token variable">$port</span> <span class="token operator">=</span> <span class="token function">ini_get</span><span class="token punctuation">(</span><span class="token string">'mysqli.default_port'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>         <span class="token comment" spellcheck="true">//端口号</span>      string <span class="token variable">$socket</span> <span class="token operator">=</span> <span class="token function">ini_get</span><span class="token punctuation">(</span><span class="token string">'mysqli.default_socket'</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true">//socket 通信</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">/*函数有 6 个可选参数，当省略时参数时，自动使用 php.ini 中配置的默认值。连接成功时，该函数返回数据库连接；连接失败时，函数返回 false，并提示 Warning 级错误信息。参数 $socket 表示socket 通信方式，通常不需要设置*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5><span id="1-lian-jie-bing-xuan-ze-shu-ju-ku">(1) 连接并选择数据库</span><a href="#1-lian-jie-bing-xuan-ze-shu-ju-ku" class="header-anchor">.</a></h5><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//连接数据库，并通过$link保存连接</span><span class="token variable">$link</span> <span class="token operator">=</span> <span class="token function">mysqli_connect</span><span class="token punctuation">(</span><span class="token string">'localhost'</span><span class="token punctuation">,</span> <span class="token string">'root'</span><span class="token punctuation">,</span> <span class="token string">'root'</span><span class="token punctuation">,</span> <span class="token string">'phpdb'</span><span class="token punctuation">,</span><span class="token string">'3307'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5><span id="2-zi-ding-yi-cuo-wu-xin-xi">(2) 自定义错误信息</span><a href="#2-zi-ding-yi-cuo-wu-xin-xi" class="header-anchor">.</a></h5><blockquote><p>当数据库连接失败时，mysqli_connect() 提示的错误信息并不友好，可以通过下面的方式解决。</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//连接数据库，并屏蔽错误信息</span><span class="token variable">$link</span> <span class="token operator">=</span> @<span class="token function">mysqli_connect</span><span class="token punctuation">(</span><span class="token string">'localhost'</span><span class="token punctuation">,</span> <span class="token string">'root'</span><span class="token punctuation">,</span> <span class="token string">'root'</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token function">exit</span><span class="token punctuation">(</span><span class="token string">'数据库连接失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*“@”用于屏蔽函数的错误信息“or”是比较运算符 只有左边表达式的值为 false 时，才会执行右边的表达式“exit”用于停止脚本，同时可以输出错误信息当需要详细的错误信息时，可以通过mysqli_connect_error() 函数来获取*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5><span id="3-she-zhi-zi-fu-ji">(3) 设置字符集</span><a href="#3-she-zhi-zi-fu-ji" class="header-anchor">.</a></h5><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//设置字符集</span><span class="token function">mysqli_set_charset</span><span class="token punctuation">(</span><span class="token variable">$link</span><span class="token punctuation">,</span> <span class="token string">'utf8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//成功返回true，失败返回false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>注意</strong></p><blockquote><p>只有保持 PHP 脚本文件、Web 服务器返回的编码、网页的 <meta> 标记、PHP 访问 MySQL 使用的字符集都统一时，才能避免中文出现乱码问题</p></blockquote><h3><span id="wu-zhi-xing-sql-yu-ju-mian-xiang-guo-cheng">五、执行SQL语句（面向过程）</span><a href="#wu-zhi-xing-sql-yu-ju-mian-xiang-guo-cheng" class="header-anchor">.</a></h3><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//函数</span>mixed <span class="token function">mysqli_query</span> <span class="token punctuation">(</span>      mysqli <span class="token variable">$link</span><span class="token punctuation">,</span>         <span class="token comment" spellcheck="true">//数据库连接</span>      string <span class="token variable">$query</span><span class="token punctuation">,</span>         <span class="token comment" spellcheck="true">//SQL语句</span>      int <span class="token variable">$resultmode</span> <span class="token operator">=</span> <span class="token constant">MYSQLI_STORE_RESULT</span>    <span class="token comment" spellcheck="true">//结果集模式</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意</strong></p><blockquote><p>当函数执行 SELECT、SHOW、DESCRIBE 或EXPLAIN 查询时，返回值是查询结果集，而对于其他查询，成功返回 true，失败返回 false。</p><p>可选参数 $resultmode 的值：</p><p>​    ① MYSQLI_STORE_RESULT：会将结果集全部读取到 PHP 端</p><p>​    ② MYSQLI_USE_RESULT ：仅初始化结果集检索，在处理结果集时进行数据读取</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//连接数据库</span><span class="token variable">$link</span> <span class="token operator">=</span> <span class="token function">mysqli_connect</span><span class="token punctuation">(</span><span class="token string">'localhost'</span><span class="token punctuation">,</span> <span class="token string">'root'</span><span class="token punctuation">,</span> <span class="token string">'123456'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$link</span><span class="token punctuation">,</span> <span class="token string">'use `itcast`'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//选择数据库（SQL语句方式）</span><span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$link</span><span class="token punctuation">,</span> <span class="token string">'set names utf8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//设置字符集（SQL语句方式）</span><span class="token comment" spellcheck="true">//执行SQL语句，并获取结果集</span><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$link</span><span class="token punctuation">,</span> <span class="token string">'show databases'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token function">exit</span><span class="token punctuation">(</span><span class="token string">'执行失败。错误信息：'</span><span class="token punctuation">.</span><span class="token function">mysqli_error</span><span class="token punctuation">(</span><span class="token variable">$link</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="liu-chu-li-jie-guo-ji-mian-xiang-guo-cheng">六、处理结果集（面向过程）</span><a href="#liu-chu-li-jie-guo-ji-mian-xiang-guo-cheng" class="header-anchor">.</a></h3><blockquote><p>当通过 mysqli_query() 函数执行 SQL 语句后，返回的结果集并不能直接使用，需要使用函数从结果集中获取信息，保存为数组</p></blockquote><blockquote><p>在表列举函数中，mysqli_fetch_all() 和 mysqli_fetch_array() 的返回值支持关联数组和索引数组两种形式，</p><p>函数第 1 个参数表示结果集，</p><p>​        第 2 个参数是可选参数，表示返回的数组形式，其值有 MYSQLI_ASSOC、MYSQLI_NUM、MYSQLI_BOTH 三种常量，分别表示关联数组、索引数组，或两者皆有，默认值为 MYSQLI_BOTH。</p></blockquote><h4><span id="1-yi-ci-cha-xun-yi-xing-ji-lu">1.一次查询一行记录</span><a href="#1-yi-ci-cha-xun-yi-xing-ji-lu" class="header-anchor">.</a></h4><blockquote><p>当需要一次查询一行记录时，可以通过 mysqli_fetch_assoc()、mysqli_fetch_row() 或 mysqli_fetch_array() 来实现</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//通过循环将结果集中所有的记录全部读取</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$row</span> <span class="token operator">=</span> <span class="token function">mysqli_fetch_assoc</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token keyword">echo</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//输出“name”字段的值</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4><span id="2-yi-ci-cha-xun-suo-you-ji-lu">2. 一次查询所有记录</span><a href="#2-yi-ci-cha-xun-suo-you-ji-lu" class="header-anchor">.</a></h4><blockquote><p>当需要一次查询出所有的记录时，可以通过 mysqli_fetch_all() 函数来实现</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//查询所有记录，获取关联数组结果</span><span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">mysqli_fetch_all</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">,</span> <span class="token constant">MYSQLI_ASSOC</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//打印数组结构</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//每行记录是一个数组，所有的行组成了$data数组</span><span class="token comment" spellcheck="true">//MYSQLI_ASSOC，表示返回关联数组结果</span><span class="token comment" spellcheck="true">//$data是一个包含所有行的二维数组，当访问第1行记录中的“name”时，可以通过“$data[0]['name']”进行访问</span><span class="token comment" spellcheck="true">//使用 var_dump() 函数可以查看该数组的结构。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="qi-yu-chu-li-yu-ju-mian-xiang-guo-cheng">七、预处理语句（面向过程）</span><a href="#qi-yu-chu-li-yu-ju-mian-xiang-guo-cheng" class="header-anchor">.</a></h3><blockquote><p>MySQLi  扩展中有一种预处理语句的机制，其原理是预先编译 SQL 语句的模板，当执行时只传输有变化的数据。下图演示了预处理语句和传统方式的区别。</p></blockquote><p><img src="/2020/06/05/55320/image-20200606133957119.png" alt></p><blockquote><p> 从图中可以看出，当 PHP 需要执行 SQL 时，传统方式是将发送的数据和 SQL 写在一起，这种方式每条 SQL 都需要经过分析、编译和优化的周期；而预处理语句只需要编译一次用户提交的 SQL 模板，在操作时，发送相关数据即可完成更新操作，这极大地提高了运行效率，而且无需考虑数据中包含特殊字符（如单引号）导致的语法问题。</p></blockquote><p><strong>预处理相关函数</strong></p><h6><span id="1-mysqli-prepare">1.mysqli_prepare</span><a href="#1-mysqli-prepare" class="header-anchor">.</a></h6><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//用于预处理一个待执行的 SQL 语句</span>mysqli_stmt <span class="token function">mysqli_prepare</span> <span class="token punctuation">(</span> mysqli <span class="token variable">$link</span> <span class="token punctuation">,</span> string <span class="token variable">$query</span> <span class="token punctuation">)</span><span class="token comment" spellcheck="true">//参数 $link 表示数据库连接，$query 表示 SQL 语句模板。当函数执行后，成功返回预处理对象，失败返回 false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h6><span id="2-mysqli-stmt-bind-param">2.mysqli_stmt_bind_param</span><a href="#2-mysqli-stmt-bind-param" class="header-anchor">.</a></h6><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//用于将变量作为参数绑定到预处理语句中</span>bool <span class="token function">mysqli_stmt_bind_param</span> <span class="token punctuation">(</span>       mysqli_stmt <span class="token variable">$stmt</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//预处理对象</span>       string <span class="token variable">$types</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//数据类型</span>       mixed <span class="token operator">&amp;</span><span class="token variable">$var1</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//绑定变量1（引用传参）</span>       <span class="token punctuation">[</span><span class="token punctuation">,</span> mixed<span class="token operator">&amp;</span>$<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">]</span>        <span class="token comment" spellcheck="true">//绑定变量n...（可选参数，可绑定多个，引用传参）</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//数 $stmt 表示由 mysqli_prepare() 返回的预处理对象；$types 用于指定被绑定变量的数据类型，它是由一个或多个字符组成的字符串；后面的 $var（可以是多个参数）表示需要绑定的变量，且其个数必须与 $types 字符串的长度一致。该函数执行成功时返回 true，失败时返回 false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>参数绑定时的数据类型字符</strong></p><table><thead><tr><th><strong>字符</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><strong>i</strong></td><td>描述变量的数据类型为MySQL中的integer类型</td></tr><tr><td><strong>d</strong></td><td>描述变量的数据类型为MySQL中的double类型</td></tr><tr><td><strong>s</strong></td><td>描述变量的数据类型为MySQL中的string类型</td></tr><tr><td><strong>b</strong></td><td>描述变量的数据类型为MySQL中的blob类型</td></tr></tbody></table><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//演示</span><span class="token comment" spellcheck="true">//连接数据库、预处理SQL模板</span><span class="token variable">$link</span> <span class="token operator">=</span> <span class="token function">mysqli_connect</span><span class="token punctuation">(</span><span class="token string">'localhost'</span><span class="token punctuation">,</span> <span class="token string">'root'</span><span class="token punctuation">,</span> <span class="token string">'123456'</span><span class="token punctuation">,</span> <span class="token string">'itcast'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token function">mysqli_prepare</span><span class="token punctuation">(</span><span class="token variable">$link</span><span class="token punctuation">,</span> <span class="token string">'UPDATE `user` SET `name`=? WHERE `id`=?'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//参数绑定（将变量$name、$id按顺序绑定到SQL语句“?”占位符上）</span><span class="token function">mysqli_stmt_bind_param</span><span class="token punctuation">(</span><span class="token variable">$stmt</span><span class="token punctuation">,</span> <span class="token string">'si'</span><span class="token punctuation">,</span> <span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h6><span id="3-mysqli-stmt-execute">3.mysqli_stmt_execute</span><a href="#3-mysqli-stmt-execute" class="header-anchor">.</a></h6><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//在完成参数绑定后，接下来应该将数据内容发送给 MySQL 执行</span>bool <span class="token function">mysqli_stmt_execute</span> <span class="token punctuation">(</span> mysqli_stmt <span class="token variable">$stmt</span> <span class="token punctuation">)</span><span class="token comment" spellcheck="true">//$stmt 参数表示由 mysqli_prepare() 函数返回的预处理对象。当函数执行成功后，返回 true，执行失败返回 false。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//演示</span><span class="token comment" spellcheck="true">//连接数据库、预处理SQL模板</span><span class="token variable">$link</span> <span class="token operator">=</span> <span class="token function">mysqli_connect</span><span class="token punctuation">(</span><span class="token string">'localhost'</span><span class="token punctuation">,</span> <span class="token string">'root'</span><span class="token punctuation">,</span> <span class="token string">'123456'</span><span class="token punctuation">,</span> <span class="token string">'itcast'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token function">mysqli_prepare</span><span class="token punctuation">(</span><span class="token variable">$link</span><span class="token punctuation">,</span> <span class="token string">'UPDATE `user` SET `name`=? WHERE `id`=?'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//参数绑定，并为已经绑定的变量赋值</span><span class="token function">mysqli_stmt_bind_param</span><span class="token punctuation">(</span><span class="token variable">$stmt</span><span class="token punctuation">,</span> <span class="token string">'si'</span><span class="token punctuation">,</span> <span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string">'aa'</span><span class="token punctuation">;</span><span class="token variable">$id</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//执行预处理（第一次执行）</span><span class="token function">mysqli_stmt_execute</span><span class="token punctuation">(</span><span class="token variable">$stmt</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//为第二次执行重新赋值</span><span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string">'bb'</span><span class="token punctuation">;</span><span class="token variable">$id</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//执行预处理（第二次执行）</span><span class="token function">mysqli_stmt_execute</span><span class="token punctuation">(</span><span class="token variable">$stmt</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="qi-ta-cao-zuo">其他操作</span><a href="#qi-ta-cao-zuo" class="header-anchor">.</a></h3><table><thead><tr><th><strong>函数</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><strong>mysqli_insert_id()</strong></td><td>获取上一次插入操作时产生的ID号</td></tr><tr><td><strong>mysqli_affected_rows()</strong></td><td>获取上一次操作时受影响的行数</td></tr><tr><td><strong>mysqli_real_escape_string()</strong></td><td>用于转义SQL语句字符串中的特殊字符</td></tr><tr><td><strong>mysqli_free_result()</strong></td><td>释放结果集</td></tr><tr><td><strong>mysqli_close()</strong></td><td>关闭先前打开的数据库连接</td></tr><tr><td><strong>mysqli_error()</strong></td><td>返回最近函数调用的错误代码</td></tr></tbody></table><p><a href="http://www.php.net/manual/zh/index.php" target="_blank" rel="noopener" style="position:fixed;top:50%;left:90%;text-decoration:none;font-size:25px;color:violet;background-color:yellow">PHP手册</a></p><blockquote><p>mysqli_free_result() 和 mysqli_close() 函数用于释放资源、关闭连接，由于 PHP 访问 MySQL 使用了非持久连接，因此当 PHP 脚本执行结束时会自动释放。</p></blockquote><h3><span id="wan-zheng-cao-zuo-mian-xiang-guo-cheng">完整操作(面向过程)</span><a href="#wan-zheng-cao-zuo-mian-xiang-guo-cheng" class="header-anchor">.</a></h3><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//连接数据库、设置字符集</span><span class="token variable">$link</span> <span class="token operator">=</span> <span class="token function">mysqli_connect</span><span class="token punctuation">(</span><span class="token string">'localhost'</span><span class="token punctuation">,</span> <span class="token string">'root'</span><span class="token punctuation">,</span> <span class="token string">'123456'</span><span class="token punctuation">,</span> <span class="token string">'itcast'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">mysqli_set_charset</span><span class="token punctuation">(</span><span class="token variable">$link</span><span class="token punctuation">,</span> <span class="token string">'utf8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// ① 执行查询操作、处理结果集</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$link</span><span class="token punctuation">,</span> <span class="token string">'SELECT * FROM `user`'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">exit</span><span class="token punctuation">(</span><span class="token string">'执行失败。错误信息：'</span><span class="token punctuation">.</span><span class="token function">mysqli_error</span><span class="token punctuation">(</span><span class="token variable">$link</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//获取错误信息</span><span class="token punctuation">}</span><span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">mysqli_fetch_all</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">,</span> <span class="token constant">MYSQLI_ASSOC</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// ② 用完后，释放结果集</span><span class="token function">mysqli_free_result</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// ③ 执行插入操作，拼接SQL语句</span><span class="token comment" spellcheck="true">//转义特殊符号</span><span class="token variable">$name</span> <span class="token operator">=</span> <span class="token function">mysqli_real_escape_string</span><span class="token punctuation">(</span><span class="token variable">$link</span><span class="token punctuation">,</span> <span class="token string">"单引号'测试'文本"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$link</span><span class="token punctuation">,</span> "<span class="token constant">INSERT</span> <span class="token constant">INTO</span> `user` <span class="token punctuation">(</span>`name`<span class="token punctuation">)</span> <span class="token function">VALUES</span> <span class="token punctuation">(</span><span class="token string">'".$name."'</span><span class="token punctuation">)</span>"<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">exit</span><span class="token punctuation">(</span><span class="token string">'执行失败。错误信息：'</span><span class="token punctuation">.</span><span class="token function">mysqli_error</span><span class="token punctuation">(</span><span class="token variable">$link</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// ④ 获取最后插入的ID</span><span class="token variable">$id</span> <span class="token operator">=</span> <span class="token function">mysqli_insert_id</span><span class="token punctuation">(</span><span class="token variable">$link</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//获取AUTO_INCREMENT字段的自增值</span><span class="token comment" spellcheck="true">// ⑤ 执行修改操作</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$link</span><span class="token punctuation">,</span> "<span class="token constant">UPDATE</span> `user` <span class="token constant">SET</span> `name`<span class="token operator">=</span><span class="token string">'aa'</span> <span class="token constant">WHERE</span> `id`<span class="token operator">></span><span class="token number">2</span>"<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">exit</span><span class="token punctuation">(</span><span class="token string">'执行失败。错误信息：'</span><span class="token punctuation">.</span><span class="token function">mysqli_error</span><span class="token punctuation">(</span><span class="token variable">$link</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment" spellcheck="true">// ⑥ 获取受影响的行数</span><span class="token variable">$num</span> <span class="token operator">=</span> <span class="token function">mysqli_affected_rows</span><span class="token punctuation">(</span><span class="token variable">$link</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//可获取UPDATE、                                                    //DELETE等操作影响的行数</span><span class="token comment" spellcheck="true">// ⑦ 关闭连接</span><span class="token function">mysqli_close</span><span class="token punctuation">(</span><span class="token variable">$link</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>在上述代码中，第 4<del>10 行演示了 mysqli_error()、mysqli_free_result()函数的使用，第 12 行演示了 mysqli_real_escape_string() 函数的使用，第17</del>25行演示了 mysqli_insert_id()、mysqli_affected_rows()、mysqli_close()函数的使用。其中第 8 行 $data 保存了查询出的数据，因此在第 10 行释放了$result 结果集。第 25 行关闭 $link 连接后，$link 将不能继续使用。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php入门笔记1</title>
      <link href="/2020/05/20/6418.html"/>
      <url>/2020/05/20/6418.html</url>
      
        <content type="html"><![CDATA[<h1><span id="php-yu-fa-ji-chu">PHP 语法基础</span><a href="#php-yu-fa-ji-chu" class="header-anchor">.</a></h1><h2><span id="yi-php-biao-ji-yu-zhu-shi">一、php标记与注释</span><a href="#yi-php-biao-ji-yu-zhu-shi" class="header-anchor">.</a></h2><h3><span id="1-php-biao-ji">1.php标记</span><a href="#1-php-biao-ji" class="header-anchor">.</a></h3><p>​    php是嵌入式脚本语言，它经常会和HTML内容混编在一起，因此为了区分HTML与PHP代码，需要使用标记将PHP代码包裹起来。</p><table><thead><tr><th><strong>标记类型</strong></th><th><strong>开始标记</strong></th><th><strong>结束标记</strong></th></tr></thead><tbody><tr><td>标准标记</td><td>&lt;?php</td><td>?&gt;</td></tr><tr><td>短标记</td><td>&lt;?</td><td>?&gt;</td></tr><tr><td>ASP风格标记</td><td>&lt;%</td><td>%&gt;</td></tr><tr><td>脚本风格标记</td><td><script language="“php”"></td><td></script></td></tr></tbody></table><ul><li>标记语言是PHP中最常用的标记，当<strong>一个文件是纯PHP代码</strong>时，<strong>可省略结束标记</strong>,且开始标记最好顶格写。</li><li>其他三种标记，在实际开发中很少使用</li></ul><h3><span id="2-php-zhu-shi">2.PHP注释</span><a href="#2-php-zhu-shi" class="header-anchor">.</a></h3><pre><code>&gt;单行注释  //&gt;&gt;多行注释 /* */</code></pre><h2><span id="er-biao-shi-fu-yu-guan-jian-zi">二、标识符与关键字</span><a href="#er-biao-shi-fu-yu-guan-jian-zi" class="header-anchor">.</a></h2><h3><span id="1-biao-shi-fu">1.标识符</span><a href="#1-biao-shi-fu" class="header-anchor">.</a></h3><p>​    在程序开发中，经常需要定义一些符号来标记一些名称，如变量名、常量名、函数名、类名等</p><h5><span id="gui-ze">规则</span><a href="#gui-ze" class="header-anchor">.</a></h5><ul><li>只能由字母、数字和下划线组成</li><li>必须以字母或下划线开头</li><li>用作变量名时，区分大小写</li><li>若由多个单词组成，就以下划线分隔</li></ul><h3><span id="2-guan-jian-zi">2.关键字</span><a href="#2-guan-jian-zi" class="header-anchor">.</a></h3><p>​    编程语言中事先定义好并赋予了特殊含义的单词，也称作保留字</p><table><thead><tr><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>and</td><td>or</td><td>xor</td><td>_<em>FILE_</em></td><td>exception</td></tr><tr><td>_<em>LINE_</em></td><td>array()</td><td>As</td><td>break</td><td>case</td></tr><tr><td>class</td><td>const</td><td>continue</td><td>declare</td><td>default</td></tr><tr><td>die()</td><td>do</td><td>echo</td><td>else</td><td>elseif</td></tr><tr><td>empty()</td><td>enddeclare</td><td>endfor</td><td>endforeach</td><td>endif</td></tr><tr><td>endswitch</td><td>endwhile</td><td>eval()</td><td>exit()</td><td>extends</td></tr><tr><td>for</td><td>foreach</td><td>function</td><td>global</td><td>if</td></tr><tr><td>include</td><td>include_once</td><td>isset()</td><td>list()</td><td>new</td></tr><tr><td>print</td><td>require</td><td>require_once</td><td>return</td><td>static</td></tr><tr><td>switch</td><td>unset()</td><td>use</td><td>var</td><td>while</td></tr><tr><td>_<em>FUNCTION_</em></td><td>_<em>CLASS_</em></td><td>_<em>METHOD_</em></td><td>final</td><td>php_user_filter</td></tr><tr><td>interface</td><td>implements</td><td>extends</td><td>public</td><td>private</td></tr><tr><td>protected</td><td>abstract</td><td>clone</td><td>try</td><td>catch</td></tr><tr><td>throw</td><td>this</td><td></td><td></td><td></td></tr></tbody></table><h2><span id="san-bian-liang-yu-chang-liang">三、变量与常量</span><a href="#san-bian-liang-yu-chang-liang" class="header-anchor">.</a></h2><h3><span id="1-bian-liang">1.变量</span><a href="#1-bian-liang" class="header-anchor">.</a></h3><p>​    变量就是保留可变数据的容器。</p><p>​    PHP中，变量由$与变量名组成，如：$online 、$_online</p><p>​    <strong>php是弱类型语言，所以变量不需要事先声明，就可以进行赋值使用</strong></p><ul><li><p>PHP赋值方式</p><ul><li>传值赋值（默认）</li><li>引用赋值</li></ul><p>​    引用使用时只需要在变量前添加 “ &amp; ”符号即可，如$n = &amp;$num</p></li></ul><h3><span id="2-ke-bian-bian-liang">2.可变变量</span><a href="#2-ke-bian-bian-liang" class="header-anchor">.</a></h3><p>​    通过可变变量，可以将另一个变量的值作为该变量的名称</p><p>​    可变变量只需在一个变量前多加一个美元符号$</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token string">'hello'</span><span class="token punctuation">;</span>    <span class="token variable">$hello</span> <span class="token operator">=</span> <span class="token string">"world"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//hello</span>    <span class="token keyword">echo</span> $<span class="token variable">$a</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//world</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>==注意：在当 $a 的值是数字 时，$$a会出现非法变量名的情况==</p><h3><span id="3-chang-liang">3.常量</span><a href="#3-chang-liang" class="header-anchor">.</a></h3><p>​    常量用于保存在脚本运行过程中值始终保持不变的量，它的特点是一旦被定义就不能被修改或重新定义</p><ul><li><p>常量的定义方式：</p><ul><li>define（） 函数</li><li>const关键字</li></ul><p>①define（）函数</p><pre class="line-numbers language-php"><code class="language-php"><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">'CON'</span><span class="token punctuation">,</span> <span class="token string">'php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//定义名称为CON的常量，其值为php </span><span class="token keyword">echo</span> <span class="token constant">CON</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//输出结果为：php</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">// 输出常量也可是下面方式</span><span class="token keyword">echo</span> <span class="token function">constant</span><span class="token punctuation">(</span><span class="token string">'CON'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//php</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>②const关键字</p><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">const</span> <span class="token constant">PAI</span> <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//定义名字为PAI的常量，其值为3.14</span><span class="token keyword">echo</span> <span class="token constant">PAI</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">//输出结果为：3.14</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h3><span id="4-yu-ding-yi-bian-liang">4.预定义变量</span><a href="#4-yu-ding-yi-bian-liang" class="header-anchor">.</a></h3><p>​    预定义常量是指PHP预先定义好的常量，用于获取PHP中的相关信息，方便开发。<br>在需要时可直接在程序中使用</p><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">echo</span> <span class="token constant">PHP_VERSION</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//用于获取PHP的版本信息</span><span class="token keyword">echo</span> <span class="token constant">PHP_OS</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//用于获取解析PHP的操作系统类型</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2><span id="si-shu-ju-jie-gou">四、数据结构</span><a href="#si-shu-ju-jie-gou" class="header-anchor">.</a></h2><img src="/2020/05/20/6418/image-20200520132505260.png" style="zoom:50%;"><h3><span id="1-bu-er-xing">1.布尔型</span><a href="#1-bu-er-xing" class="header-anchor">.</a></h3><p>​    true 和 false</p><h3><span id="2-zheng-xing">2.整型</span><a href="#2-zheng-xing" class="header-anchor">.</a></h3><p>​    八进制（oct）：07</p><p>​    十进制（dec）：9</p><p>​    十六进制（hex）：0xF</p><h3><span id="3-fu-dian-xing">3.浮点型</span><a href="#3-fu-dian-xing" class="header-anchor">.</a></h3><pre class="line-numbers language-php"><code class="language-php">标准格式：    <span class="token variable">$fnum</span> <span class="token operator">=</span> <span class="token number">3.14</span>科学计数法：    <span class="token variable">$fnum</span> <span class="token operator">=</span> <span class="token number">314E-2</span><span class="token comment" spellcheck="true">// 不管采用哪种格式 浮点数的有效位都是14位</span><span class="token comment" spellcheck="true">// 有效位： 从左边第一个不为0的数开始，直到末尾数的 个数，不包含小数点</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="4-zi-fu-chuan-xing">4.字符串型</span><a href="#4-zi-fu-chuan-xing" class="header-anchor">.</a></h3><ul><li>使用单引号或双引号表示字符串</li></ul><p>​    <strong>注意：变量在双引号字符串中被解析</strong></p><p>​                <strong>变量在单引号字符串中原样输出</strong></p><ul><li><p>在字符串中可以使用转义字符。例如：</p><pre><code>        **双引号字符串中使用双引号时，可以使用 “ \\&quot;  ”来表示。**              **单引号字符串只支持“ &#39; ”和“ \ ”的转义。**</code></pre></li><li><p>在双引号字符串中输出变量时，有时会出现变量名界定不明确的问题，对于这种情况，可以使用{}来对变量进行界定。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string">'php'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string">"世界上最好的语言是{$str}？"</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//输出结果为：世界上最好的语言是php？</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h2><span id="wu-cha-kan-shu-ju-lei-xing">五、查看数据类型</span><a href="#wu-cha-kan-shu-ju-lei-xing" class="header-anchor">.</a></h2><p>​    PHP是弱类型语言，变量的数据类型会随程序的流程而改变。为了方便调试程序，PHP提供了<strong>var_dump()</strong>函数用于<strong>查看变量的值和数据类型</strong>。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token variable">$num</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token variable">$fnum</span> <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span>    <span class="token variable">$bool</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string">'hello world'</span><span class="token punctuation">;</span>    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$fnum</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$bool</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/05/20/6418/image-20200520135509868.png" alt></p><p>使用<strong>print_r()</strong>打印变量易于理解的信息</p><h2><span id="liu-yun-suan-fu">六、运算符</span><a href="#liu-yun-suan-fu" class="header-anchor">.</a></h2><h3><span id="1-suan-zhu-yun-suan-fu">1.算术运算符</span><a href="#1-suan-zhu-yun-suan-fu" class="header-anchor">.</a></h3><table><thead><tr><th><strong>运算符</strong></th><th><strong>意义</strong></th><th><strong>范例</strong></th><th><strong>结果</strong></th></tr></thead><tbody><tr><td>+</td><td>加</td><td>5+5</td><td>10</td></tr><tr><td>-</td><td>减</td><td>6-4</td><td>2</td></tr><tr><td>*</td><td>乘</td><td>3*4</td><td>12</td></tr><tr><td>/</td><td>除</td><td>5/5</td><td>1</td></tr><tr><td>%</td><td>取模（即算术中的求余数）</td><td>5%7</td><td>5</td></tr></tbody></table><h3><span id="2-fu-zhi-yun-suan-fu">2.赋值运算符</span><a href="#2-fu-zhi-yun-suan-fu" class="header-anchor">.</a></h3><table><thead><tr><th><strong>运算符</strong></th><th><strong>意义</strong></th><th><strong>范例</strong></th><th><strong>结果</strong></th></tr></thead><tbody><tr><td>=</td><td>赋值</td><td>$a=3; ​$b=2;</td><td>$a=3; ​$b=2;</td></tr><tr><td>+=</td><td>加等于</td><td>$a=3; $b=2; $a+=$b;</td><td>$a=5; ​$b=2;</td></tr><tr><td>-=</td><td>减等于</td><td>$a=3; ​$b=2; $a-=​$b;</td><td>$a=1; $b=2;</td></tr><tr><td>*=</td><td>乘等于</td><td>$a=3; ​$b=2; $a*=​ $b;</td><td>$a=6; ​$b=2;</td></tr><tr><td>/=</td><td>除等于</td><td>$a=3; ​$b=2; $a/= $b;</td><td>$a=1.5; ​$b=2;</td></tr><tr><td>%=</td><td>模等于</td><td>$a=3; ​$b=2; $a%= $b;</td><td>$a=1; ​$b=2;</td></tr><tr><td>.=</td><td>连接等于</td><td>$a=’abc’; ​$a .= ‘def’;</td><td>$a=’abcdef’</td></tr></tbody></table><h3><span id="3-bi-jiao-yun-suan-fu">3.比较运算符</span><a href="#3-bi-jiao-yun-suan-fu" class="header-anchor">.</a></h3><table><thead><tr><th><strong>运算符</strong></th><th><strong>运算</strong></th><th>范例（$x=5）</th><th><strong>结果</strong></th></tr></thead><tbody><tr><td>==</td><td>等于</td><td>$x == 4</td><td>false</td></tr><tr><td>!=</td><td>不等于</td><td>$x != 4</td><td>true</td></tr><tr><td>&lt;&gt;</td><td>不等于</td><td>$x &lt;&gt; 4</td><td>true</td></tr><tr><td>===</td><td>恒等</td><td>$x === 5</td><td>true</td></tr><tr><td>!==</td><td>不恒等</td><td>$x !== ’5’</td><td>true</td></tr><tr><td>&gt;</td><td>大于</td><td>$x &gt; 5</td><td>false</td></tr><tr><td>&gt;=</td><td>大于或等于</td><td>$x &gt;= 5</td><td>true</td></tr><tr><td>&lt;</td><td>小于</td><td>$x &lt; 5</td><td>false</td></tr><tr><td>&lt;=</td><td>小于或等于</td><td>$x &lt;= 5</td><td>true</td></tr></tbody></table><ul><li>对于两个数据类型不相同的数据进行比较时，PHP会自动将其转换成相同类型的数据后再进行比较。</li><li>运算符==”和“!=”运算符在比较时，只比较其值是否相等。</li><li>运算符“===”与“!==”在进行比较时，要比较数值和其数据类型是否相等。</li></ul><h3><span id="4-luo-ji-yun-suan-fu">4.逻辑运算符</span><a href="#4-luo-ji-yun-suan-fu" class="header-anchor">.</a></h3><table><thead><tr><th><strong>运算符</strong></th><th><strong>运算</strong></th><th><strong>范例</strong></th><th><strong>结果</strong></th></tr></thead><tbody><tr><td>&amp;&amp;</td><td>与</td><td>$a &amp;&amp; $b</td><td>a和​b都为true，结果为true，否则为false</td></tr><tr><td>||</td><td>或</td><td>$a || $b</td><td>a和​b中至少有一个为true，则结果为true，否则为false</td></tr><tr><td>!</td><td>非</td><td>!$a</td><td>若a为false，结果为true，否则相反</td></tr><tr><td>xor</td><td>异或</td><td>$a xor $b</td><td>a和​b一个为true，一个为false，结果为true，否则为false</td></tr><tr><td>and</td><td>与</td><td>$a and $b</td><td>与&amp;&amp;相同，但优先级较低</td></tr><tr><td>or</td><td>或</td><td>$a or $b</td><td>与||相同，但优先级较低</td></tr></tbody></table><ul><li>&amp;&amp; 和 ||的优先级高于 and 和 or</li></ul><h3><span id="5-di-zeng-di-jian-yun-suan-fu">5.递增递减运算符</span><a href="#5-di-zeng-di-jian-yun-suan-fu" class="header-anchor">.</a></h3><table><thead><tr><th><strong>运算符</strong></th><th><strong>运算</strong></th><th><strong>范例</strong></th><th><strong>结果</strong></th></tr></thead><tbody><tr><td>++</td><td>（前）自增</td><td>$a=2; $b=++$a;</td><td>$a=3; $b=3;</td></tr><tr><td>++</td><td>（后）自增</td><td>$a=2; ​$b=$a++;</td><td>$a=3; ​$b=2;</td></tr><tr><td>- -</td><td>（前）自减</td><td>$a=2; $b=–$a;</td><td>$a=1; ​$b=1;</td></tr><tr><td>- -</td><td>（后）自减</td><td>$a=2; $b=$a–;</td><td>$a=1; $b=2;</td></tr></tbody></table><h2><span id="qi-biao-da-shi">七、表达式</span><a href="#qi-biao-da-shi" class="header-anchor">.</a></h2><h6><span id="lue">略</span><a href="#lue" class="header-anchor">.</a></h6><h2><span id="ba-yun-suan-fu-you-xian-ji">八、运算符优先级</span><a href="#ba-yun-suan-fu-you-xian-ji" class="header-anchor">.</a></h2><table><thead><tr><th><strong>结合方向</strong></th><th><strong>运算符</strong></th></tr></thead><tbody><tr><td>无</td><td>new</td></tr><tr><td>左</td><td>[</td></tr><tr><td>右</td><td>++ – ~  (int) (float) (string) (array) (object) @</td></tr><tr><td>无</td><td>Instanceof</td></tr><tr><td>右</td><td>!</td></tr><tr><td>左</td><td>* / %</td></tr><tr><td>左</td><td>+ - .</td></tr><tr><td>左</td><td>&lt;&lt; &gt;&gt;</td></tr><tr><td>无</td><td>== != === !== &lt;&gt;</td></tr><tr><td>左</td><td>&amp;</td></tr><tr><td>左</td><td>^</td></tr><tr><td>左</td><td>|</td></tr><tr><td>左</td><td>&amp;&amp;</td></tr><tr><td>左</td><td>||</td></tr><tr><td>左</td><td>? :</td></tr><tr><td>右</td><td>= += -= *= /= .= %= &amp;= |= ^= &lt;&lt;= &gt;&gt;=</td></tr><tr><td>左</td><td>and</td></tr><tr><td>左</td><td>Xor</td></tr><tr><td>左</td><td>Or</td></tr><tr><td>左</td><td>,</td></tr></tbody></table><ul><li>同一行的运算符具有相同的优先级</li><li>左结合方向表示同级运算符的执行顺序为从左到右</li><li>右结合方向则表示执行顺序为从右到左</li><li>补充：圆括号()优先级别最高</li></ul><h2><span id="jiu-shu-ju-lei-xing-zhuan-huan">九、数据类型转换</span><a href="#jiu-shu-ju-lei-xing-zhuan-huan" class="header-anchor">.</a></h2><h3><span id="1-zi-dong-lei-xing-zhuan-huan">1.自动类型转换</span><a href="#1-zi-dong-lei-xing-zhuan-huan" class="header-anchor">.</a></h3><p>​    自动类型转换，指的是当运算需要或与期望的结果类型不匹配时，PHP将自动进行类型转换，无需编程人员做任何操作</p><p>4种：①转换成布尔型 ②转换成整型 ③转换成浮点型 ④转换成字符串型</p><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">/* 字符串 --> 整型 */</span><span class="token comment" spellcheck="true">//比较“888php”与888是否相等</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token string">'888php'</span> <span class="token operator">==</span> <span class="token number">888</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//输出结果：bool(true)</span><span class="token comment" spellcheck="true">//比较“php888”与888是否相等</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token string">'php888'</span> <span class="token operator">==</span> <span class="token number">888</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//输出结果：bool(false)</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token string">'php888'</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//输出结果：bool(true)</span><span class="token comment" spellcheck="true">//这个是因为 字符串转换为 整型时 如果 字符串以数字开头，则使用 该数值 否则转换为零</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="2-qiang-zhi-lei-xing-zhuan-huan">2.强制类型转换</span><a href="#2-qiang-zhi-lei-xing-zhuan-huan" class="header-anchor">.</a></h3><p>​    强制类型转换，就是根据编程需求手动转换数据类型，在要转换的数据或变量之前加上“(目标类型)”即可</p><table><thead><tr><th><strong>强制类型</strong></th><th><strong>功能描述</strong></th><th><strong>范例</strong></th><th><strong>var_dump</strong>()打印结果</th></tr></thead><tbody><tr><td>（bool）</td><td>强转为布尔型</td><td>(bool)-5.9</td><td>bool(true)</td></tr><tr><td>（string）</td><td>强转为字符串型</td><td>(string)12</td><td>string(2) “12”</td></tr><tr><td>（integer）</td><td>强转为整型</td><td>(integer)’hello’</td><td>int(0)</td></tr><tr><td>（float）</td><td>强转为浮点型</td><td>(float)false</td><td>float(0)</td></tr><tr><td>（array）</td><td>强转为数组</td><td>(array)’php’</td><td>array(1) { [0]=&gt; string(3) “php” }</td></tr><tr><td>（object）</td><td>强转为对象</td><td>(object)2.34</td><td>object(stdClass)#1(1){[“scalar”]=&gt;float(2.34}</td></tr></tbody></table><h2><span id="shi-liu-cheng-kong-zhi-yu-ju">十、流程控制语句</span><a href="#shi-liu-cheng-kong-zhi-yu-ju" class="header-anchor">.</a></h2><h3><span id="1-shun-xu-jie-gou-lue">1.顺序结构（略）</span><a href="#1-shun-xu-jie-gou-lue" class="header-anchor">.</a></h3><h3><span id="2-xuan-ze-jie-gou">2.选择结构</span><a href="#2-xuan-ze-jie-gou" class="header-anchor">.</a></h3><p>注意与java不同</p><p>​    ①if 语句</p><p>​    <img src="/2020/05/20/6418/blog\LMKblog\source\_posts\image-20200520151143095.png" alt="image-20200520151143095" style="zoom:50%;"></p><p>​    ②if…else…语句</p><p>​        三目运算符 </p><p>​    <img src="/2020/05/20/6418/image-20200520151217222.png" style="zoom:50%;"></p><p>​    ③if…elseif…else…  (其中 elseif 可存在多个; else 与 if之间没空格; else不能省略；大括号可以省略，但当有大括号时，大括号与if这些关键字之间不能有空格)</p><p>​    <img src="/2020/05/20/6418/image-20200520151249422.png" style="zoom:50%;">    </p><p>​    ④switch语句</p><p>​        略</p><h3><span id="3-xun-huan-jie-gou">3.循环结构</span><a href="#3-xun-huan-jie-gou" class="header-anchor">.</a></h3><p>​    ①while循环语句</p><p>​    <img src="/2020/05/20/6418/image-20200520151046007.png" style="zoom:50%;"></p><p>​    ②do…while循环语句</p><p>​    <img src="/2020/05/20/6418/image-20200520151001154.png" style="zoom: 50%;"></p><p>​    ③for循环语句<br>​    <img src="/2020/05/20/6418/image-20200520151418735.png" style="zoom:50%;"></p><h3><span id="liu-cheng-tiao-zhuan-yu-ju">流程跳转语句</span><a href="#liu-cheng-tiao-zhuan-yu-ju" class="header-anchor">.</a></h3><p>​    break；continue</p><pre><code>break n; //跳出 n重循环</code></pre><h2><span id="shi-yi-ti-huan-yu-fa">十一、替换语法</span><a href="#shi-yi-ti-huan-yu-fa" class="header-anchor">.</a></h2><p>​        当大量的HTML与PHP代码混合编译时，为了方便区分流程语句的开始和结束位置，可以使用PHP提供的替代语法进行编码。<br>​        其基本形式就是把if、while、for、foreach、switch这些语句的左花括号（{）换成冒号（:），将右花括号（}）分别换成“endif;”、“endwhile;”、“endfor;”、“endforeach;”和“endswitch;”。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token number">1</span><span class="token operator">~</span><span class="token number">99</span>之间的偶数：<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?php</span> <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token markup">&lt;100;++$i): ?></span>        <span class="token delimiter">&lt;?php</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">%</span><span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token delimiter">?></span>            <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?</span><span class="token operator">=</span><span class="token variable">$i</span><span class="token punctuation">;</span><span class="token delimiter">?></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span></span>        <span class="token delimiter">&lt;?php</span> <span class="token keyword">endif</span><span class="token punctuation">;</span> <span class="token delimiter">?></span><span class="token delimiter">&lt;?php</span> <span class="token keyword">endfor</span><span class="token punctuation">;</span> <span class="token delimiter">?></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>“<?= ?>”是短标记输出语法，自 PHP 5.4起，这种语法在短标记关闭的情况下仍然可用。<br>因此，在HTML嵌入PHP变量使用这种简写形式将会非常方便。</p></blockquote><h2><span id="shi-er-han-shu">十二、函数</span><a href="#shi-er-han-shu" class="header-anchor">.</a></h2><p>函数：就是程序中用来实现特定功能的代码段，避免代码的重复书写。<br>自定义函数：就是开发人员可根据实际功能编写的代码段。</p><h3><span id="1-zi-ding-yi-han-shu">1.自定义函数</span><a href="#1-zi-ding-yi-han-shu" class="header-anchor">.</a></h3><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">function</span> 函数名<span class="token punctuation">(</span> <span class="token punctuation">[</span>参数<span class="token number">1</span><span class="token punctuation">,</span> 参数<span class="token number">2</span><span class="token punctuation">,</span> ……<span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>       函数体<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>函数名的命名规则与标识符相同，函数名 <strong>不区分大小写</strong>，且是唯一的</p><p>（其变量是区分大小写的）</p><pre><code>#返回值处理return $var;</code></pre><h4><span id="ke-xuan-can-shu">可选参数</span><a href="#ke-xuan-can-shu" class="header-anchor">.</a></h4><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token operator">=</span><span class="token string">'world'</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//$b 是可选参数</span>      <span class="token keyword">return</span> <span class="token variable">$a</span><span class="token punctuation">.</span><span class="token variable">$b</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//拼接两个字符串</span><span class="token punctuation">}</span><span class="token keyword">echo</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">'hello'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//输出结果：helloworld</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意：</strong>可选参数必须放在必选参数的后面</p><h4><span id="han-shu-zhong-bian-liang-de-zuo-yong-yu">函数中变量的作用域</span><a href="#han-shu-zhong-bian-liang-de-zuo-yong-yu" class="header-anchor">.</a></h4><blockquote><p>通常情况下，为避免变量命名冲突，函数内的变量与函数外的变量不能互相访问</p><p>因此，变量在它的作用范围内才可以使用，这个作用范围称为变量的作用域。<br>其中，在函数中定义的变量称为局部变量，仅能在函数内使用，当函数执行完成后被释放；在函数外定义的变量称为全局变量，正常情况下仅可在函数外使用。</p></blockquote><p><strong>函数中使用全局变量的方法：</strong></p><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$var</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//在此处定义变量$var</span><span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string">'php'</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//在此处定义变量$str</span><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token comment" spellcheck="true">//方式一：利用global关键字取得全局变量</span>     <span class="token keyword">global</span> <span class="token variable">$var</span><span class="token punctuation">;</span>     <span class="token keyword">echo</span> <span class="token string">'全局变量$var：'</span><span class="token punctuation">.</span><span class="token variable">$var</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//方式二：利用$GLOBALS['变量名']访问</span>     <span class="token keyword">echo</span> <span class="token string">'全局变量$str：'</span><span class="token punctuation">.</span><span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string">'str'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="2-ke-bian-han-shu">2.可变函数</span><a href="#2-ke-bian-han-shu" class="header-anchor">.</a></h3><ul><li>PHP 支持可变函数，这意味着如果一个变量名后有圆括号，PHP 将寻找与变量的值同名的函数，并且尝试执行它。</li><li>值得一提的是，变量的值可以是用户自定义的函数名称，也可以是PHP内置的函数名称，但是变量的值必须是实际存在的函数的名称。</li></ul><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">echo</span> <span class="token string">'running....'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">$funcname</span> <span class="token operator">=</span> <span class="token string">'test'</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//定义变量，其值是函数的名称</span><span class="token keyword">echo</span> <span class="token variable">$funcname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//利用可变变量调用函数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>可变函数可以增加程序的灵活性，但是滥用可变函数会降低PHP代码的可读性，使程序逻辑难以理解，给代码的维护带来不便，所以在编程过程中尽量少用可变函数。</p></blockquote><h3><span id="3-ni-ming-han-shu">3.匿名函数</span><a href="#3-ni-ming-han-shu" class="header-anchor">.</a></h3><p>​    匿名函数就是没有函数名称的函数，也称作闭包函数，经常用作回调函数参数的值。对于临时定义的函数，使用匿名函数无需考虑函数命名冲突的问题。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//匿名函数的使用</span><span class="token variable">$sum</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//定义匿名函数</span>      <span class="token keyword">return</span> <span class="token variable">$a</span> <span class="token operator">+</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$sum</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//输出结果：300</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>需要注意的是，此种匿名函数调用的方式看似与可变函数的使用类似，但实际上不是，可通过var_dump()对匿名函数的变量进行打印输出，可以看到其数据类型为对象类型</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//匿名函数中使用 外部变量</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span><span class="token variable">$sum</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">)</span> <span class="token keyword">use</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token variable">$a</span> <span class="token operator">+</span> <span class="token variable">$b</span> <span class="token operator">+</span> <span class="token variable">$c</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$sum</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//输出结果：400</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>在匿名函数使用的外部变量需先在函数声明前进行定义<br>定义匿名函数时，添加use(变量名[,变量名])即可。</p></blockquote><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//匿名函数的其他用法</span><span class="token keyword">function</span> <span class="token function">calculate</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">,</span> <span class="token variable">$func</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token variable">$func</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">echo</span> <span class="token function">calculate</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token variable">$a</span> <span class="token operator">+</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//输出结果：300</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>匿名函数还可以作为函数的参数传递，实现回调函数。<br>极大增强了函数的灵活性。</p></blockquote><h3><span id="ke-bian-yu-ni-ming">可变与匿名</span><a href="#ke-bian-yu-ni-ming" class="header-anchor">.</a></h3><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//可变</span><span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"这是函数a"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token string">'a'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//a</span><span class="token keyword">echo</span> <span class="token variable">$b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//这是函数a</span><span class="token keyword">echo</span> <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//显示结果 ： string(1) "a"</span><span class="token keyword">echo</span> <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//显示结果 ： 这是函数aNULL</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//匿名函数</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token string">"这是匿名函数"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//这是个语句</span><span class="token keyword">echo</span> <span class="token variable">$b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//这是匿名函数</span><span class="token keyword">echo</span> <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//显示结果 object(Closure)#1 (0) {}</span><span class="token keyword">echo</span> <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//这是匿名函数NULL</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="shi-san-shu-zu">十三、数组</span><a href="#shi-san-shu-zu" class="header-anchor">.</a></h2><p>与java中数组不同</p><p>​    php的下标（键） 可以是 字符串类型</p><p>​    键和值之间 使用  =&gt; 连接数组</p><h3><span id="1-shu-zu-lei-xing">1.数组类型</span><a href="#1-shu-zu-lei-xing" class="header-anchor">.</a></h3><ul><li>索引数组：下标为整型的数组</li><li>关联数组：下标为字符串的数组</li></ul><img src="/2020/05/20/6418/image-20200520161848957.png" style="zoom:50%;"><h3><span id="2-ding-yi-shu-zu">2.定义数组</span><a href="#2-ding-yi-shu-zu" class="header-anchor">.</a></h3><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//定义索引数组</span><span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string">'one'</span><span class="token punctuation">,</span><span class="token string">'two'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">'one'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">'four'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//定义关联数组</span><span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string">'id'</span><span class="token operator">=</span><span class="token operator">></span><span class="token number">1</span> <span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">'lmk'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//定义空数组、混合型数组</span><span class="token variable">$empty</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$mixed</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'two'</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$mixed</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string">'one'</span><span class="token operator">=</span><span class="token operator">></span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">'two'</span><span class="token punctuation">,</span><span class="token string">'three'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//three 的键为3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>从PHP 5.4版本起，新增了定义数组的简写语法“[ ]”，使用 “[ ]”定义数组的语法与“array()”语法类似，书写更加方便。</p></blockquote><pre><code>$color = [&#39;red&#39;,&#39;blue&#39;]$arr = [&#39;one&#39;=&gt;1,&#39;two&#39;=&gt;2]</code></pre><blockquote><p>数组元素的下标只有整型和字符串两种类型，如果有其他类型，则会进行类型转换。<br>在PHP中合法的整数值下标会被自动的转换为整型下标。<br>若数组存在相同的下标时，后面的元素值会覆盖前面的元素值。</p></blockquote><h3><span id="3-fang-wen-shu-zu">3.访问数组</span><a href="#3-fang-wen-shu-zu" class="header-anchor">.</a></h3><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//定义数组</span><span class="token variable">$info</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'id'</span><span class="token operator">=</span><span class="token operator">></span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">'Tom'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//方式一：通过键名访问元素</span><span class="token keyword">echo</span> <span class="token variable">$info</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//输出结果：Tom</span><span class="token variable">$var</span> <span class="token operator">=</span> <span class="token string">'id'</span><span class="token punctuation">;</span>              <span class="token comment" spellcheck="true">//也可以使用变量的值作为键名</span><span class="token keyword">echo</span> <span class="token variable">$info</span><span class="token punctuation">[</span><span class="token variable">$var</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//输出结果：1</span><span class="token comment" spellcheck="true">//方式二：通过print_r()或var_dump()</span><span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$info</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//输出结果：Array( [id]=> 1 [name]=> Tom )</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$info</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//输出结果：array(2){ ["id"]=> int(1) ["name"]=> string(3)"Tom" }</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="4-shu-zu-fu-zhi">4.数组赋值</span><a href="#4-shu-zu-fu-zhi" class="header-anchor">.</a></h3><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//定义数组（此步骤也可以省略）</span><span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'PHP'</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//等价于：$arr[0] = 'PHP'</span><span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'Java'</span><span class="token punctuation">;</span>             <span class="token comment" spellcheck="true">//等价于：$arr[1] = 'Java'</span><span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'C语言'</span><span class="token punctuation">;</span>           <span class="token comment" spellcheck="true">//等价于：$arr[5] = 'C语言';</span><span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token string">'sub'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'iOS'</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//等价于：$arr['sub'] = 'iOS';</span><span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'HTML'</span><span class="token punctuation">;</span>              <span class="token comment" spellcheck="true">//等价于：$arr[6] = 'HTML'</span><span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'JavaScript'</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//修改数组，替换已经存在的元素</span><span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">'PHP'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">'Java'</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">'C语言'</span><span class="token punctuation">,</span> <span class="token string">'sub'</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">'iOS'</span><span class="token punctuation">,</span> <span class="token string">'6'</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">'JavaScript'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="5-shu-zu-shan-chu">5.数组删除</span><a href="#5-shu-zu-shan-chu" class="header-anchor">.</a></h3><p>unset()函数用于删除一个变量，也可以用于删除数组中的某个元素</p><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$color</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'red'</span><span class="token punctuation">,</span><span class="token string">'blue'</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">//删除数组单个元素</span><span class="token function">unset</span><span class="token punctuation">(</span><span class="token variable">$color</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$color</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//删除整个数组</span><span class="token function">unset</span><span class="token punctuation">(</span><span class="token variable">$color</span><span class="token punctuation">)</span><span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$color</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="6-shu-zu-bian-li">6、数组遍历</span><a href="#6-shu-zu-bian-li" class="header-anchor">.</a></h3><p>foreach（）语句</p><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$color</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'red'</span><span class="token punctuation">,</span><span class="token string">'blue'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//遍历 key value</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$color</span> <span class="token keyword">as</span> <span class="token variable">$key</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token variable">$key</span><span class="token punctuation">.</span><span class="token string">'-'</span><span class="token punctuation">.</span><span class="token variable">$value</span><span class="token punctuation">.</span><span class="token string">'  '</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">echo</span> <span class="token string">"\n"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//遍历 value</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$color</span> <span class="token keyword">as</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">echo</span> <span class="token variable">$value</span><span class="token punctuation">.</span><span class="token string">'  '</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="shi-si-php-nei-zhi-han-shu">十四、PHP内置函数</span><a href="#shi-si-php-nei-zhi-han-shu" class="header-anchor">.</a></h2><h4><span id="zi-fu-chuan-han-shu">字符串函数</span><a href="#zi-fu-chuan-han-shu" class="header-anchor">.</a></h4><table><thead><tr><th><strong>函数名</strong></th><th><strong>功能描述</strong></th></tr></thead><tbody><tr><td>strlen()</td><td>获取字符串的长度</td></tr><tr><td>strrpos()</td><td>获取指定字符串在目标字符串中最后一次出现的位置</td></tr><tr><td>str_replace()</td><td>用于字符串中的某些字符进行替换操作</td></tr><tr><td>substr()</td><td>用于获取字符串中的子串</td></tr><tr><td>explode()</td><td>使用一个字符串分割另一个字符串</td></tr><tr><td>implode()</td><td>用指定的连接符将数组拼接成一个字符串</td></tr><tr><td>trim()</td><td>去除字符串首尾处的空白字符（或指定成其他字符）</td></tr><tr><td>str_repeat()</td><td>重复一个字符串</td></tr></tbody></table><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//① 字符串分割成数组</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token string">'n'</span><span class="token punctuation">,</span> <span class="token string">'banana'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输出结果：array(3){ [0]=> string(2) "ba" [1]=> string(1) "a" [2]=> string(1) "a" }</span><span class="token comment" spellcheck="true">//② 分割时限制次数</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token string">'n'</span><span class="token punctuation">,</span> <span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输出结果：array(2){ [0]=> string(2) "ba" [1]=> string(3) "ana" }</span><span class="token comment" spellcheck="true">//③ 返回除了最后2个元素外的所有元素</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token string">'n'</span><span class="token punctuation">,</span> <span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输出结果: array(1){ [0]=> string(2) "ba" }</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4><span id="shu-zu-han-shu">数组函数</span><a href="#shu-zu-han-shu" class="header-anchor">.</a></h4><table><thead><tr><th><strong>函数名</strong></th><th><strong>功能描述</strong></th></tr></thead><tbody><tr><td>count()</td><td>用于计算数组中元素的个数</td></tr><tr><td>range()</td><td>用于建立一个包含指定范围单元的数组</td></tr><tr><td>sort()</td><td>对数组排序</td></tr><tr><td>rsort()</td><td>对数组逆向排序</td></tr><tr><td>ksort()</td><td>对数组按照键名排序</td></tr><tr><td>krsort()</td><td>对数组按照键名逆向排序</td></tr><tr><td>array_search()</td><td>在数组中搜索给定的值</td></tr><tr><td>array_unique()</td><td>移除数组中重复的值</td></tr><tr><td>array_column()</td><td>返回数组中指定的一列</td></tr><tr><td>array_keys()</td><td>返回数组中的键名</td></tr><tr><td>array_merge()</td><td>用于合并一个或多个数组</td></tr><tr><td>array_chunk()</td><td>可以将一个数组分割成多个</td></tr><tr><td>asort()</td><td>对数组进行排序并保持索引关系</td></tr><tr><td>arsort()</td><td>对数组进行逆向排序并保持索引关系</td></tr><tr><td>shuffle()</td><td>打乱数组顺序</td></tr><tr><td>array_reverse()</td><td>返回一个单元顺序相反的数组</td></tr><tr><td>array_rand ()</td><td>从数组中随机取出一个或多个单元</td></tr><tr><td>key()</td><td>从关联数组中取得键名</td></tr><tr><td>in_array()</td><td>检查数组中是否存在某个值</td></tr><tr><td>array_values ()</td><td>返回数组中所有的值</td></tr></tbody></table><h4><span id="shu-xue-han-shu">数学函数</span><a href="#shu-xue-han-shu" class="header-anchor">.</a></h4><table><thead><tr><th><strong>函数名</strong></th><th><strong>功能描述</strong></th></tr></thead><tbody><tr><td>abs()</td><td>绝对值</td></tr><tr><td>ceil()</td><td>向上取最接近的整数</td></tr><tr><td>floor()</td><td>向下取最接近的整数</td></tr><tr><td>fmod()</td><td>返回除法的浮点数余数</td></tr><tr><td>is_nan()</td><td>判断是否为合法数值</td></tr><tr><td>max()</td><td>返回最大值</td></tr><tr><td>min()</td><td>返回最小值</td></tr><tr><td>pi()</td><td>返回圆周率的值</td></tr><tr><td>pow()</td><td>返回x的y次方</td></tr><tr><td>sqrt()</td><td>平方根</td></tr><tr><td>round()</td><td>对浮点数进行四舍五入</td></tr><tr><td>rand()</td><td>返回随机整数</td></tr></tbody></table><h4><span id="ri-qi-han-shu">日期函数</span><a href="#ri-qi-han-shu" class="header-anchor">.</a></h4><p>Unix时间戳是一种时间表示方式，定义了从格林威治时间1970年01月01日00时00分00秒起至现在的总秒数。其中，1970年01月01日零点也叫作Unix纪元。</p><table><thead><tr><th><strong>函数名</strong></th><th><strong>功能描述</strong></th></tr></thead><tbody><tr><td>time()</td><td>返回当前的 Unix 时间戳</td></tr><tr><td>date()</td><td>格式化一个本地时间／日期</td></tr><tr><td>mktime()</td><td>取得一个日期的 Unix 时间戳</td></tr><tr><td>strtotime()</td><td>将字符串转化成Unix时间戳</td></tr><tr><td>microtime()</td><td>返回当前 Unix 时间戳和微秒数</td></tr></tbody></table><p>date()函数第1个参数表示格式化日期时间的样式<br>date()函数第2个参数表示待格式化的时间戳，省略时表示格式化当前时间戳。</p><table><thead><tr><th>Y</th><th>4位数字表示的完整年份，如1998、2015</th></tr></thead><tbody><tr><td>m</td><td>数字表示的月份，有前导零，返回值01~12</td></tr><tr><td>d</td><td>月份中的第几天，有前导零，返回值01~31</td></tr><tr><td>H</td><td>小时，24小时格式，有前导零，返回值00~23</td></tr><tr><td>i</td><td>有前导零的分钟数，返回值00~59</td></tr><tr><td>s</td><td>有前导零的秒数，返回值00~59</td></tr></tbody></table><p><a href="http://www.php.net/manual/zh/index.php" target="_blank" rel="noopener">php手册</a></p><p><a href="http://www.php.net/manual/zh/index.php" target="_blank" rel="noopener" style="position:fixed;top:50%;left:90%;text-decoration:none;font-size:25px;color:violet;background-color:yellow">PHP手册</a></p><h2><span id="shi-wu-bao-han-yu-ju">十五、包含语句</span><a href="#shi-wu-bao-han-yu-ju" class="header-anchor">.</a></h2><p>可以从另一个文件中将代码包含进来。使用包含语句不仅可以提高代码的重用性，还可以提高代码的维护和更新的效率。</p><p><strong>PHP提供的包含语句</strong></p><ul><li>Include</li><li>Require</li><li>Include_once</li><li>require_once</li></ul><h4><span id="include-yu-ju-qi-ta-yu-ju-yu-fa-lei-si">Include语句（其他语句语法类似）</span><a href="#include-yu-ju-qi-ta-yu-ju-yu-fa-lei-si" class="header-anchor">.</a></h4><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//第一种写法</span><span class="token keyword">include</span> <span class="token string">'文件路径'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//第二种写法</span><span class="token keyword">include</span><span class="token punctuation">(</span><span class="token string">'文件路径'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>require语句与include语句的异同点：</strong></p><ul><li>相同点：<ul><li>require语句与include语句的功能类似，都可以用于包含文件。</li></ul></li><li>不同点：<ul><li>在包含文件时，如果没有找到文件，include语句会<strong>发生警告信息，程序继续运行</strong>。</li><li>在包含文件时，如果没有找到文件， require语句会<strong>发生致命错误，程序停止运行</strong>。</li></ul></li></ul><p><strong>带_once与不带_once语句的区别：</strong></p><ul><li>include_once、require_once语句，与include、require的作用几乎相同</li><li>带_once的语句会<strong>先检查要包含的文件是否已经被包含过，避免了同一文件被重复的包含</strong>。</li></ul><h1><span id="web-jiao-hu">Web交互</span><a href="#web-jiao-hu" class="header-anchor">.</a></h1><h2><span id="1-get-chuan-can">1.get传参</span><a href="#1-get-chuan-can" class="header-anchor">.</a></h2><p>​        在使用PHP函数时，一个函数可以接收多个参数。同理，PHP脚本文件也可以接收参数，其传递参数的方式是通过URL地址实现的。</p><pre><code>http://www.bxg.com/test.php?name=Tom&amp;age=12</code></pre><blockquote><p>文件名test.php后面从“?”开始的部分就是传递的GET参数<br>name和age是参数的名称<br>Tom和12是相应的参数值<br>多个参数之间使用“&amp;”进行分隔。</p></blockquote><h2><span id="2-web-biao-dan">2.Web表单</span><a href="#2-web-biao-dan" class="header-anchor">.</a></h2><p>​        在实现浏览器向服务器发送数据时，除了用URL传递参数，还可以使用Web表单来实现。</p><p>​        在表单中的提交方式中，“method=post”表示表单以POST方式提交，当省略“method”属性时默认以GET方式提交。<br>​        相比GET方式，POST方式提交的数据是不可见的，在交互时相对安全，因此通常情况下使用POST方式提交表单数据。</p><p>表单：略（HTML5的内容）</p><h2><span id="3-huo-qu-wai-bu-shu-ju">3.获取外部数据</span><a href="#3-huo-qu-wai-bu-shu-ju" class="header-anchor">.</a></h2><p>​        当PHP收到来自浏览器的外部数据后，会自动保存到超全局变量数组中。超全局变量是PHP中预定义好的变量，可以在PHP脚本的任何位置使用。<br>​        常见的超全局变量有“$_GET、$_POST”等，通过GET方式提交的数据会保存到$_GET数组中，通过POST方式提交的数据会保存到$_POST数组中。<br>$_GET和$_POST的使用完全相同，接下来以$_POST为例进行详细讲解。</p><h4><span id="cha-kan-lai-zi-biao-dan-ti-jiao-de-shu-ju">查看来自表单提交的数据</span><a href="#cha-kan-lai-zi-biao-dan-ti-jiao-de-shu-ju" class="header-anchor">.</a></h4><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$_POST</span>实际上就是一个数组，其用法和普通数组没有区别。<span class="token comment" spellcheck="true">//输出所有的元素</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//输出指定元素</span><span class="token keyword">echo</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4><span id="pan-duan-biao-dan-shu-ju-shi-fou-cun-zai">判断表单数据是否存在</span><a href="#pan-duan-biao-dan-shu-ju-shi-fou-cun-zai" class="header-anchor">.</a></h4><p>​        用户通过POST方式进行表单提交时，若没有添加任何数据，则$_POST中就没有相应的数组元素。因此在取出数组元素之前，应该先判断数组中是否有这个元素</p><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">//获取$_POST中的name元素，没有时默认为空字符串</span><span class="token variable">$name</span> <span class="token operator">=</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>isset()用于判断变量或数组元素是否存在<br>存在时返回true<br>不存在时返回false</p></blockquote><h4><span id="pan-duan-shu-ju-shi-fou-wei-kong">判断数据是否为空</span><a href="#pan-duan-shu-ju-shi-fou-wei-kong" class="header-anchor">.</a></h4><p>empty()</p><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//没有收到name，或name的值为空</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>用empty()函数判断数组元素是否为空，为空时返回true，元素不存在时也返回true。</p></blockquote><h4><span id="guo-lu-wai-bu-shu-ju">过滤外部数据</span><a href="#guo-lu-wai-bu-shu-ju" class="header-anchor">.</a></h4><p>​        在开发 PHP 程序时，为了便于调试，会将用户输入的内容直接显示到网页中。但是当网站上线时，如果不对用户的输入进行任何过滤，会带来安全风险。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span></span>用户名： <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span></span><span class="token delimiter">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token delimiter">?></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></span>来访时间： <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span></span><span class="token number">2015</span><span class="token operator">-</span><span class="token number">03</span><span class="token operator">-</span><span class="token number">18</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></span>上述代码将一个来自 <span class="token constant">POST</span> 方式提交的 username 字段直接输出到网页中。如果用户输入“<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></span>”，那么网页结构会遭到破坏。如果用户输入<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span></span>标记和 JavaScript 代码，那么这些代码也会被浏览器执行，从而威胁到网站的安全。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>nl2br()函数</p><p>nl2br()函数可以将字符串中的“\n”转换成HTML换行符。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">echo</span> <span class="token function">nl2br</span><span class="token punctuation">(</span><span class="token string">"12\n34"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//输出结果：12</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span></span><span class="token number">34</span>    <span class="token function">nl2br</span><span class="token punctuation">(</span><span class="token punctuation">)</span>函数的第二个参数用于设置使用<span class="token constant">XHTML</span>兼容换行符，默认值为<span class="token boolean">true</span>。   当第二个参数设置为<span class="token boolean">false</span>时，会将字符串中的“\<span class="token package">n</span>”转换成<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span></span>，否则转换为<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span></span>。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><ul><li><p>trim()函数</p><p>trim()函数可以去除字符串左右两端的空白字符，包括空格、换行和制表符等。</p></li><li><p>intval()函数</p><p>intval()函数可以将字符串转换为整型。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">echo</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token string">'123abc'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//输出结果：123</span><span class="token keyword">echo</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token string">' 123abc'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//输出结果：123</span><span class="token keyword">echo</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token string">'abc123'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//输出结果：0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>strip_tags()函数</p><p>strip_tags()函数可以去除字符串中的“&lt; &gt;”标签。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">echo</span> <span class="token function">strip_tags</span><span class="token punctuation">(</span><span class="token string">'&lt;b>测试&lt;/b>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//输出结果：“测试”</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>htmlspecialchars函数</p><p>htmlspecialchars()函数可以将字符串中的 HTML 特殊字符转换为 HTML 实体字符，从而防止被浏览器解析。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token keyword">echo</span> <span class="token function">htmlspecialchars</span><span class="token punctuation">(</span><span class="token string">'&lt;测试>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">//输出结果：“&amp;lt;测试&amp;gt;”</span><span class="token keyword">echo</span> <span class="token function">htmlspecialchars</span><span class="token punctuation">(</span><span class="token string">'&lt;b>测试&lt;/b>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//输出结果：“&amp;lt;b&amp;gt;测试&amp;lt;/b&amp;gt;”</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h4><span id="get-chuan-can-chu-li">GET传参处理</span><a href="#get-chuan-can-chu-li" class="header-anchor">.</a></h4><p>在通过URL地址传递参数时，特殊字符在URL中直接书写可能会出现问题。</p><p>例如，“&amp;”符号已经被作为参数分隔符，如果参数值中也出现该符号，就会被误识别为分隔符。    </p><p>因此，当通过PHP输出一段带有GET参数的URL地址时，最好使用<strong>urlencode()</strong>函数对GET参数进行编码</p><pre class="line-numbers language-php"><code class="language-php"><span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string">'A&amp;B C'</span><span class="token punctuation">;</span><span class="token variable">$name</span> <span class="token operator">=</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//URL编码</span><span class="token keyword">echo</span> "http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//www.bxg.com/test.php?name=$name";</span>http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//www.bxg.com/test.php?name=A%26B+C</span>在通过<span class="token variable">$_GET</span>接收参数时，获得的数据已经是<span class="token constant">URL</span>解码后的结果，无需手动进行<span class="token constant">URL</span>解码。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器的配置</title>
      <link href="/2020/05/19/15935.html"/>
      <url>/2020/05/19/15935.html</url>
      
        <content type="html"><![CDATA[<h1><span id="pei-zhi-hu-lian-wang">配置互联网</span><a href="#pei-zhi-hu-lian-wang" class="header-anchor">.</a></h1><ul><li>在互联网中，搭建一个上线网站：需要域名和IP地址。</li><li>在开发阶段，搭建一个网站：只需要网站域名，使网站能够在本机与局域网内被访问就足够了。</li></ul><h2><span id="1-pei-zhi-wang-zhan-yu-ming">1.配置 网站域名</span><a href="#1-pei-zhi-wang-zhan-yu-ming" class="header-anchor">.</a></h2><ul><li><h3><span id="da-kai-c-windows-system32-drivers-etc-xia-de-hosts-wen-jian-pei-zhi-ip-di-zhi-yu-yu-ming-de-ying-she-guan-xi">打开‘C:/windows/system32/drivers/etc’ 下的hosts文件 配置IP地址 与 域名的映射关系</span><a href="#da-kai-c-windows-system32-drivers-etc-xia-de-hosts-wen-jian-pei-zhi-ip-di-zhi-yu-yu-ming-de-ying-she-guan-xi" class="header-anchor">.</a></h3></li></ul><p><img src="/2020/05/19/15935/image-20200519210848527.png" alt="hosts"></p><ul><li><h3><span id="pei-zhi-xu-ni-zhu-ji">配置虚拟主机</span><a href="#pei-zhi-xu-ni-zhu-ji" class="header-anchor">.</a></h3><ul><li><p>虚拟主机是Apache提供的一个功能，通过虚拟主机可以在一台服务器上部署多个网站。</p></li><li><p>通常一台服务器的IP地址是固定的，而不同的域名可以解析到同一个IP地址。<br>因此当用户使用不同的域名访问同一台服务器时，<strong>虚拟主机功能可以使用户访问到不同的网站</strong>。</p><h4><span id="1-geng-gai-hosts-wen-jian">1.更改hosts文件</span><a href="#1-geng-gai-hosts-wen-jian" class="header-anchor">.</a></h4><p><img src="/2020/05/19/15935/image-20200519211638922.png" alt></p><h4><span id="2-qi-dong-fu-pei-zhi-wen-jian">2.启动辅配置文件</span><a href="#2-qi-dong-fu-pei-zhi-wen-jian" class="header-anchor">.</a></h4><p>​        辅配置文件是Apache配置文件httpd.conf的扩展文件，用于将一部分配置抽取出来便于修改</p><p>​        1.打开httpd.conf文件，找到如下所示的一行配置，取消注释即可</p><blockquote><p>#Include conf/extra/httpd-vhosts.conf    # 取消注释</p></blockquote><p><img src="/2020/05/19/15935/image-20200519212146910.png" alt></p><p>​        2.打开“conf/extra/httpd-vhosts.conf”虚拟主机配置文件，将文件中原有的配置全部注释起来，然后重新编写如下的配置</p><pre><code>&lt;VirtualHost *:80&gt;      DocumentRoot &quot;G:/phpEnv/www&quot;      ServerName www.test.com&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt;      DocumentRoot &quot;G:/phpEnv/www/bxg&quot;      ServerName bxg.test.com&lt;/VirtualHost&gt;&lt;VirtualHost *:80&gt;      DocumentRoot &quot;G:/phpEnv/www/admin&quot;    ServerName www.admin.com&lt;/VirtualHost&gt;</code></pre></li></ul><p><img src="/2020/05/19/15935/image-20200519212856180.png" alt></p><p>​            3.创建文件夹</p><p>  ​                创建文件夹  G:/phpEnv/www/bxg ，并在文件夹中放一个简        单的网页，然后重启Apache使配置文件生效</p><p>  ​            <img src="/2020/05/19/15935/image-20200519214204073.png" alt></p></li><li><h3><span id="fang-wen-quan-xian-kong-zhi">访问权限控制</span><a href="#fang-wen-quan-xian-kong-zhi" class="header-anchor">.</a></h3><ul><li>Apache可以控制服务器中的哪些路径允许被外部访问。<br>在httpd.conf中，默认站点目录“htdocs”已经配置为允许外部访问，</li></ul></li><li><p>如果要将其他目录也允许访问时，需要手动通过<directory>指令进行配置。</directory></p><ul><li>Require local   ：只允许本地访问</li><li>Require all granted    ： 允许所有的访问</li><li>Require all denied   ：   拒绝所有的访问</li></ul></li><li><h3><span id="fen-bu-shi-pei-zhi-wen-jian">分布式配置文件</span><a href="#fen-bu-shi-pei-zhi-wen-jian" class="header-anchor">.</a></h3><p>​       分布式配置文件是为目录单独进行配置的文件，可以实现在<strong>不重启服务器</strong>的前提下更<strong>改某个目录的配置</strong>。</p><h4><span id="1-kai-qi-fen-bu-shi-pei-zhi-wen-jian">1.开启分布式配置文件</span><a href="#1-kai-qi-fen-bu-shi-pei-zhi-wen-jian" class="header-anchor">.</a></h4><p>​    开启时，打开配置文件“httpd-vhosts.conf”，添加如下配置。</p><p>​    </p><pre><code>&lt;Directory &quot;G:/phpEnv/www/admin&quot;&gt;      Require local      AllowOverride All&lt;/Directory&gt;</code></pre><ul><li>开启分布式配置文件 ： AllowOverride All</li><li>关闭分布式配置文件 :    AllowOverride None</li></ul><h4><span id="2-chuang-jian-fen-bu-shi-pei-zhi-wen-jian">2.创建分布式配置文件</span><a href="#2-chuang-jian-fen-bu-shi-pei-zhi-wen-jian" class="header-anchor">.</a></h4><ul><li>在站点目录中创建名为“.htaccess”文件，该文件中的配置将会<strong>覆盖原有</strong>的目录配置。分布式配置文件中可以直接编写<directory>中的大部分的配置。</directory></li></ul></li><li><h3><span id="mu-lu-liu-lan-gong-neng">目录浏览功能</span><a href="#mu-lu-liu-lan-gong-neng" class="header-anchor">.</a></h3><ul><li><p>当开启Apache目录浏览功能时，如果访问的目录中没有默认索引页（如index.html），就会显示目录中的文件列表。</p></li><li><p>实现方式有两种：一种是在配置文件中的<directory>开启；另一种是在分布式配置文件中开启。<br>下面以分布式配置文件为例，进行讲解。</directory></p><h4><span id="zai-mu-lu-g-phpenv-www-admin-zhong-chuang-jian-wen-jian-htaccess-tian-jia-ru-xia-pei-zhi">在目录“G:/phpEnv/www/admin/”中创建文件“.htaccess”，添加如下配置</span><a href="#zai-mu-lu-g-phpenv-www-admin-zhong-chuang-jian-wen-jian-htaccess-tian-jia-ru-xia-pei-zhi" class="header-anchor">.</a></h4><pre><code># 当www/admmin目录下没有该文件时,实现目录预览Options Indexes#上线后关闭</code></pre><p><img src="/2020/05/19/15935/image-20200519231302360.png" alt></p></li></ul></li><li><h3><span id="zi-ding-yi-cuo-wu-ye-mian">自定义错误页面</span><a href="#zi-ding-yi-cuo-wu-ye-mian" class="header-anchor">.</a></h3><p>​        在Web开发中，HTTP状态码用于表示Web服务器的响应状态，由3位数字组成。常见的HTTP状态码有</p><p>403（Forbidden，拒绝访问）<br>404（Not Found，页面未找到）<br>500（Internal Server Error，服务器内部错误</p><ul><li><p>在分布式配置文件中，添加以下配置：</p><p><code>/ : Apache安装的root目录</code></p></li></ul></li></ul><pre><code>ErrorDocument 403 /403.htmlErrorDocument 404 /404.htmlErrorDocument 500 /500.html</code></pre><ul><li><h3><span id="jie-jue-bian-ma-wen-ti">解决编码问题</span><a href="#jie-jue-bian-ma-wen-ti" class="header-anchor">.</a></h3><ul><li><p>HTML方式</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>PHP方式</p><pre class="line-numbers language-php"><code class="language-php"><span class="token shell-comment comment">#第一种</span><span class="token shell-comment comment">#在使用PHP输出中文之前，通过HTTP响应消息告知浏览器当前网页的编码</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">'content-type:text/html;charset=utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php"><code class="language-php"><span class="token shell-comment comment">#第二种</span><span class="token shell-comment comment">#在PHP的配置文件php.ini中，通过“default_charset”可以设置默认编码</span>default_charset <span class="token operator">=</span> <span class="token string">"UTF-8"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li><li><h3><span id="kai-qi-php-kuo-zhan">开启PHP扩展</span><a href="#kai-qi-php-kuo-zhan" class="header-anchor">.</a></h3><ul><li><p>在PHP的安装目录中，“ext”文件夹保存的是PHP的扩展。</p></li><li><p>在安装后的默认情况下，PHP扩展是全部关闭的，用户可以根据情况手动打开或关闭扩展。</p></li><li><p>在php.ini中，“extension”用于载入扩展。</p><p><strong>列举PHP中的常用扩展</strong></p><blockquote><p>extension=php_curl.dll<br>extension=php_gd2.dll<br>extension=php_mbstring.dll<br>extension=php_mysql.dll<br>extension=php_mysqli.dll<br>extension=php_pdo_mysql.dll</p></blockquote></li></ul></li></ul><h5><span id="zhu-yi-php-de-curl-kuo-zhan-zai-php-ini-zhong-kai-qi-hou-huan-bu-neng-shi-yong-xu-yao-zai-apache-pei-zhi-wen-jian-httpd-conf-zhong-jin-xing-pei-zhi">注意：PHP的CURL扩展在php.ini中开启后还不能使用，需要在Apache配置文件“httpd.conf”中进行配置。</span><a href="#zhu-yi-php-de-curl-kuo-zhan-zai-php-ini-zhong-kai-qi-hou-huan-bu-neng-shi-yong-xu-yao-zai-apache-pei-zhi-wen-jian-httpd-conf-zhong-jin-xing-pei-zhi" class="header-anchor">.</a></h5><pre><code>LoadFile &quot;G:/phpEnv/www/php7/libssh2.dll&quot;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> 安装和配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> apache </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>front-matter</title>
      <link href="/2020/05/18/8768.html"/>
      <url>/2020/05/18/8768.html</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th align="center">配置选项</th><th align="center">默认值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">title（必写）</td><td align="center">Markdown的文件标题</td><td align="center">文章标题</td></tr><tr><td align="center">date（必写）</td><td align="center">文件创建时的日期时间</td><td align="center">发布时间</td></tr><tr><td align="center"></td><td align="center">文件更新的日期时间</td><td align="center">更新时间</td></tr><tr><td align="center">layout</td><td align="center"></td><td align="center">布局</td></tr><tr><td align="center">permalink</td><td align="center"></td><td align="center">覆盖文章网址</td></tr><tr><td align="center">comments</td><td align="center">true</td><td align="center">开启文章评论功能</td></tr><tr><td align="center">author</td><td align="center">hexo的_config.xml中的author</td><td align="center">文章作者</td></tr><tr><td align="center">img</td><td align="center">featureImages中的某个值</td><td align="center"></td></tr><tr><td align="center">top</td><td align="center">true</td><td align="center">推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td align="center">cover</td><td align="center"><code>false</code></td><td align="center">表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td align="center">coverImg</td><td align="center">无</td><td align="center">表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td align="center">password</td><td align="center">无</td><td align="center">文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td align="center">toc</td><td align="center"><code>true</code></td><td align="center">是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td align="center">mathjax</td><td align="center"><code>false</code></td><td align="center">是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td align="center">summary</td><td align="center">无</td><td align="center">文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td align="center">categories</td><td align="center">无</td><td align="center">文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td align="center">tags</td><td align="center">无</td><td align="center">文章标签，一篇文章可以多个标签</td></tr></tbody></table><p>注意:</p><blockquote><p>如果 img 属性不填写的话，文章特色图会根据文章标题的 hashcode 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图各有特色。<br>date 的值尽量保证每篇文章是唯一的，因为本主题中 Gitalk 和 Gitment 识别 id 是通过 date 的值来作为唯一标识的。<br>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 _config.yml 中激活了配置。有些在线的 SHA256 加密的地址，可供使用：开源中国在线工具、chahuo、站长工具。</p></blockquote><p>参考<a href="https://blog.csdn.net/jspnetcn/article/details/104111651" target="_blank" rel="noopener">https://blog.csdn.net/jspnetcn/article/details/104111651</a></p><p>hexo官方文档</p>]]></content>
      
      
      <categories>
          
          <category> 文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> front-matter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo官方文档</title>
      <link href="/2020/05/18/50613.html"/>
      <url>/2020/05/18/50613.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo官方文档</a></p>]]></content>
      
      
      <categories>
          
          <category> 文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php在win下的环境搭建</title>
      <link href="/2020/05/18/16407.html"/>
      <url>/2020/05/18/16407.html</url>
      
        <content type="html"><![CDATA[<h2><span id="windows-xia-php-huan-jing-da-jian-apache2-4-php7-3-18">windows下php环境搭建 Apache2.4 + php7.3.18</span><a href="#windows-xia-php-huan-jing-da-jian-apache2-4-php7-3-18" class="header-anchor">.</a></h2><h3><span id="yi-apache4-2-an-zhuang-he-pei-zhi">一、Apache4.2 安装和配置</span><a href="#yi-apache4-2-an-zhuang-he-pei-zhi" class="header-anchor">.</a></h3><p><strong>下载地址:</strong>  <a href="http://www.apachelounge.com/download/" target="_blank" rel="noopener">http://www.apachelounge.com/download/</a><br>    <a href="https://www.apachehaus.com/cgi-bin/download.plx/" target="_blank" rel="noopener">https://www.apachehaus.com/cgi-bin/download.plx/</a>  </p><h4><span id="yi-shang-liang-ge-lian-jie-du-ke-yi-xia-zai">以上两个链接都可以下载</span><a href="#yi-shang-liang-ge-lian-jie-du-ke-yi-xia-zai" class="header-anchor">.</a></h4><ul><li><p>在界面中vc15 vc16等之间的差异,vc15是指用vs2014编译的代码,vc16是指vs2015编译的代码 </p><img src="/2020/05/18/16407/apache_1.png" style="zoom:50%;"><p>​    <img src="/2020/05/18/16407/apache_2.png" style="zoom:50%;"></p><h4><span id="apache-an-zhuang-mu-lu-jie-gou">apache安装目录结构</span><a href="#apache-an-zhuang-mu-lu-jie-gou" class="header-anchor">.</a></h4></li></ul><table><thead><tr><th><strong>目录名</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>bin</td><td>Apache可执行文件目录，如httpd.exe、ApacheMonitor.exe等</td></tr><tr><td>cig-bin</td><td>CGI网页程序目录</td></tr><tr><td>conf</td><td>Apache配置文件目录</td></tr><tr><td>htdocs</td><td>默认站点的网页文档目录</td></tr><tr><td>logs</td><td>Apache日志文件目录，主要包括访问日志access.log和错误日志error.log</td></tr><tr><td>manual</td><td>Apache帮助手册目录</td></tr><tr><td>modules</td><td>Apache动态加载模块目录</td></tr></tbody></table><h5><span id="an-zhuang-pei-zhi">安装 配置：</span><a href="#an-zhuang-pei-zhi" class="header-anchor">.</a></h5><p>将已经下载好的压缩包解压到你想要的安装的目录下，如<strong>G:/phpEnv</strong>目录下，这里以<strong>G:/phpEnv/Apache24</strong>为例</p><p>1.<strong>使用文本编辑器</strong>    编辑G:/phpEnv/Apache24/conf/<strong>httpd.conf</strong>文件</p><h6><span id="zhu-yi-windows-huan-jing-xia-pei-zhi-wen-jian-suo-you-de-gai-wei">注意：windows环境下,配置文件所有的 ‘ \ ’ 改为 ‘ / ’</span><a href="#zhu-yi-windows-huan-jing-xia-pei-zhi-wen-jian-suo-you-de-gai-wei" class="header-anchor">.</a></h6><ul><li><p>配置安装目录</p><p>更改内容 为ServerRoot “G:/phpEnv/Apache24” </p><h6><span id="mu-lu-gen-ju-zi-ji-an-zhuang-mu-lu-xiu-gai">目录根据自己安装目录修改</span><a href="#mu-lu-gen-ju-zi-ji-an-zhuang-mu-lu-xiu-gai" class="header-anchor">.</a></h6><p><img src="/2020/05/18/16407/apache_3.png" alt></p></li><li><p>配置服务器域名 </p><p>更改内容 为ServerName localhost:80</p></li></ul><h6><span id="zhu-yi-bi-xu-ba-qian-mian-de-qu-diao">注意必须把前面的 ‘ # ’去掉</span><a href="#zhu-yi-bi-xu-ba-qian-mian-de-qu-diao" class="header-anchor">.</a></h6><p>  <img src="/2020/05/18/16407/apache_4.png" alt></p><h6><span id="dang-duan-kou-bei-zhan-yong-shi-jiang-duan-kou-hao-xiu-gai-wei-qi-ta-zhi">当端口被占用时 将端口号修改为其他值</span><a href="#dang-duan-kou-bei-zhan-yong-shi-jiang-duan-kou-hao-xiu-gai-wei-qi-ta-zhi" class="header-anchor">.</a></h6><p><img src="/2020/05/18/16407/image-20200518122028162.png" alt></p><ul><li><p>配置站点的网页文档目录</p><p>  更改内容 为<br>  <img src="/2020/05/18/16407/image-20200518122455739.png" alt></p></li></ul><p>2.<strong>使用cmd(管理员) cd到Apache安装目录的bin文件夹下</strong>  </p><ul><li><p>安装apache服务，并加入到系统服务中</p><h6><span id="zhu-yi-cmd-guan-li-yuan-zai-apache-an-zhuang-mu-lu-de-bin-mu-lu-xia-cao-zuo">注意：cmd管理员 在apache安装目录的bin目录下 操作</span><a href="#zhu-yi-cmd-guan-li-yuan-zai-apache-an-zhuang-mu-lu-de-bin-mu-lu-xia-cao-zuo" class="header-anchor">.</a></h6><blockquote><p>httpd -k install</p></blockquote><p>  <img src="/2020/05/18/16407/image-20200518124207693.png" alt></p><p>  Errors reported here must be corrected before the service can be started<br>  <code>若该句话后面有错误信息，则表示服务安装失败，需要先改正错误。若没有，则成功</code>  </p></li><li><p>启动apache服务: <strong>两种方式</strong></p><ol><li><p>cmd命令行 依然需要 管理员权限</p><blockquote><p>httpd -k start</p></blockquote></li><li><p>可以使用bin文件夹下的 ApacheMonitor.exe启动   双击该程序<br><img src="/2020/05/18/16407/image-20200518125553982.png" alt></p><p><img src="/2020/05/18/16407/image-20200518161849303.png" alt></p><p>启动后浏览器地址栏输入 localhost </p><p><img src="/2020/05/18/16407/image-20200518124318456.png" alt></p></li></ol></li></ul><h3><span id="bu-chong-apache-fu-wu-xie-zai">补充Apache服务卸载:</span><a href="#bu-chong-apache-fu-wu-xie-zai" class="header-anchor">.</a></h3><blockquote><p>httpd.exe -k uninstall </p></blockquote><p><img src="/2020/05/18/16407/image-20200518124419438.png" alt="image-20200518124419438"></p><h3><span id="bu-chong-apache-chang-yong-pei-zhi">补充Apache常用配置</span><a href="#bu-chong-apache-chang-yong-pei-zhi" class="header-anchor">.</a></h3><h6><span id="xu-yao-zhu-yi-de-shi-yi-dan-xiu-gai-cuo-wu-hui-zao-cheng-apache-wu-fa-an-zhuang-huo-wu-fa-qi-dong-jian-yi-zai-xiu-gai-qian-xian-bei-fen-httpd-conf-pei-zhi-wen-jian">需要注意的是，一旦修改错误，会造成Apache无法安装或无法启动，建议在修改前先备份“httpd.conf”配置文件。</span><a href="#xu-yao-zhu-yi-de-shi-yi-dan-xiu-gai-cuo-wu-hui-zao-cheng-apache-wu-fa-an-zhuang-huo-wu-fa-qi-dong-jian-yi-zai-xiu-gai-qian-xian-bei-fen-httpd-conf-pei-zhi-wen-jian" class="header-anchor">.</a></h6><table><thead><tr><th><strong>配置项</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>ServerRoot</td><td>Apache服务器的根目录，即安装目录</td></tr><tr><td>Listen</td><td>服务器监听的端口号，如80、8080</td></tr><tr><td>LoadModule</td><td>需要加载的模块</td></tr><tr><td>ServerAdmin</td><td>服务器管理员的邮箱地址</td></tr><tr><td>ServerName</td><td>服务器的域名</td></tr><tr><td>DocumentRoot</td><td>网站根目录</td></tr><tr><td>ErrorLog</td><td>用于记录错误日志</td></tr></tbody></table><h3><span id="bu-chong-wo-yu-dao-de-cuo-wu">补充我遇到的错误</span><a href="#bu-chong-wo-yu-dao-de-cuo-wu" class="header-anchor">.</a></h3><blockquote><p><strong>错误1</strong><br>(OS 1783)占位程序接收到错误数据。  : AH00370: Failed to create the ‘localhost’ service<br><img src="/2020/05/18/16407/apache_6.png" alt><br><strong>出错原因:</strong> 服务安装被360软件拦截<br><strong>解决方法:</strong> 关掉360一类的安全软件</p></blockquote><blockquote><p><strong>错误2</strong><br>AH00558: httpd.exe: Could not reliably determine the server’s fully qualified domain name, using fe80::8566:6b7a:4dc2:6593. Set the ‘ServerName’ directive globally to suppress this message<br><img src="/2020/05/18/16407/apache_6.png" alt><br><strong>出错原因:</strong> Apache配置文件中 缺少ServerName的信息(httpd.conf中ServerName之前 ‘ # ’删掉)<br><strong>解决方法:</strong> 删除 ServerName前的‘ # ’</p></blockquote><hr><h3><span id="er-php-an-zhuang-he-pei-zhi">二、PHP安装和配置</span><a href="#er-php-an-zhuang-he-pei-zhi" class="header-anchor">.</a></h3><p><strong>下载地址：</strong><br><a href="https://windows.php.net/download#php-7.3" target="_blank" rel="noopener">https://windows.php.net/download#php-7.3</a></p><h6><span id="zhu-yi-xia-zai-xian-cheng-an-quan-ban">注意下载线程安全版</span><a href="#zhu-yi-xia-zai-xian-cheng-an-quan-ban" class="header-anchor">.</a></h6><p><img src="/2020/05/18/16407/image-20200518130511074.png" alt></p><h6><span id="php-mu-lu-jie-gou-jie-xi">php目录结构解析</span><a href="#php-mu-lu-jie-gou-jie-xi" class="header-anchor">.</a></h6><p>​    ext是PHP扩展文件所在的目录<br>​    php.exe是PHP的命令行应用程序<br>​    php7apache2_4.dll是用于Apache的DLL模块<br>​    php.ini-development是PHP预设的配置模板，适用于开发环境<br>​    php.ini-production也是配置模板，适合网站上线时使用</p><h4><span id="an-zhuang-he-pei-zhi">安装和配置：</span><a href="#an-zhuang-he-pei-zhi" class="header-anchor">.</a></h4><ul><li><p>解压压缩包到  <strong>G:\phpEnv\php</strong>下</p></li><li><p>创建php.ini：将php目录下<strong>php.ini-development</strong>拷贝更名为 <strong>php.ini</strong>(php配置文件)</p></li><li><p>配置扩展目录：打开php.ini</p><p>  ​    更改内容 ；extension_dir=”ext”  ==&gt;  extension_dir=”php扩展目录” </p><p>  <img src="/2020/05/18/16407/image-20200518133933051.png" alt="image-20200518133933051"></p></li><li><p>配置PHP时区： 打开php.ini      PRC:中国时区 UTC：协调世界时</p><p>  更改内容 ;date.timezone =      ==&gt;       data.timezone = PRC <img src="/2020/05/18/16407/image-20200518134717384.png" alt="image-20200518134717384"></p></li><li><p>在<strong>apache的httpd.conf</strong>文件中做以下 ==添加内容==</p></li></ul><pre><code>    PHPIniDir &quot;G:/phpEnv/php/&quot;  #根据实际路径修改    LoadModule php7_module &quot;G:/phpEnv/php/php7apache2_4.dll&quot; #根据实际路径修改    &lt;FilesMatch &quot;\.php$&quot;&gt;    setHandler application/x-httpd-php    &lt;/FilesMatch&gt;   ![](image-20200518130816954.png)</code></pre><ul><li><p>修改索引页 ： 打开httpd.conf  </p><pre><code>#添加 index.php&lt;IfModule dir_module&gt;    DirectoryIndex index.html index.php&lt;/IfModule&gt;</code></pre></li><li><p>测试 php是否安装成功</p><p>在网页目录(下面这个目录)下 新建文件 phpinfo.php</p><p><img src="/2020/05/18/16407/image-20200518122455739.png" alt></p><pre><code># phpinfo.php 文件内容&lt;?php    phpinfo();?&gt;</code></pre><p>完成后，在浏览器中访问<a href="http://localhost/phpinfo.php" target="_blank" rel="noopener">http://localhost/phpinfo.php</a> 出现以下成功 </p><h6><span id="zhu-yi-xian-chong-qi-fu-wu-httpd-k-restart">注意：先重启服务 httpd -k restart</span><a href="#zhu-yi-xian-chong-qi-fu-wu-httpd-k-restart" class="header-anchor">.</a></h6><p><img src="/2020/05/18/16407/image-20200518140403480.png" alt="image-20200518140403480"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 安装和配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> apache </tag>
            
            <tag> php环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo上传图片出现问题-解决</title>
      <link href="/2020/05/15/17541.html"/>
      <url>/2020/05/15/17541.html</url>
      
        <content type="html"><![CDATA[<h2><span id="hexo-shang-chuan-tu-pian-wen-ti">hexo上传图片问题</span><a href="#hexo-shang-chuan-tu-pian-wen-ti" class="header-anchor">.</a></h2><ul><li><h4><span id="you-yu-tu-pian-shang-chuan-lu-jing-yu-bo-ke-wen-dang-zhong-lu-jing-bu-tong-yi">由于图片上传路径与博客文档中路径不统一</span><a href="#you-yu-tu-pian-shang-chuan-lu-jing-yu-bo-ke-wen-dang-zhong-lu-jing-bu-tong-yi" class="header-anchor">.</a></h4></li></ul><p>安装插件   </p><pre><code>    npm i hexo-asset-image --save  </code></pre><p>配置_config.yml 文件  修改 post_asset_folder</p><pre><code>    post_asset_folder: true</code></pre><p>配置完后，在使用 hexo new post “” 时 会生成一个 与博客名一样的文件夹 ，这个文件夹用于装 资源的（博客里面的图片。。。）</p><p>这样就强制把上传的本地资源目录 转移到 /…../source/_posts/博客文件名/  下<br><code>YYYY : 年份 如 2020</code></p><blockquote><p>上传过程中 改的路径有两个</p><p>一个 是博客文档（.md）中 ![](随便一个目录/test.png)<br> ==&gt;       HTML中 &lt;img    src= “/YYYY/日期/博客名/test.png”&gt;<br>这个可以用 F12 去博客页面查看 文件路径是否更改</p><p>另一个 是 把 在 博客文件夹下 的 资源文件<br>它的目录 ：/…../source/_posts/博客文件名/ 资源文件 如</p><p>/…../source/_posts/博客文件名/ test.png  ==&gt;  github上 /YYYY/日期/博客名/test.png </p><p>路径是根据这个设定的</p><p><img src="/2020/05/15/17541/image-20200519132755390.png" alt></p></blockquote><blockquote><p>如果 两路径相同 引入成功</p></blockquote><p>前者的格式可能是 /年/日期/博客名/文件夹/文件<br>        或  /年/日期/博客名/文件</p><p>后者的格式只有 /年/日期/博客名/文件</p><h5><span id="ke-yi-kan-chu">可以看出</span><a href="#ke-yi-kan-chu" class="header-anchor">.</a></h5><p>​    1.资源文件必须放置在 博客名文件夹下 且 不能有子文件夹</p><p>​    2.博客文件 中 引用文件路径可以随便写，只要文件名是对的就行 当然乱写 会导致你在编辑器里 看不到图片     <strong>推荐</strong>： 就写相对路径 即 （ ./博客名/资源文件名 或 博客名/资源文件名 ）</p><blockquote><p>当你的资源文件 不在 博客名文件夹下  肯定是出错的</p></blockquote><ul><li><h4><span id="you-ke-neng-shi-lu-jing-shi-pi-pei-de-yuan-ben-shang-chuan-de-tu-pian-yi-sun-pi">有可能是路径是匹配的，原本上传的图片已损坏</span><a href="#you-ke-neng-shi-lu-jing-shi-pi-pei-de-yuan-ben-shang-chuan-de-tu-pian-yi-sun-pi" class="header-anchor">.</a></h4>  损坏 自己想办法</li></ul><p>弄张图片看看<br><img src="/2020/05/15/17541/2.png" alt></p><p>​</p>]]></content>
      
      
      <categories>
          
          <category> error </category>
          
      </categories>
      
      
        <tags>
            
            <tag> error </tag>
            
            <tag> 问题 </tag>
            
            <tag> 已解决 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown语法汇总</title>
      <link href="/2020/05/15/15918.html"/>
      <url>/2020/05/15/15918.html</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h2><span id="shi-me-shi-markdown">什么是 Markdown</span><a href="#shi-me-shi-markdown" class="header-anchor">.</a></h2><blockquote><p><strong>Markdown</strong> 是一种文本格式。你可以用它来控制文档的显示。使用Markdown，你可以创建各种样式的文字，添加图片，并且可以创建表格 等等。</p></blockquote><p>​    <strong>由于各编辑器的Markdown语法存在差异 所以 这里 主要是 关于 ==vscode== 和 ==typora==两款编辑器的 基本使用</strong></p><p><strong>下面是两编辑器开启扩展功能的方法</strong></p><ul><li><p>vscode 安装 Markdown Preview插件</p><img src="/2020/05/15/15918/vscode_MPE.png" style="zoom:50%;"></li><li><p>typora设置中勾选扩展选项</p><img src="/2020/05/15/15918/Typora_MPE.png" style="zoom: 50%;"></li></ul><h3><span id="yu-fa-shuo-ming">语法说明</span><a href="#yu-fa-shuo-ming" class="header-anchor">.</a></h3><h4><span id="1-biao-ti">1.标题</span><a href="#1-biao-ti" class="header-anchor">.</a></h4><pre><code># h1 ## h2 ### h3#### h4##### h5###### h6------------------------------------------------------如果你想要给你的标题添加`id`或者`class`，就在标题最后添加{#id .class1 .class2}。如：# 标题 {#id .class}/*这是一个MPE扩展的特性*/</code></pre><ul><li><p>演示：</p><h1><span id="h1">h1</span><a href="#h1" class="header-anchor">.</a></h1><h2><span id="h2">h2</span><a href="#h2" class="header-anchor">.</a></h2><h3><span id="h3">h3</span><a href="#h3" class="header-anchor">.</a></h3><h4><span id="h4">h4</span><a href="#h4" class="header-anchor">.</a></h4><h5><span id="h5">h5</span><a href="#h5" class="header-anchor">.</a></h5><h6><span id="h6">h6</span><a href="#h6" class="header-anchor">.</a></h6></li></ul><h4><span id="2-qiang-diao">2.强调</span><a href="#2-qiang-diao" class="header-anchor">.</a></h4><pre><code>  *斜体*  _斜体_  **粗体**  __粗体__  _组**组合**合_  *组__组合__合*  **组_组合_合**  __组*组合*合__  ~~删除~~  ==标记==</code></pre><ul><li><p>演示：</p><p><em>斜体</em><br><em>斜体</em></p><p><strong>粗体</strong><br><strong>粗体</strong></p><p><em>组<strong>组合</strong>合</em><br><em>组<strong>组合</strong>合</em><br><strong>组_组合_合</strong><br><strong>组<em>组合</em>合</strong> </p><p><del>删除</del><br>==标记==</p></li></ul><h4><span id="3-lie-biao">3.列表</span><a href="#3-lie-biao" class="header-anchor">.</a></h4><h5><span id="wu-xu-lie-biao">无序列表</span><a href="#wu-xu-lie-biao" class="header-anchor">.</a></h5><pre><code>- 列表1- 列表2    - 列表2.1        - 列表2.1.1            - 列表2.1.1.1</code></pre><ul><li><p>演示：</p></li><li><p>列表1</p></li><li><p>列表2</p><ul><li>列表2.1<ul><li>列表2.1.1<ul><li>列表2.1.1.1 </li></ul></li></ul></li></ul></li></ul><h5><span id="you-xu-lie-biao">有序列表</span><a href="#you-xu-lie-biao" class="header-anchor">.</a></h5><pre><code>  1. 列表1  1. 列表2      1. 列表2.1          1. 列表2.1.1              1. 列表2.1.1.1      1. 列表2.2</code></pre><ul><li>演示：</li></ul><ol><li>列表1</li><li>列表2<ol><li>列表2.1<ol><li>列表2.1.1<ol><li>列表2.1.1.1</li></ol></li></ol></li><li>列表2.2</li></ol></li></ol><h4><span id="4-tian-jia-tu-pian">4.添加图片</span><a href="#4-tian-jia-tu-pian" class="header-anchor">.</a></h4><pre><code>![alt内容](images/github.png)![alt内容](图片url)![alt内容](images/github.png &quot;title光标悬停是显示&quot;)#改大小 以下只是方案 不是所有编辑器的都支持![alt内容](images/github.png){:width:30% hight:30%}![alt内容](images/github.png =30x30)&lt;img src=&quot;github.png&quot; style=&quot;zoom:50%&quot;&gt; #在md文件中HTML代码直接转为HTML实体</code></pre><p><img src="/2020/05/15/15918/github.png" alt="Markdown语法" title="title:Markdown语法"></p><img src="/2020/05/15/15918/github.png" style="zoom:20%;" alt="采用HTML标签"><h4><span id="5-lian-jie">5.链接</span><a href="#5-lian-jie" class="header-anchor">.</a></h4><pre><code>[显示文字](网页url)[github](https://github.com)</code></pre><p><a href="https://github.com" target="_blank" rel="noopener">github</a></p><h4><span id="6-yin-yong">6.引用</span><a href="#6-yin-yong" class="header-anchor">.</a></h4><pre><code>&gt; 引用的内容</code></pre><blockquote><p>引用的内容</p></blockquote><h4><span id="7-fen-ge-fu">7.分割符</span><a href="#7-fen-ge-fu" class="header-anchor">.</a></h4><pre><code>--- 连字符***星号___下划线</code></pre><hr><p>连字符</p><hr><p>星号</p><hr><p>下划线</p><h4><span id="8-xing-nei-dai-ma">8.行内代码</span><a href="#8-xing-nei-dai-ma" class="header-anchor">.</a></h4><pre><code>这个就是 `行内代码` 吗？</code></pre><p>这个就是 <code>行内代码</code> 吗？</p><h4><span id="9-dai-ma-kuai">9.代码块</span><a href="#9-dai-ma-kuai" class="header-anchor">.</a></h4><pre><code>​```我是代码块内容​```#语法高亮 在上吗的符号后 加上高亮显示的语言​```javascript    var id = document.getElementById(&quot;id&quot;);​```</code></pre><pre><code>我是代码块内容</code></pre><pre class="line-numbers language-javascript"><code class="language-javascript">    <span class="token keyword">var</span> id <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4><span id="10-dai-ma-kuai-class-mpe-kuo-zhan-de-te-xing">10.代码块class （MPE扩展的特性）</span><a href="#10-dai-ma-kuai-class-mpe-kuo-zhan-de-te-xing" class="header-anchor">.</a></h4><pre><code>#给代码块设置 class​```javascript {.class1 .class}    var id = document.getElementById(&quot;id&quot;);​```</code></pre><pre><code>#你想要显示代码行数，只需填加 line-numbers class 即可​```javascript {.line-numbers}    var id = document.getElementById(&quot;id&quot;);​```#高亮代码行数 添加 highlight  //typora不支持​```javascript {highlight=10}    var id = document.getElementById(&quot;id&quot;);    var id = document.getElementById(&quot;id&quot;);    var id = document.getElementById(&quot;id&quot;);    var id = document.getElementById(&quot;id&quot;);    var id = document.getElementById(&quot;id&quot;);    var id = document.getElementById(&quot;id&quot;);    var id = document.getElementById(&quot;id&quot;);    var id = document.getElementById(&quot;id&quot;);​```</code></pre><pre class="line-numbers language-javascript"><code class="language-javascript">    <span class="token keyword">var</span> id <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-javascript"><code class="language-javascript">    <span class="token keyword">var</span> id <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> id <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> id <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> id <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> id <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> id <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> id <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> id <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> id <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4><span id="11-ren-wu-lie-biao">11.任务列表</span><a href="#11-ren-wu-lie-biao" class="header-anchor">.</a></h4><pre><code>- [x] 任务失败- [ ]任务成功</code></pre><ul><li><input checked disabled type="checkbox"> 任务失败</li><li><input disabled type="checkbox"> 任务成功</li></ul><h4><span id="12-biao-ge">12.表格</span><a href="#12-biao-ge" class="header-anchor">.</a></h4><pre><code>head1 | head2-----:|:-----:cell1 | cell2cell3 | cell4#可以HTML的table标签替换拓展:-----: 居中:-----    居左 默认 -----:    居右</code></pre><table><thead><tr><th align="right">head1</th><th align="center">head2</th></tr></thead><tbody><tr><td align="right">cell1</td><td align="center">cell2</td></tr><tr><td align="right">cell3</td><td align="center">cell4</td></tr></tbody></table><h4><span id="13-emoji">13.Emoji</span><a href="#13-emoji" class="header-anchor">.</a></h4><pre><code>:smile::horse::fa-car:</code></pre><p>:smile:<br>:horse:</p><p>:fa-car:</p><blockquote><p><a href="https://www.webfx.com/tools/emoji-cheat-sheet/" target="_blank" rel="noopener">Emoji</a></p></blockquote><h4><span id="14-shang-biao-xia-biao-jiao-zhu-suo-lue-zhu-shi">14.上标 下标 脚注 缩略 注释</span><a href="#14-shang-biao-xia-biao-jiao-zhu-suo-lue-zhu-shi" class="header-anchor">.</a></h4><pre><code>#上标30^2^#下标H~2~O#脚注一个具有注脚的文本。[^2][^2]: 注脚的解释#缩略_[HTML]:Hyper Text Markup Language_[W3C]:World Wide Web Consortium#注释*[HTML]:超文本标记语言</code></pre><p>30^2^</p><p>H<del>2</del>O</p><p>一个具有注脚的文本。<a href="注脚的解释">^2</a></p><p>_[HTML]:Hyper Text Markup Language<br>_[W3C]:World Wide Web Consortium</p><p>*[HTML]:超文本标记语言</p><h4><span id="15-shu-xue-gong-shi-katex">15.数学公式 KaTeX</span><a href="#15-shu-xue-gong-shi-katex" class="header-anchor">.</a></h4><p>==vscode==的Markdown Preview Enhanced：支持 KaTex 和 MathJax</p><img src="/2020/05/15/15918/math1.png" alt="preview" style="zoom:50%;"><blockquote><p>katex使用参考 <a href="https://khan.github.io/KaTeX/function-support.html" target="_blank" rel="noopener">https://khan.github.io/KaTeX/function-support.html</a></p></blockquote><h4><span id="16-shu-xue-gong-shi-mathjax">16.数学公式 MathJax</span><a href="#16-shu-xue-gong-shi-mathjax" class="header-anchor">.</a></h4><p>==Typora==使用的是</p><blockquote><p>使用参考 <a href="https://support.typora.io/Math/" target="_blank" rel="noopener">https://support.typora.io/Math/</a></p></blockquote><h4><span id="17-tu-xiang">17.图像</span><a href="#17-tu-xiang" class="header-anchor">.</a></h4><blockquote><p><a href="https://shd101wyy.github.io/markdown-preview-enhanced/#/zh-cn/diagrams" target="_blank" rel="noopener">略</a></p></blockquote><h4><span id="18-mu-lu-lie-biao-toc">18.目录列表(TOC)</span><a href="#18-mu-lu-lie-biao-toc" class="header-anchor">.</a></h4><blockquote><p><a href="https://shd101wyy.github.io/markdown-preview-enhanced/#/zh-cn/toc" target="_blank" rel="noopener">略</a></p></blockquote><p>个人还是喜欢 typora的快捷方式</p><h4><span id="19-dao-ru-wen-jian-typora-bu-zhi-chi">19.导入文件(typora不支持)</span><a href="#19-dao-ru-wen-jian-typora-bu-zhi-chi" class="header-anchor">.</a></h4><pre><code>@import &quot;文件路径&quot;@import &quot;images/github.png&quot;</code></pre><p>@import “1.csv”</p><p>@import “1.c”</p><p>@import “1”</p><h5><span id="zhi-chi-de-wen-jian">支持的文件</span><a href="#zhi-chi-de-wen-jian" class="header-anchor">.</a></h5><p>.jpeg(.jpg), .gif, .png, .apng, .svg, .bmp 文件将会直接被当作 markdown 图片被引用。<br>.csv 文件将会被转换成 markdown 表格。<br>.mermaid 将会被 mermaid 渲染。<br>.dot 文件将会被 viz.js (graphviz) 渲染。<br>.plantuml(.puml) 文件将会被 PlantUML 渲染。<br>.html 将会直接被引入。<br>.js 将会被引用为 <script src="你的 js 文件"></script>。<br>.less 和 .css 将会被引用为 style。目前 less 只支持本地文件。.css 文件将会被引用为 <link rel="stylesheet" href="你的 css 文件">。<br>.pdf 文件将会被 pdf2svg 转换为 svg 然后被引用。<br>markdown 将会被分析处理然后被引用。<br>其他所有的文件都将被视为代码块</p><h5><span id="she-zhi-tu-pian">设置图片</span><a href="#she-zhi-tu-pian" class="header-anchor">.</a></h5><pre><code>    @import &quot;test.png&quot; {width=&quot;300px&quot; height=&quot;200px&quot; title=&quot;图片的标题&quot; alt=&quot;我的 alt&quot;}</code></pre><h5><span id="qi-ta">其他</span><a href="#qi-ta" class="header-anchor">.</a></h5> <img src="/2020/05/15/15918/import.png" alt="import" style="zoom: 50%;"><h4><span id="20-huan-deng-pian">20.幻灯片</span><a href="#20-huan-deng-pian" class="header-anchor">.</a></h4><blockquote><p><a href="https://shd101wyy.github.io/markdown-preview-enhanced/#/zh-cn/presentation" target="_blank" rel="noopener">https://shd101wyy.github.io/markdown-preview-enhanced/#/zh-cn/presentation</a></p></blockquote><h4><span id="21-pandoc">21.PanDoc</span><a href="#21-pandoc" class="header-anchor">.</a></h4><blockquote><p><a href="https://shd101wyy.github.io/markdown-preview-enhanced/#/zh-cn/pandoc" target="_blank" rel="noopener">https://shd101wyy.github.io/markdown-preview-enhanced/#/zh-cn/pandoc</a></p></blockquote><h4><span id="22-zi-ding-yi-lie-biao-typora-bu-zhi-chi">22.自定义列表（typora不支持）</span><a href="#22-zi-ding-yi-lie-biao-typora-bu-zhi-chi" class="header-anchor">.</a></h4><pre><code>tags:: flower: grassAuthors : lmk: liuminkai</code></pre><p>tags:</p><p>: flower</p><p>: grass</p><p>Authors </p><p>: lmk</p><p>: liuminkai</p><h4><span id="23-gan-te-tu-typora-xian-shi-de-hao-kan">23.甘特图(typora显示的好看)</span><a href="#23-gan-te-tu-typora-xian-shi-de-hao-kan" class="header-anchor">.</a></h4><p>gantt<br>        dateFormat  YYYY-MM-DD<br>        title Adding GANTT diagram functionality to mermaid<br>        section 现有任务<br>        已完成               :done,    des1, 2014-01-06,2014-01-08<br>        进行中               :active,  des2, 2014-01-09, 3d<br>        计划一               :         des3, after des2, 5d<br>        计划二               :         des4, after des3, 5d</p><pre class="mermaid">gantt        dateFormat  YYYY-MM-DD        title Adding GANTT diagram functionality to mermaid        section 现有任务        已完成               :done,    des1, 2014-01-06,2014-01-08        进行中               :active,  des2, 2014-01-09, 3d        计划一               :         des3, after des2, 5d        计划二               :         des4, after des3, 5d</pre><blockquote><p><a href="https://mermaidjs.github.io/#/" target="_blank" rel="noopener">甘特图语法</a></p></blockquote><h4><span id="24-uml-tu">24.UML图</span><a href="#24-uml-tu" class="header-anchor">.</a></h4><p>sequenceDiagram<br>张三 -&gt;&gt; 李四: 你好！李四, 最近怎么样?<br>李四–&gt;&gt;王五: 你最近怎么样，王五？<br>李四–x 张三: 我很好，谢谢!<br>李四-x 王五: 我很好，谢谢!<br>Note right of 王五: 李四想了很长时间, 文字太长了<br>不适合放在一行.</p><p>李四–&gt;&gt;张三: 打量着王五…<br>张三-&gt;&gt;王五: 很好… 王五, 你怎么样?</p><pre class="mermaid">sequenceDiagram张三 ->> 李四: 你好！李四, 最近怎么样?李四-->>王五: 你最近怎么样，王五？李四--x 张三: 我很好，谢谢!李四-x 王五: 我很好，谢谢!Note right of 王五: 李四想了很长时间, 文字太长了<br>不适合放在一行.李四-->>张三: 打量着王五...张三->>王五: 很好... 王五, 你怎么样?</pre><blockquote><p><a href="https://mermaidjs.github.io/#/" target="_blank" rel="noopener">Mermaid语法</a></p></blockquote><h4><span id="25-liu-cheng-tu">25.流程图</span><a href="#25-liu-cheng-tu" class="header-anchor">.</a></h4><p>graph LR<br>A[长方形] – 链接 –&gt; B((圆))<br>A –&gt; C(圆角长方形)<br>B –&gt; D{菱形}<br>C –&gt; D</p><pre class="mermaid">graph LRA[长方形] -- 链接 --> B((圆))A --> C(圆角长方形)B --> D{菱形}C --> D</pre><blockquote><p><a href="https://mermaidjs.github.io/#/" target="_blank" rel="noopener">Mermaid语法</a></p></blockquote><h4><span id="flowchart-liu-cheng-tu-bu-zhi-dao-zhi-bu-zhi-chi">Flowchart流程图(不知道支不支持)</span><a href="#flowchart-liu-cheng-tu-bu-zhi-dao-zhi-bu-zhi-chi" class="header-anchor">.</a></h4><p>flowchat<br>st=&gt;start: 开始<br>e=&gt;end: 结束<br>op=&gt;operation: 我的操作<br>cond=&gt;condition: 确认？</p><p>st-&gt;op-&gt;cond<br>cond(yes)-&gt;e<br>cond(no)-&gt;op</p><pre class="mermaid">flowchatst=>start: 开始e=>end: 结束op=>operation: 我的操作cond=>condition: 确认？st->op->condcond(yes)->econd(no)->op</pre><blockquote><p><a href="http://adrai.github.io/flowchart.js/" target="_blank" rel="noopener">Flowchart流程图语法</a></p></blockquote><hr><p>参考:</p><blockquote><p>Markdown Preview: <a href="https://shd101wyy.github.io/markdown-preview-enhanced/#/zh-cn/" target="_blank" rel="noopener">https://shd101wyy.github.io/markdown-preview-enhanced/#/zh-cn/</a></p><p>CSDN:<a href="https://editor.csdn.net/md/#fn2" target="_blank" rel="noopener">https://editor.csdn.net/md/#fn2</a></p><p>Typora:<a href="https://support.typora.io/" target="_blank" rel="noopener">https://support.typora.io/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的常用快捷键Win10</title>
      <link href="/2020/05/15/12485.html"/>
      <url>/2020/05/15/12485.html</url>
      
        <content type="html"><![CDATA[<h2><span id="wo-de-chang-yong-kuai-jie-jian-win10-chu-yi-xie-jian-wai-ru-ctrl-c-ctrl-v">我的常用快捷键Win10 除一些键外（如Ctrl+C、Ctrl+v）</span><a href="#wo-de-chang-yong-kuai-jie-jian-win10-chu-yi-xie-jian-wai-ru-ctrl-c-ctrl-v" class="header-anchor">.</a></h2><table>    <tr>        <th>按键</th>        <th>操作</th>    </tr>    <tr><td>Win+Ctrl+D</td><td>添加虚拟桌面</td></tr>    <tr><td>Win+Ctrl+←/→</td><td>虚拟桌面的切换</td></tr>    <tr><td>Win+Ctrl+F4</td><td>关闭当前虚拟桌面</td></tr>    <tr><td>Win+Tab</td><td>打开任务视图</td></tr>    <tr><td>Win+L</td><td>锁定电脑</td></tr>    <tr><td>Win+D</td><td>显示和隐藏桌面</td></tr>    <tr><td>Win+E</td><td>打开文件资源管理器</td></tr>    <tr><td>Win+I</td><td>打开设置</td></tr>    <tr><td>Win+L</td><td>锁定电脑</td></tr>    <tr><td>Win+M</td><td>最小化所有窗口</td></tr>    <tr><td>Win+Shift+M</td><td>还原最小化所有窗口</td></tr>    <tr><td>Win+R</td><td>打开运行对话框</td></tr>    <tr><td>Win+S</td><td>打开搜索</td></tr>    <tr><td>Win+V</td><td>查看剪切板</td></tr>    <tr><td>Win+.</td><td>打开表情符号面板</td></tr>    <tr><td>Win+;</td><td>打开表情符号面板</td></tr>    <tr><td>Win+,</td><td>临时速览桌面</td></tr>    <tr><td>Win+↑</td><td>加大窗口/窗口向上变形</td></tr>    <tr><td>Win+↓</td><td>减小窗口/窗口向下变形</td></tr>    <tr><td>Win+←</td><td>窗口向左变形</td></tr>    <tr><td>Win+→</td><td>窗口向右变形</td></tr>    <tr><td>---</td><td>---</td></tr>    <tr><td>F5</td><td>刷新活动界面</td></tr>    <tr><td>Alt+Page up</td><td>向上移动一个屏幕</td></tr>    <tr><td>Alt+Page down</td><td>向下移动一个屏幕</td></tr>    <tr><td>Alt+←</td><td>返回</td></tr>    <tr><td>Alt+→</td><td>前进</td></tr>    <tr><td>Alt+Tab</td><td>在应用之间切换</td></tr>    <tr><td>Alt+F4</td><td>关闭活动项</td></tr>    <tr><td>Alt+Enter</td><td>查看所选项目的属性</td></tr>    <tr><td>Ctrl+Shift+Esc</td><td>打开任务管理器</td></tr>    <tr><td>Ctrl+Alt+Del</td><td>reboot</td></tr></table><p><a href="https://blog.csdn.net/weixin_41225491/article/details/80060576?utm_source=app" target="_blank" rel="noopener">参考</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 快捷键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>first</title>
      <link href="/2020/05/13/39056.html"/>
      <url>/2020/05/13/39056.html</url>
      
        <content type="html"><![CDATA[<h1><span id="zhe-shi-wo-de-di-yi-ci-xie-bo-ke-ye-shi-di-yi-ci-shi-yong-hexo-githubpages-da-jian-bo-ke-wo-jiang-hui-shi-yong-gai-bo-ke-ji-lu-wo-de-xue-xi-guo-cheng-he-ji-zhu-fen-xiang-xi-wang-jiang-lai-de-mei-yi-tian-hui-yue-lai-yue-mei-hao-mei-tian-du-you-shou-huo">这是我的第一次写博客，也是第一次使用hexo+githubPages搭建博客，我将会使用该博客记录我的学习过程和技术分享，希望将来的每一天会越来越美好，每天都有收获。</span><a href="#zhe-shi-wo-de-di-yi-ci-xie-bo-ke-ye-shi-di-yi-ci-shi-yong-hexo-githubpages-da-jian-bo-ke-wo-jiang-hui-shi-yong-gai-bo-ke-ji-lu-wo-de-xue-xi-guo-cheng-he-ji-zhu-fen-xiang-xi-wang-jiang-lai-de-mei-yi-tian-hui-yue-lai-yue-mei-hao-mei-tian-du-you-shou-huo" class="header-anchor">.</a></h1>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
